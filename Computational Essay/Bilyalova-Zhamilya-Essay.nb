(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1221373,      26023]
NotebookOptionsPosition[   1198862,      25587]
NotebookOutlinePosition[   1212333,      25882]
CellTagsIndexPosition[   1212290,      25879]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The distribution of amino acid changes in different species", "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],

Cell["\<\
Analysis and comparison of A=to-I RNA editing in cephalopod species (squids \
and octopuses) and humans.\
\>", "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],

Cell["Zhamilya Bilyalova, Jun. 24,  2018", "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],

Cell[CellGroupData[{

Cell["Introduction: What is RNA editing?", "Section",ExpressionUUID->"fed208f3-5704-4898-81e2-a7b831d0b28a"],

Cell["\<\
RNA editing is a process that changes a RNA transcript such that it would no \
longer correspond to a sequence of DNA in a genome. There are many types of \
changes. A-to-I RNA editing is widespread in animals and results in the \
modification of a adenosine to inosine which will be read as a guanine. \
Nucleotides are being changed by enzymes that catalyze the editing.\
\>", "Text",ExpressionUUID->"7966c5db-10b8-455f-985c-96961bb670f6"],

Cell[TextData[{
 StyleBox["Nucleobases",
  IgnoreSpellCheck->True],
 " that participate in A-to-I editing in mRNA:"
}], "CodeText",ExpressionUUID->"723c9d9e-b820-43df-a4bd-008182b248fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"ChemicalData", "[", "#", "]"}], ",", "#", ",", "Left"}], 
        "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Inosine\>\"", ",", "\"\<Adenine\>\"", ",", "\"\<Guanine\>\""}], 
       "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "2"}]}], "]"}]], "Code",
 CellLabel->"In[78]:=",ExpressionUUID->"f02e312f-652f-4ed7-b8ec-ab33496c74a9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{
            AbsoluteThickness[0.55], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {440.26, 73.69}], 
            
            LineBox[{{452.7522692310102, 56.429233661877234`}, {469.575, 
             33.185}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{469.575, 33.185}, {498.89, -7.32}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {440.26, 73.69}], 
            
            LineBox[{{452.81259959734916`, 90.90694190232243}, {469.715, 
             114.09}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{469.715, 114.09}, {499.17, 154.49}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {674.85, -35.5}], 
            
            LineBox[{{694.3302620164724, -26.868068762501586`}, {
             703.195, -22.94}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {731.54, -10.38}], 
            LineBox[{{703.195, -22.94}, {
             713.5372010949369, -18.357250105753845`}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {675.23, 182.06}], 
            
            LineBox[{{694.6790357984104, 173.35793980534103`}, {703.525, 
             169.4}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {731.82, 156.74}], 
            
            LineBox[{{703.525, 169.4}, {713.8460589883196, 
             164.78206019465895`}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {535.48, 323.84}], 
            
            LineBox[{{521.1957475008595, 308.0301620609155}, {501.96, 
             286.74}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{501.96, 286.74}, {468.44, 249.64}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {535.48, 323.84}], 
            
            LineBox[{{528.9300386927782, 344.1153261870978}, {525.95, 
             353.34}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {516.42, 382.84}], 
            
            LineBox[{{525.95, 353.34}, {522.4731853293424, 
             364.1024378577542}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, -382.84}], 
            
            LineBox[{{{281.6, -361.5329390783403}, {281.6, -332.84}}, {{
             291.6, -361.5329390783403}, {291.6, -332.84}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{281.6, -332.84}, {281.6, -282.84}}, {{
             291.6, -332.84}, {291.6, -282.84}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83, -102.37}], 
            
            LineBox[{{449.086635016809, -108.40519318437947`}, {
             420.515, -117.605}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{420.515, -117.605}, {373.2, -132.84}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83, -102.37}], 
            
            LineBox[{{479.39050468490615`, -118.31026408489372`}, {
             497.01, -142.605}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{497.01, -142.605}, {526.19, -182.84}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, -82.84}], 
            
            LineBox[{{303.6528208942562, -92.68573954633729}, {
             329.9, -107.84}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{329.9, -107.84}, {373.2, -132.84}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, -82.84}], 
            
            LineBox[{{269.54717910574385`, -92.68573954633727}, {
             243.3, -107.84}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{243.3, -107.84}, {200., -132.84}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, -82.84}], 
            LineBox[{{286.6, -63.14895412463093}, {286.6, -51.84}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, -20.84}], 
            LineBox[{{286.6, -51.84}, {286.6, -40.531045875369074`}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83, -263.32}], 
            
            LineBox[{{{475.36556329360144`, -244.46105322362843`}, {
             492.986, -220.162}}, {{
             483.41356329360144`, -250.29705322362844`}, {
             501.034, -225.99800000000002`}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{492.986, -220.162}, {522.166, -179.922}}, {{
             501.034, -225.99800000000002`}, {530.214, -185.758}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83, -263.32}], 
            
            LineBox[{{449.08721294125576`, -257.28301226301886`}, {
             420.515, -248.08}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{420.515, -248.08}, {373.2, -232.84}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {200., -232.84}], 
            LineBox[{{217.05282089425617`, -242.68573954633726`}, {
             243.3, -257.84}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{243.3, -257.84}, {286.6, -282.84}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {200., -232.84}], 
            
            LineBox[{{{195., -213.14895412463093`}, {195., -182.84}}, {{
             205., -213.14895412463093`}, {205., -182.84}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{195., -182.84}, {195., -132.84}}, {{205., -182.84}, {
             205., -132.84}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{594.05, 23.42}, {634.45, -6.04}}], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {674.85, -35.5}], 
            
            LineBox[{{634.45, -6.04}, {
             657.6340724427546, -22.94600926147403}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{594.05, 23.42}, {546.47, 8.05}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{546.47, 8.05}, {498.89, -7.32}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{594.05, 23.42}, {594.135, 73.42}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{594.135, 73.42}, {594.22, 123.42}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{498.89, -7.32}, {483.36, -54.845}}], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83, -102.37}], 
            
            LineBox[{{483.36, -54.845}, {
             473.9462755227501, -83.65293662468129}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{594.22, 123.42}, {634.725, 152.74}}], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.05212093280024903], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {675.23, 182.06}], 
            
            LineBox[{{634.725, 152.74}, {657.9702456480894, 
             169.56633261083766`}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{594.22, 123.42}, {546.695, 138.955}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{546.695, 138.955}, {499.17, 154.49}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{499.17, 154.49}, {483.805, 202.065}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{483.805, 202.065}, {468.44, 249.64}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{378.2, -132.84}, {378.2, -182.84}}, {{
             368.2, -132.84}, {368.2, -182.84}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{378.2, -182.84}, {378.2, -232.84}}, {{
             368.2, -182.84}, {368.2, -232.84}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{373.2, -232.84}, {329.9, -257.84}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{329.9, -257.84}, {286.6, -282.84}}]}}}, {}, {}}, {
        ImageSize -> {{0., 191.86149331449073`}, {0., 278.0941083077464}}, 
         PlotRange -> {{184.0454, 747.7746000000001}, {-412.2220917507381, 
          404.8765688130536}}}],"\"Inosine\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{{{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83000000000004`,
              14.97}], 
            
            LineBox[{{448.7927390941019, 8.839527163361687}, {
             420.52, -0.2649999999999997}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{420.52, -0.2649999999999997}, {373.21, -15.5}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83000000000004`,
              14.97}], 
            
            LineBox[{{479.57188995147976`, -1.2203681356335796`}, {
             497.01, -25.265}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{497.01, -25.265}, {526.1899999999999, -65.5}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {467.83000000000004`,
              14.97}], 
            
            LineBox[{{474.0421993026248, 33.98074906005728}, {
             477.46000000000004`, 44.44}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {487.09, 73.91}], 
            
            LineBox[{{477.46000000000004`, 44.44}, {480.8778006973753, 
             54.89925093994272}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             467.83000000000004`, -145.97}], 
            
            LineBox[{{448.7927390941018, -139.83952716336168`}, {
             420.52, -130.735}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{420.52, -130.735}, {373.21, -115.5}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             467.83000000000004`, -145.97}], 
            
            LineBox[{{{475.54838995147975`, -126.86163186436642`}, {
             492.9865, -102.81700000000001`}}, {{
             483.5953899514798, -132.69763186436643`}, {
             501.0335, -108.65299999999999`}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{492.9865, -102.81700000000001`}, {
             522.1664999999999, -62.58200000000001}}, {{
             501.0335, -108.65299999999999`}, {
             530.2135, -68.41799999999999}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, -165.5}], 
            
            LineBox[{{303.9208810206263, -155.50064598739965`}, {
             329.905, -140.5}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{329.905, -140.5}, {373.21, -115.5}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, -165.5}], 
            
            LineBox[{{{266.77961894742526`, -159.82977999273976`}, {
             240.8, -144.83}}, {{271.77961894742526`, -151.16977999273973`}, {
             245.8, -136.17}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{240.8, -144.83}, {197.5, -119.83}}, {{
             245.8, -136.17}, {202.5, -111.17}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {200., -15.5}], 
            
            LineBox[{{{214.8203810525748, -1.169779992739734}, {240.8, 
             13.830000000000002`}}, {{
             219.8203810525748, -9.829779992739738}, {245.8, 
             5.169999999999999}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{240.8, 13.830000000000002`}, {284.1, 38.83}}, {{245.8, 
             5.169999999999999}, {289.1, 30.169999999999998`}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {200., -15.5}], 
            LineBox[{{200., -35.5}, {200., -65.5}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{200., -65.5}, {200., -115.5}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, 134.5}], 
            LineBox[{{286.6, 114.5}, {286.6, 84.5}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{286.6, 84.5}, {286.6, 34.5}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, 134.5}], 
            
            LineBox[{{269.2797802551531, 144.5004993870414}, {259.755, 
             150.}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {232.91, 165.5}], 
            
            LineBox[{{259.755, 150.}, {250.2302197448469, 
             155.49950061295857`}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {286.6, 134.5}], 
            
            LineBox[{{303.9210261483136, 144.4991026182071}, {
             313.45000000000005`, 150.}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.08676503507910369], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {340.3, 165.5}], 
            
            LineBox[{{313.45000000000005`, 150.}, {322.9789738516864, 
             155.50089738179287`}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{378.21, -15.5}, {378.21, -65.5}}, {{368.21, -15.5}, {
             368.21, -65.5}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{378.21, -65.5}, {378.21, -115.5}}, {{368.21, -65.5}, {
             368.21, -115.5}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{373.21, -15.5}, {329.905, 9.5}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{329.905, 9.5}, {286.6, 34.5}}]}}}, {}, {}}, {
        ImageSize -> {{0., 115.2538}, {0., 123.29938207805996`}}, 
         PlotRange -> {{177.5, 535.9757}, {-195.5, 188.}}}],"\"Adenine\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{{{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {104.61, 41.32}], 
            LineBox[{{104.61, 21.32}, {104.61, 0.08500000000000085}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{104.61, 0.08500000000000085}, {104.61, -41.15}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {104.61, 41.32}], 
            LineBox[{{87.29085396297108, 51.3223587492184}, {
             68.91499999999999, 61.935}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{68.91499999999999, 61.935}, {33.22, 82.55}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {104.61, 41.32}], 
            
            LineBox[{{121.93068407902106`, 51.319695147090535`}, {140.335, 
             61.94499999999999}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {176.06, 82.57}], 
            
            LineBox[{{140.335, 61.94499999999999}, {158.73931592097892`, 
             72.57030485290946}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{106.6785, -44.7195}, {
             70.98349999999999, -65.40450000000001}}, {{102.5415, -37.5805}, {
             66.84649999999999, -58.26550000000001}}}], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             33.22, -82.52000000000001}], 
            
            LineBox[{{{70.98349999999999, -65.40450000000001}, {
             52.59293074179571, -76.0617047935553}}, {{
             66.84649999999999, -58.26550000000001}, {
             48.45593074179571, -68.92270479355528}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{104.61, -41.15}, {140.45, -61.83500000000001}}], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             176.29, -82.52000000000001}], 
            
            LineBox[{{140.45, -61.83500000000001}, {
             158.96797825282655`, -72.52262221427785}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             33.22, -82.52000000000001}], 
            
            LineBox[{{
             15.90584405418868, -72.5090058493611}, {-2.5549999999999997`, \
-61.83500000000001}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{-2.5549999999999997`, -61.83500000000001}, {-38.33, \
-41.15}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{-42.4535, -41.15}, {-42.4535, 
             0.08500000000000085}}, {{-34.2065, -41.15}, {-34.2065, 
             0.08500000000000085}}}], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{-42.4535, 0.08500000000000085}, {-42.4535, 
             41.32}}, {{-34.2065, 0.08500000000000085}, {-34.2065, 
             41.32}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{-38.33, -41.15}, {-77.525, -53.894999999999996`}}], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {-116.72, -66.64}], 
            
            LineBox[{{-77.525, -53.894999999999996`}, {-97.70026385504065, \
-60.4553709103838}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{-38.33, 41.32}, {-2.5549999999999997`, 61.935}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{-2.5549999999999997`, 61.935}, {33.22, 82.55}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{-38.33, 41.32}, {-77.525, 54.07000000000001}}], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {-116.72, 
             66.82000000000001}], 
            
            LineBox[{{-77.525, 54.07000000000001}, {-97.70097746798163, 
             60.63317675001316}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{29.0965, 82.55}, {29.0965, 123.785}}, {{37.3435, 
             82.55}, {37.3435, 123.785}}}], 
            RGBColor[0.800498, 0.201504, 0.192061], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"O\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {33.22, 
             165.01999999999998`}], 
            
            LineBox[{{{29.0965, 123.785}, {29.0965, 143.36999999999998`}}, {{
             37.3435, 123.785}, {37.3435, 143.36999999999998`}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {-116.72, -66.64}], 
            
            LineBox[{{-128.48285734821974`, -50.46485898035406}, \
{-140.98000000000002`, -33.28}}], 
            RGBColor[0.4, 0.4, 0.4], 
            LineBox[{{-140.98000000000002`, -33.28}, {-165.24, 0.08}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {-116.72, -66.64}], 
            
            LineBox[{{-122.8945401021457, -85.66301381293181}, \
{-129.45499999999998`, -105.875}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {-142.19, -145.11}], 
            
            LineBox[{{-129.45499999999998`, -105.875}, {-136.0154598978543, \
-126.0869861870682}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.4, 0.4, 0.4], 
            
            LineBox[{{{-168.577, 2.5060000000000007`}, {-144.317, 
             35.876000000000005`}}, {{-161.90300000000002`, \
-2.3460000000000005`}, {-137.64300000000003`, 31.024}}}], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {-116.72, 
             66.82000000000001}], 
            
            LineBox[{{{-144.317, 35.876000000000005`}, {-131.81755134286502`, 
             53.0691822625142}}, {{-137.64300000000003`, 
             31.024}, {-125.14355134286504`, 48.2171822625142}}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             176.29, -82.52000000000001}], 
            
            LineBox[{{193.61068407902104`, -72.52030485290948}, {
             212.015, -61.89500000000001}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             247.73999999999998`, -41.27}], 
            
            LineBox[{{212.015, -61.89500000000001}, {
             230.41931592097893`, -51.269695147090545`}}]}}, {{
            AbsoluteThickness[0.55], 
            RGBColor[0.291989, 0.437977, 0.888609], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"N\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             176.29, -82.52000000000001}], 
            
            LineBox[{{176.2924242424064, -102.51999985307623`}, {
             176.295, -123.77}}], 
            RGBColor[
            0.43333333333333335`, 0.4666666666666667, 0.4666666666666667], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"H\"", FontSize -> Scaled[0.06853088961318425], FontWeight -> 
               Plain, ScriptSizeMultipliers -> 0.8, ScriptMinSize -> 8, 
               StripOnInput -> False], TraditionalForm], {
             176.29999999999998`, -165.01999999999998`}], 
            
            LineBox[{{176.295, -123.77}, {
             176.29757575759356`, -145.02000014692376`}}]}}}, {}, {}}, {
        ImageSize -> {{0., 145.91959999999997`}, {0., 125.89972105427208`}}, 
         PlotRange -> {{-177.6294, 265.74}, {-195.01999999999998`, 
          187.51999999999998`}}}],"\"Guanine\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 CellLabel->"Out[78]=",ExpressionUUID->"43fb48fc-ec60-4708-be4e-e5c2bf14d347"]
}, Open  ]],

Cell["\<\
A-to-I editing in messenger RNA (mRNA) can cause changes in the amino acid \
sequence of a protein (amino acid recoding). Codons, 64 combinations in \
total, are codes for specific amino acids (one amino acid can relate to more \
than one codon).\
\>", "Text",ExpressionUUID->"5991366a-5c2f-4e10-beb0-8470bd4bf06f"],

Cell[TextData[StyleBox["To find what codons correspond to a specific amino \
acid, we can implement this code: An example is given for amino acid \
glycine:", "CodeText"]], "Text",ExpressionUUID->"4cb7b510-e17f-47cc-9dbd-\
82c72dfc83fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"glycine\"",RowBox[{"Entity", "[", 
      RowBox[{"\"Chemical\"", ",", "\"Glycine\""}], "]"}],
    "\"Entity[\\\"Chemical\\\", \\\"Glycine\\\"]\"","\"chemical\""},
   "Entity"], "[", 
  StyleBox[
   RowBox[{"EntityProperty", "[", 
    RowBox[{"\"\<Chemical\>\"", ",", "\"\<Codons\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True], "]"}]], "Code",
 CellLabel->"In[79]:=",ExpressionUUID->"2efab65a-03c3-4064-a772-146cdb95e39d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"GGU\"\>", ",", "\<\"GGC\"\>", ",", "\<\"GGA\"\>", 
   ",", "\<\"GGG\"\>"}], "}"}]], "Output",
 CellLabel->"Out[79]=",ExpressionUUID->"d0ad85e1-68d6-4b8d-a632-d6aaa5704adc"]
}, Open  ]],

Cell["Properties of a specific amino acid:", "CodeText",ExpressionUUID->"132d2c22-d0a3-41aa-9e89-8910b6b8f167"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"\"glycine\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Chemical\"", ",", "\"Glycine\""}], "]"}],
     "\"Entity[\\\"Chemical\\\", \\\"Glycine\\\"]\"","\"chemical\""},
    "Entity"], "[", "\"\<Properties\>\"", "]"}], ";"}]], "Code",
 CellLabel->"In[80]:=",ExpressionUUID->"ef0cef5a-e820-4dcc-80be-10d30c7e6b1f"],

Cell["\<\
And this is a table of amino acids and their corresponding codons: header\
\>", "Text",ExpressionUUID->"55ac4139-02e0-4599-980a-dc7538769124"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"#", "[", 
         StyleBox[
          RowBox[{"EntityProperty", "[", 
           RowBox[{"\"\<Chemical\>\"", ",", "\"\<Codons\>\""}], "]"}],
          ShowSpecialCharacters->False,
          ShowStringCharacters->True,
          NumberMarks->True], "]"}]}], "}"}], "&"}], ",", "\n", 
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<Chemical\>\"", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Ser\>\"", ",", "\"\<Gly\>\"", ",", "\"\<Cys\>\"", ",", 
        "\"\<Phe\>\"", ",", "\n", "\"\<Leu\>\"", ",", "\"\<Tyr\>\"", ",", 
        "\"\<tryptophan\>\"", ",", "\"\<Arg\>\"", ",", "\"\<histidine\>\"", 
        ",", "\"\<Gln\>\"", ",", "\"\<Pro\>\"", ",", "\n", "\"\<Ile\>\"", 
        ",", "\"\<Met\>\"", ",", "\"\<Val\>\"", ",", "\"\<Ala\>\"", ",", 
        "\"\<Asn\>\"", ",", "\"\<Lys\>\"", ",", "\"\<Asp\>\"", ",", 
        "\"\<Glu\>\""}], "}"}], "]"}]}], "]"}], ",", "\n", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Code",ExpressionUUID->\
"458ba820-325a-4c33-bc24-14bf8a89b87a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"L-serine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LSerine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LSerine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"UCU\"\>", ",", "\<\"UCC\"\>", ",", "\<\"UCA\"\>", 
       ",", "\<\"UCG\"\>", ",", "\<\"AGU\"\>", ",", "\<\"AGC\"\>"}], "}"}]},
    {
     TemplateBox[{"\"glycine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"Glycine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"Glycine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"GGU\"\>", ",", "\<\"GGC\"\>", ",", "\<\"GGA\"\>", 
       ",", "\<\"GGG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-cysteine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LCysteine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LCysteine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"UGU\"\>", ",", "\<\"UGC\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-phenylalanine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LPhenylalanine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LPhenylalanine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"UUU\"\>", ",", "\<\"UUC\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-leucine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LLeucine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LLeucine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"UUA\"\>", ",", "\<\"UUG\"\>", ",", "\<\"CUU\"\>", 
       ",", "\<\"CUC\"\>", ",", "\<\"CUA\"\>", ",", "\<\"CUG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-tyrosine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LTyrosine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LTyrosine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"UAU\"\>", ",", "\<\"UAC\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-tryptophan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LTryptophan\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LTryptophan\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", "\<\"UGG\"\>", "}"}]},
    {
     TemplateBox[{"\"L-arginine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LArginine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LArginine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"CGU\"\>", ",", "\<\"CGC\"\>", ",", "\<\"CGA\"\>", 
       ",", "\<\"CGG\"\>", ",", "\<\"AGA\"\>", ",", "\<\"AGG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-histidine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LHistidine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LHistidine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"CAU\"\>", ",", "\<\"CAC\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-glutamine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LGlutamine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LGlutamine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"CAA\"\>", ",", "\<\"CAG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-proline\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LProline\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LProline\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"CCU\"\>", ",", "\<\"CCC\"\>", ",", "\<\"CCA\"\>", 
       ",", "\<\"CCG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-isoleucine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LIsoleucine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LIsoleucine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"AUU\"\>", ",", "\<\"AUC\"\>", ",", "\<\"AUA\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-methionine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LMethionine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LMethionine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", "\<\"AUG\"\>", "}"}]},
    {
     TemplateBox[{"\"L-valine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LValine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LValine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"GUU\"\>", ",", "\<\"GUC\"\>", ",", "\<\"GUA\"\>", 
       ",", "\<\"GUG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-alanine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LAlanine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LAlanine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"GCU\"\>", ",", "\<\"GCC\"\>", ",", "\<\"GCA\"\>", 
       ",", "\<\"GCG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-asparagine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LAsparagine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LAsparagine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"AAU\"\>", ",", "\<\"AAC\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-lysine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LLysine\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LLysine\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"AAA\"\>", ",", "\<\"AAG\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-aspartic acid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LAsparticAcid\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LAsparticAcid\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"GAU\"\>", ",", "\<\"GAC\"\>"}], "}"}]},
    {
     TemplateBox[{"\"L-glutamic acid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Chemical\"", ",", "\"LGlutamicAcid\""}], "]"}],
       "\"Entity[\\\"Chemical\\\", \\\"LGlutamicAcid\\\"]\"","\"chemical\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{"\<\"GAA\"\>", ",", "\<\"GAG\"\>"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[81]=",ExpressionUUID->"2ffd5abb-8896-4a34-b9da-7a9e74856d74"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Goal of this essay and description of the data", "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],

Cell["\<\
\tIt was recently discovered that RNA editing and amino acid changes are \
widespread in cephalopods. In this essay, I attempt to analyse and compare \
the distribution of amino acid changes in cephalopod species (Squid, Sepia, \
Octopus vulgaris, Octopus bimaculoides) and human.\
\>", "Text",ExpressionUUID->"65ae3372-3440-4e21-ba0f-ab65baa15046"],

Cell["\<\
\tThe data set consists of calculated expected distribution (\"Expected \
amount\", \"Expected frequency\") and observed distribution (\"Edits\", \
\"Frequency\") of amino acid changes in humans, four cephalopod species, and \
conserved edits from those species. KR  represents a change from amino acid K \
to amino acid R. \"syn\" means synonymous, does not make any changes to amino \
acid and is likely to not have an effect. \"stop_W\" means stop to w and \
causes a significant change in a protein sequence.\
\>", "Text",ExpressionUUID->"d1591981-85cd-4756-82fd-f49c33d435d5"],

Cell[CellGroupData[{

Cell["Data", "Subsection",ExpressionUUID->"69c2789e-757d-42de-8e7a-aa67a7c35b9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"SemanticImport", "@", 
    RowBox[{
    "URLDownload", "[", 
     "\"\<https://github.com/ZhamilyaB/Summer2018Starter/raw/master/\
Computational%20Essay/editingcodonsimplifieddata.csv\>\"", "]"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.741463480310804*^9, 3.741463488922306*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7979d311-061d-491d-ba38-03cf71348bd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datagrouped", "=", 
  RowBox[{"data", "[", 
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], "]"}]}]], "Code",
 CellChangeTimes->{3.7414634909134073`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"66758ac8-66ec-46d6-84b1-d412ee794bf0"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 6, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "conserved_cephalopods", "human", "specific_oct_bim", 
            "specific_oct_vul", "specific_sepia", "specific_squid"]], 
          TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Change", "Expected_amount", "Expected_frequency", "Edits", 
             "Frequency", "Difference", "Fold_difference", "Species"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "conserved_cephalopods", "human", "specific_oct_bim", 
               "specific_oct_vul", "specific_sepia", "specific_squid"]]}], 
           TypeSystem`AnyLength], 6], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, All, 
             TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "Change"} -> 
           1, {All, All, "Expected_amount"} -> 
           1, {All, All, "Expected_frequency"} -> 1, {All, All, "Edits"} -> 
           1, {All, All, "Frequency"} -> 1, {All, All, "Difference"} -> 
           1, {All, All, "Fold_difference"} -> 1, {All, All, "Species"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[189.], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`RowShape[
                Association[
                "Change" -> 
                 TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                 "Expected_amount" -> TypeSystem`PackageScope`AtomShape[34], 
                 "Expected_frequency" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Edits" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Frequency" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Difference" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Fold_difference" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Species" -> 
                 TypeSystem`PackageScope`AtomShape[189.]]]], 4, {All}]]], 
           5, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1550299531], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "conserved_cephalopods", "human", "specific_oct_bim", 
            "specific_oct_vul", "specific_sepia", "specific_squid"]], 
          TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Change", "Expected_amount", "Expected_frequency", "Edits", 
             "Frequency", "Difference", "Fold_difference", "Species"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "conserved_cephalopods", "human", "specific_oct_bim", 
               "specific_oct_vul", "specific_sepia", "specific_squid"]]}], 
           TypeSystem`AnyLength], 6], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1550299531]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, Keys]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Change\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Change\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Change"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Change"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_amount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_amount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Expected_amount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Expected_amount"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_frequency\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Expected_frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Expected_frequency"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Edits\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Edits\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Edits"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Edits"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Frequency"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Difference\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Difference\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Difference"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Difference"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fold_difference\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fold_difference\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Fold_difference"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Fold_difference"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Species\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Species\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    All, All, "Species"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[All, All, "Species"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["human", 
                    Style[
                    "human", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["human"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                   GeneralUtilities`Slice[
                    Key["human"]]], "Mouse"], 
                 ImageSize -> {{189., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["220"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.142487"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.081881"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.35104"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 1, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["151"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0977979"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0371919"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.61367"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 2, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["IM", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.030303"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["38"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0246114"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00569163"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.812176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 3, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["TA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.121212"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["148"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0958549"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0253572"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.790803"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"], 4, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["17 total \:203a ", ""], 
                    Style[
                    Superscript["17 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["human"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["human"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["specific_sepia", 
                    Style[
                    "specific_sepia", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["specific_sepia"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                   GeneralUtilities`Slice[
                    Key["specific_sepia"]]], "Mouse"], 
                 ImageSize -> {{189., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14503"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.136295"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0946282"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.27108"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 1, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6856"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0644306"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.022764"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.54634"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 2, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["NS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5836"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.054845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0131783"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.31628"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 3, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["KE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5552"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.052176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0105094"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.25222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"], 4, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["17 total \:203a ", ""], 
                    Style[
                    Superscript["17 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["specific_sepia"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_sepia"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["conserved_cephalopods", 
                    Style[
                    "conserved_cephalopods", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["conserved_cephalopods"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                   GeneralUtilities`Slice[
                    Key["conserved_cephalopods"]]], "Mouse"], 
                 ImageSize -> {{189., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["243"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.212042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.170375"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.08901"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["conserved_cephalopods", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 1, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["106"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0924956"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.050829"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.2199"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["conserved_cephalopods", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 2, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["YC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["66"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0575916"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.015925"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.3822"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["conserved_cephalopods", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 3, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["RG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["64"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0558464"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0141798"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.34031"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["conserved_cephalopods", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"], 4, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["17 total \:203a ", ""], 
                    Style[
                    Superscript["17 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["conserved_cephalopods"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["conserved_cephalopods"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["specific_oct_bim", 
                    Style[
                    "specific_oct_bim", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["specific_oct_bim"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                   GeneralUtilities`Slice[
                    Key["specific_oct_bim"]]], "Mouse"], 
                 ImageSize -> {{189., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8304"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.133"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.091"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.18491"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_oct_bim", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 1, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4503"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.072"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.03"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.72708"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_oct_bim", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 2, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["NS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3484"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.056"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.014"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.33625"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_oct_bim", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 3, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["IM", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.021"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1543"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.025"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.004"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1836"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_oct_bim", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"], 4, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["17 total \:203a ", ""], 
                    Style[
                    Superscript["17 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["specific_oct_bim"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_oct_bim"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["specific_squid", 
                    Style[
                    "specific_squid", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["specific_squid"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                   GeneralUtilities`Slice[
                    Key["specific_squid"]]], "Mouse"], 
                 ImageSize -> {{189., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8647"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.133439"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0917726"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.20254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_squid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 1, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4518"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0697211"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0280545"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.67331"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_squid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 2, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["NS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3451"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0532554"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0115887"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.27813"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_squid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 3, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["syn", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22614"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.348976"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0364761"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.11672"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_squid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"], 4, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["17 total \:203a ", ""], 
                    Style[
                    Superscript["17 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][{
                    Key["specific_squid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
                  GeneralUtilities`Slice[
                   Key["specific_squid"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    6 (-5), {1, 6 - -5 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 5, {
                    1, 6 - -5 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 5, " of ", 
                    Style[
                    6, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 5, {
                    1, 6 - 5 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 6 5, {
                    1, 6 - 5 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    6 (-5), {1, 6 - -5 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 5, {
                    1, 6 - -5 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 5, " of ", 
                    Style[
                    6, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 5, {
                    1, 6 - 5 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 6 5, {
                    1, 6 - 5 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 619124058]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[619124058][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1035., {339.634033203125, 345.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.741463492050356*^9, 3.755112486340158*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"921b9f1b-32a1-4d50-87e5-7e1b1a5a3634"]
}, {2}]],

Cell["\<\
All types of amino acids changes are categorized as either radical or \
conserved. Radical changes are those that change the physicochemical property \
of the amino acid while conservative changes do not. The ratio of radical to \
conservative changes indicates how many changes are likely to have a negative \
effect.\
\>", "Text",ExpressionUUID->"d63468b7-e454-4dd6-a6c9-2231339756f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"radcon", "=", 
  RowBox[{"Dataset", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List",TagBox["List", "IconizedNameLight"],GridBox[{{
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["17", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["9560", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {
     Association["Change" -> "YC", "A" -> "R", "B" -> "R", "C" -> "R"], 
     Association["Change" -> "TA", "A" -> "C", "B" -> "C", "C" -> "C"], 
     Association["Change" -> "syn", "A" -> "", "B" -> "", "C" -> ""], 
     Association["Change" -> "SG", "A" -> "C", "B" -> "C", "C" -> "C"], 
     Association["Change" -> "RG", "A" -> "R", "B" -> "R", "C" -> "R"], 
     Association["Change" -> "QR", "A" -> "C", "B" -> "R", "C" -> "R"], 
     Association["Change" -> "pW", "A" -> "", "B" -> "", "C" -> ""], 
     Association["Change" -> "NS", "A" -> "C", "B" -> "R", "C" -> "C"], 
     Association["Change" -> "ND", "A" -> "R", "B" -> "C", "C" -> "R"], 
     Association["Change" -> "MV", "A" -> "C", "B" -> "C", "C" -> "C"], 
     Association["Change" -> "KR", "A" -> "C", "B" -> "C", "C" -> "C"], 
     Association["Change" -> "KE", "A" -> "R", "B" -> "R", "C" -> "R"], 
     Association["Change" -> "IV", "A" -> "C", "B" -> "C", "C" -> "C"], 
     Association["Change" -> "IM", "A" -> "C", "B" -> "C", "C" -> "C"], 
     Association["Change" -> "HR", "A" -> "C", "B" -> "C", "C" -> "C"], 
     Association["Change" -> "EG", "A" -> "R", "B" -> "R", "C" -> "R"], 
     Association["Change" -> "DG", "A" -> "R", "B" -> "R", "C" -> "R"]},
    SelectWithContents->True,
    Selectable->False], "]"}]}]], "Code",
 CellChangeTimes->{
  3.740517894316924*^9, 3.74052046446187*^9, {3.74061001621111*^9, 
   3.740610021689755*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b454897a-69b0-4b54-9e05-2c91e16ad928"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 17, "Length" -> 17, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Change", "A", "B", "C"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["", "C", "R"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["", "C", "R"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["", "C", "R"]]}], 17], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Change"} -> 1, {All, "A"} -> 1, {All, "B"} -> 
           1, {All, "C"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Change" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], "A" -> 
              TypeSystem`PackageScope`AtomShape[27.], "B" -> 
              TypeSystem`PackageScope`AtomShape[27.], "C" -> 
              TypeSystem`PackageScope`AtomShape[27.]]]], 17, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1387238675], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Change", "A", "B", "C"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["", "C", "R"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["", "C", "R"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["", "C", "R"]]}], 17], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1387238675]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Change\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Change\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 392874057][{
                    All, "Change"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[All, "Change"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"A\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"A\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 392874057][{
                    All, "A"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[All, "A"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"B\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"B\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 392874057][{
                    All, "B"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[All, "B"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"C\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"C\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 392874057][{
                    All, "C"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[All, "C"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[1, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[1, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[1, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["TA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[2, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[2, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[2, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["syn", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[3, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[3, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[3, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[4, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[4, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[4, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["RG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[5, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[5, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[5, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[5, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["QR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[6, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[6, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[6, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[6, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["pW", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[7, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[7, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[7, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[7, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[8, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[8, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[8, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[8, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["ND", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[9, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[9, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[9, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[9, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["MV", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[10, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[10, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[10, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[10, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[11, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[11, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[11, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[11, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["KE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[12, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[12, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[12, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[12, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["IV", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[13, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[13, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[13, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[13, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["IM", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[14, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[14, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[14, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[14, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["HR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[15, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[15, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[15, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[15, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["EG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[16, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[16, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[16, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[16, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["DG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[17, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[17, 
                   Key["A"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[17, 
                   Key["B"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
                  GeneralUtilities`Slice[17, 
                   Key["C"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 392874057][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 392874057]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[392874057][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {164., {229.634033203125, 235.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7414634614729767`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0480a6c5-77fa-41f2-a58b-41d771a64179"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assumptions", "Subsection",ExpressionUUID->"461816e4-f49b-44a1-a013-5660517d53ad"],

Cell["\<\
Amino acid changes also can be random or non-random:  Random edits are likely \
to be slightly bad and don\[CloseCurlyQuote]t make an animal better, \
Non-random edits are likely to be good, be actively preserved in the \
population and seen more in conserved. In humans most changes are random, \
therefore, they are most likely to have a negative effect. In Individual \
cephalopod species, amino acid changes are a lot less random and they are \
less likely to have a negative effect. In conserved, changes are least random \
 and most likely to have a positive effect. \
\>", "Text",ExpressionUUID->"a7c49d0a-85c6-4955-86df-ed08b188880a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualisation and Exploration", "Section",ExpressionUUID->"363992ed-65d6-4a46-9388-9c42d41918e4"],

Cell[CellGroupData[{

Cell["\<\
Expected frequency vs.\[NonBreakingSpace]actual frequency
\
\>", "Subsubsection",ExpressionUUID->"9459be29-4cf5-41f2-96e9-a8f4c74657c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"coloredAmino", "=", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<KR\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.010563313554859288`, 0.842598209242611, 0.28387676305890275`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.007042209036572859, 0.5617321394950741, 0.18925117537260183`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.010563313554859288`", ",", "0.842598209242611`", ",", 
               "0.28387676305890275`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.010563313554859288`, 0.842598209242611, 0.28387676305890275`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.010563313554859288`, 0.842598209242611, 0.28387676305890275`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<SG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.18635688096651823`, 0.3224290263670765, 0.2859539040028191],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.27953532144977733`", ",", "0.4836435395506147`", ",", 
               "0.42893085600422864`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<IM\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.366965033412802, 0.09179214474236168, 0.06944724310909416],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.550447550119203`", ",", "0.1376882171135425`", ",", 
               "0.10417086466364123`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.550447550119203, 0.1376882171135425, 0.10417086466364123`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<TA\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3338264776165977, 0.5226988244157552, 0.4697312374111381],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5007397164248966`", ",", "0.7840482366236328`", ",", 
               "0.7045968561167071`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5007397164248966, 0.7840482366236328, 0.7045968561167071],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<IV\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1382031698600376, 0.06511078869478142, 0.5267166780293697],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.2073047547900564`", ",", "0.09766618304217212`", ",", 
               "0.7900750170440545`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.2073047547900564, 0.09766618304217212, 0.7900750170440545],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<syn\>\"", "\[Rule]", " ", "Black"}], ",", 
      RowBox[{"\"\<MV\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.491241834453361, 0.6569873685929809, 0.11251071343904404`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7368627516800415`", ",", "0.9854810528894713`", ",", 
               "0.16876607015856604`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7368627516800415, 0.9854810528894713, 0.16876607015856604`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<HR\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4171657502429042, 0.12388898401688739`, 0.05546062254821823],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.6257486253643563`", ",", "0.18583347602533107`", ",", 
               "0.08319093382232734`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.6257486253643563, 0.18583347602533107`, 0.08319093382232734],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<NS\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6413031829165032, 0.3827441860362894, 0.12658819586771902`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9619547743747547`", ",", "0.5741162790544341`", ",", 
               "0.1898822938015785`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9619547743747547, 0.5741162790544341, 0.1898822938015785],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<ND\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.18578759068160194`, 0.5630940905675623, 0.3788541431764876],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.2786813860224029`", ",", "0.8446411358513435`", ",", 
               "0.5682812147647314`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.2786813860224029, 0.8446411358513435, 0.5682812147647314],
        Editable->False,
        Selectable->False]}], ",", "\n", 
      RowBox[{"\"\<QR\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.47745187012305124`, 0.4719413373193821, 0.5698362673588642],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7161778051845769`", ",", "0.7079120059790731`", ",", 
               "0.8547544010382961`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7161778051845769, 0.7079120059790731, 0.8547544010382961],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<KE\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6136465327512035, 0.008313512355942947, 0.3923650721640207],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9204697991268052`", ",", "0.01247026853391442`", ",", 
               "0.588547608246031`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9204697991268052, 0.01247026853391442, 0.588547608246031],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<EG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3662735949793764, 0.18919067467597817`, 0.6236281218709374],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5494103924690645`", ",", "0.28378601201396725`", ",", 
               "0.9354421828064061`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5494103924690645, 0.28378601201396725`, 0.9354421828064061],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<RG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.46930287876834764`, 0.3110075035776889, 0.6554234951573257],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7039543181525214`", ",", "0.4665112553665334`", ",", 
               "0.9831352427359885`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7039543181525214, 0.4665112553665334, 0.9831352427359885],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<YC\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3457297625530133, 0.2615915274273023, 0.13892562021358432`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5185946438295199`", ",", "0.3923872911409534`", ",", 
               "0.20838843032037646`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5185946438295199, 0.3923872911409534, 0.20838843032037646`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<DG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6434952799047426, 0.4395167617268121, 0.03472350407165159],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.965242919857114`", ",", "0.6592751425902181`", ",", 
               "0.052085256107477385`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.965242919857114, 0.6592751425902181, 0.052085256107477385`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<stop-W\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33563795010534647`, 0.06539776281624003, 0.4962170246438391],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{
              "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
               "0.7443255369657586`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5034569251580197, 0.09809664422436004, 0.7443255369657586]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5034569251580197, 0.09809664422436004, 0.7443255369657586],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ";"}], 
  " "}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.755112417226575*^9, 3.755112429361438*^9}, 
   3.755112511719915*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"89d08979-12f3-4c2f-9c78-50efc2d457b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"legendAmino", "=", 
   RowBox[{"SwatchLegend", "[", 
    RowBox[{
     RowBox[{"Values", "@", "coloredAmino"}], ",", 
     RowBox[{"Keys", "@", "coloredAmino"}], ",", 
     RowBox[{"LegendLabel", "\[Rule]", "\"\<Aminoacids changes\>\""}], ",", 
     "\n", 
     RowBox[{"LegendFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"#", ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], ")"}]}],
      ",", 
     RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ";"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7551124172269087`*^9, 3.755112429361638*^9}, 
   3.755112511720187*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"f7705db8-6123-49c3-a8d9-0920f8dd8b72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TabView", "[", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"species", "\[Rule]", " ", 
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#1", ",", 
                RowBox[{"Values", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Values", "@", 
                RowBox[{"Normal", "[", 
                 RowBox[{"datagrouped", "[", 
                  RowBox[{"[", 
                   RowBox[{"species", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Expected_frequency\>\"", ",", "\"\<Frequency\>\""}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "\n", 
               RowBox[{"Normal", "@", "coloredAmino"}]}], "}"}]}], "]"}], ",",
            " ", 
           RowBox[{"PlotLegends", "\[Rule]", "legendAmino"}], ",", " ", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", "\n", 
         "\n", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Frequency\>\"", ",", "Bold"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Expected Frequency\>\"", ",", "Bold"}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Left", ",", " ", "Bottom"}], "}"}], ",", " ", 
         RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"species", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<human\>\"", ",", "\"\<specific_sepia\>\"", ",", 
          "\"\<conserved_cephalopods\>\"", ",", "\"\<specific_oct_bim\>\"", 
          ",", "\"\<specific_squid\>\"", ",", "\"\<specific_oct_vul\>\""}], 
         "}"}]}], "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7407649167416487`*^9, 3.740764925827969*^9}, {
   3.740764969669013*^9, 3.740765009329144*^9}, 3.755112511720456*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"6495591e-c276-4b2c-b3f7-1b18b96a7ca5"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"human\"\>"->
  TemplateBox[{TemplateBox[{
      GraphicsBox[{{}, {{{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            PointSize[0.02]], 
           
           PointBox[{{0.060606061, 0.142487047}, {0.060606061, 0.097797927}, {
            0.03030303, 0.024611399}, {0.121212121, 0.095854922}, {
            0.090909091, 0.065414508}, {0.03030303, 0.02007772}, {0.060606061,
             0.027202073}, {0.060606061, 0.060233161}, {0.060606061, 
            0.05634715}, {0.060606061, 0.082901554}, {0.060606061, 
            0.113989637}, {0.060606061, 0.073834197}, {0.060606061, 
            0.064119171}, {0.060606061, 0.041450777}, {0.060606061, 
            0.030440415}, {0.060606061, 0.003238342}}]}, {}}, {{
           StyleBox[{
             PointBox[{{0.060606061, 0.142487047}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.010563313554859288`, 0.842598209242611, 
               0.28387676305890275`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.097797927}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.27953532144977733`, 0.4836435395506147, 
               0.42893085600422864`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.03030303, 0.024611399}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.121212121, 0.095854922}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.090909091, 0.065414508}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.03030303, 0.02007772}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              GrayLevel[0]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.027202073}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.060233161}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.6257486253643563, 0.18583347602533107`, 
               0.08319093382232734]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.05634715}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.082901554}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.113989637}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.073834197}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.064119171}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.041450777}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.030440415}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.060606061, 0.003238342}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]},
             StripOnInput -> False]}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0.028882575453125003`, 0}, 
        PlotRange -> {{0.03030303, 0.121212121}, {0, 0.142487047}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0.028882575453125003`, 0}, DisplayFunction :> Identity,
         Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.03030303, 0.121212121}, {0, 0.142487047}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{
         "\"KR\"", "\"SG\"", "\"IM\"", "\"TA\"", "\"IV\"", "\"syn\"", 
          "\"MV\"", "\"HR\"", "\"NS\"", "\"ND\"", "\"QR\"", "\"KE\"", 
          "\"EG\"", "\"RG\"", "\"YC\"", "\"DG\"", "\"stop-W\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           FrameBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"Aminoacids changes\"", {FontFamily -> "Arial"}, 
                    Background -> Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], RoundingRadius -> 5, StripOnInput -> False], 
           TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.007042209036572859, 0.5617321394950741, 
                    0.18925117537260183`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.010563313554859288`", ",", "0.842598209242611`", ",", 
                    "0.28387676305890275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18635688096651823`, 0.3224290263670765, 
                    0.2859539040028191], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27953532144977733`", ",", "0.4836435395506147`", ",", 
                    "0.42893085600422864`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.366965033412802, 0.09179214474236168, 
                    0.06944724310909416], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.550447550119203`", ",", "0.1376882171135425`", ",", 
                    "0.10417086466364123`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3338264776165977, 0.5226988244157552, 
                    0.4697312374111381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5007397164248966`", ",", "0.7840482366236328`", ",", 
                    "0.7045968561167071`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.06511078869478142, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.2073047547900564`", ",", "0.09766618304217212`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.491241834453361, 0.6569873685929809, 
                    0.11251071343904404`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7368627516800415`", ",", "0.9854810528894713`", ",", 
                    "0.16876607015856604`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4171657502429042, 0.12388898401688739`, 
                    0.05546062254821823], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.6257486253643563`", ",", "0.18583347602533107`", ",", 
                    "0.08319093382232734`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6413031829165032, 0.3827441860362894, 
                    0.12658819586771902`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9619547743747547`", ",", "0.5741162790544341`", ",", 
                    "0.1898822938015785`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18578759068160194`, 0.5630940905675623, 
                    0.3788541431764876], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2786813860224029`", ",", "0.8446411358513435`", ",", 
                    "0.5682812147647314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47745187012305124`, 0.4719413373193821, 
                    0.5698362673588642], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7161778051845769`", ",", "0.7079120059790731`", ",", 
                    "0.8547544010382961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6136465327512035, 0.008313512355942947, 
                    0.3923650721640207], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.588547608246031`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3662735949793764, 0.18919067467597817`, 
                    0.6236281218709374], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5494103924690645`", ",", "0.28378601201396725`", ",", 
                    "0.9354421828064061`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46930287876834764`, 0.3110075035776889, 
                    0.6554234951573257], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7039543181525214`", ",", "0.4665112553665334`", ",", 
                    "0.9831352427359885`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3457297625530133, 0.2615915274273023, 
                    0.13892562021358432`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5185946438295199`", ",", "0.3923872911409534`", ",", 
                    "0.20838843032037646`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6434952799047426, 0.4395167617268121, 
                    0.03472350407165159], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.965242919857114`", ",", "0.6592751425902181`", ",", 
                    "0.052085256107477385`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33563795010534647`, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], Editable -> False, Selectable -> 
                   False]}], "}"}], ",", 
              RowBox[{"{", 
                
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                  ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                  ",", #13, ",", #14, ",", #15, ",", #16, ",", #17}], "}"}], 
              ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", 
                RowBox[{"(", 
                  RowBox[{
                    FrameBox[
                    "#1", RoundingRadius -> 5, StripOnInput -> False], "&"}], 
                  ")"}]}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"Aminoacids changes\""}], 
              ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
              RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
         True], TraditionalForm], TraditionalForm]}, "Legended", 
     DisplayFunction -> (GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ), 
     InterpretationFunction -> (RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
    StyleBox["\"Frequency\"", Bold, StripOnInput -> False],StyleBox[
    "\"Expected Frequency\"", Bold, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[
        RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
        "LabeledLabel"], 
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {"", 
       ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 2}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]}, {
  2,"\<\"specific_sepia\"\>"->
  TemplateBox[{TemplateBox[{
      GraphicsBox[{{}, {{{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            PointSize[0.02]], 
           
           PointBox[{{0.041666667, 0.136294862}, {0.041666667, 0.06443064}, {
            0.041666667, 0.054844985}, {0.041666667, 0.052176038}, {
            0.041666667, 0.045513068}, {0.3125, 0.341230535}, {0.041666667, 
            0.04517475}, {0.020833333, 0.022516892}, {0.041666667, 
            0.038399008}, {0.020833333, 0.018823596}, {0.041666667, 
            0.034564745}, {0.0625, 0.047373812}, {0.041666667, 0.027272129}, {
            0.083333333, 0.051903504}, {0.041666667, 0.010365665}, {
            0.041666667, 0.008899623}, {0.041666667, 0.000216147}}]}, {}}, {{
           StyleBox[{
             PointBox[{{0.041666667, 0.136294862}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.010563313554859288`, 0.842598209242611, 
               0.28387676305890275`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.06443064}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.27953532144977733`, 0.4836435395506147, 
               0.42893085600422864`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.054844985}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.052176038}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.045513068}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.3125, 0.341230535}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              GrayLevel[0]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.04517475}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.022516892}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.6257486253643563, 0.18583347602533107`, 
               0.08319093382232734]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.038399008}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.018823596}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.034564745}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.0625, 0.047373812}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.027272129}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.083333333, 0.051903504}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.010365665}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.008899623}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.000216147}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
            StripOnInput -> False]}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.14552810249999998`}},
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0.0196940100859375, 0}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.14552810249999998`}},
         PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{
         "\"KR\"", "\"SG\"", "\"IM\"", "\"TA\"", "\"IV\"", "\"syn\"", 
          "\"MV\"", "\"HR\"", "\"NS\"", "\"ND\"", "\"QR\"", "\"KE\"", 
          "\"EG\"", "\"RG\"", "\"YC\"", "\"DG\"", "\"stop-W\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           FrameBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"Aminoacids changes\"", {FontFamily -> "Arial"}, 
                    Background -> Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], RoundingRadius -> 5, StripOnInput -> False], 
           TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.007042209036572859, 0.5617321394950741, 
                    0.18925117537260183`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.010563313554859288`", ",", "0.842598209242611`", ",", 
                    "0.28387676305890275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18635688096651823`, 0.3224290263670765, 
                    0.2859539040028191], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27953532144977733`", ",", "0.4836435395506147`", ",", 
                    "0.42893085600422864`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.366965033412802, 0.09179214474236168, 
                    0.06944724310909416], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.550447550119203`", ",", "0.1376882171135425`", ",", 
                    "0.10417086466364123`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3338264776165977, 0.5226988244157552, 
                    0.4697312374111381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5007397164248966`", ",", "0.7840482366236328`", ",", 
                    "0.7045968561167071`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.06511078869478142, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.09766618304217212`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.491241834453361, 0.6569873685929809, 
                    0.11251071343904404`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7368627516800415`", ",", "0.9854810528894713`", ",", 
                    "0.16876607015856604`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4171657502429042, 0.12388898401688739`, 
                    0.05546062254821823], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6257486253643563`", ",", "0.18583347602533107`", ",", 
                    "0.08319093382232734`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6413031829165032, 0.3827441860362894, 
                    0.12658819586771902`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9619547743747547`", ",", "0.5741162790544341`", ",", 
                    "0.1898822938015785`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18578759068160194`, 0.5630940905675623, 
                    0.3788541431764876], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2786813860224029`", ",", "0.8446411358513435`", ",", 
                    "0.5682812147647314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47745187012305124`, 0.4719413373193821, 
                    0.5698362673588642], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7161778051845769`", ",", "0.7079120059790731`", ",", 
                    "0.8547544010382961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6136465327512035, 0.008313512355942947, 
                    0.3923650721640207], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.588547608246031`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3662735949793764, 0.18919067467597817`, 
                    0.6236281218709374], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5494103924690645`", ",", "0.28378601201396725`", ",", 
                    "0.9354421828064061`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46930287876834764`, 0.3110075035776889, 
                    0.6554234951573257], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7039543181525214`", ",", "0.4665112553665334`", ",", 
                    "0.9831352427359885`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3457297625530133, 0.2615915274273023, 
                    0.13892562021358432`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5185946438295199`", ",", "0.3923872911409534`", ",", 
                    "0.20838843032037646`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6434952799047426, 0.4395167617268121, 
                    0.03472350407165159], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.965242919857114`", ",", "0.6592751425902181`", ",", 
                    "0.052085256107477385`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33563795010534647`, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], Editable -> False, Selectable -> 
                   False]}], "}"}], ",", 
              RowBox[{"{", 
                
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                  ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                  ",", #13, ",", #14, ",", #15, ",", #16, ",", #17}], "}"}], 
              ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", 
                RowBox[{"(", 
                  RowBox[{
                    FrameBox[
                    "#1", RoundingRadius -> 5, StripOnInput -> False], "&"}], 
                  ")"}]}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"Aminoacids changes\""}], 
              ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
              RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
         True], TraditionalForm], TraditionalForm]}, "Legended", 
     DisplayFunction -> (GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ), 
     InterpretationFunction -> (RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
    StyleBox["\"Frequency\"", Bold, StripOnInput -> False],StyleBox[
    "\"Expected Frequency\"", Bold, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[
        RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
        "LabeledLabel"], 
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {"", 
       ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 2}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]}, {
  3,"\<\"conserved_cephalopods\"\>"->
  TemplateBox[{TemplateBox[{
      GraphicsBox[{{}, {{{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            PointSize[0.02]], 
           
           PointBox[{{0.041666667, 0.212041885}, {0.041666667, 0.092495637}, {
            0.041666667, 0.057591623}, {0.041666667, 0.055846422}, {
            0.041666667, 0.054973822}, {0.020833333, 0.02617801}, {
            0.020833333, 0.022687609}, {0.041666667, 0.040139616}, {
            0.041666667, 0.037521815}, {0.041666667, 0.034904014}, {0.0625, 
            0.05061082}, {0.3125, 0.22600349}, {0.041666667, 0.027923211}, {
            0.083333333, 0.038394415}, {0.041666667, 0.011343805}, {
            0.041666667, 0.009598604}, {0.041666667, 0.001745201}}]}, {}}, {{
           StyleBox[{
             PointBox[{{0.041666667, 0.212041885}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.010563313554859288`, 0.842598209242611, 
               0.28387676305890275`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.092495637}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.27953532144977733`, 0.4836435395506147, 
               0.42893085600422864`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.057591623}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.055846422}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.054973822}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.02617801}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              GrayLevel[0]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.022687609}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.040139616}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.6257486253643563, 0.18583347602533107`, 
               0.08319093382232734]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.037521815}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.034904014}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.0625, 0.05061082}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.3125, 0.22600349}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.027923211}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.083333333, 0.038394415}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.011343805}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.009598604}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.001745201}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
            StripOnInput -> False]}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.22600349}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0.0196940100859375, 0}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.22600349}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{
         "\"KR\"", "\"SG\"", "\"IM\"", "\"TA\"", "\"IV\"", "\"syn\"", 
          "\"MV\"", "\"HR\"", "\"NS\"", "\"ND\"", "\"QR\"", "\"KE\"", 
          "\"EG\"", "\"RG\"", "\"YC\"", "\"DG\"", "\"stop-W\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           FrameBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"Aminoacids changes\"", {FontFamily -> "Arial"}, 
                    Background -> Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], RoundingRadius -> 5, StripOnInput -> False], 
           TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.007042209036572859, 0.5617321394950741, 
                    0.18925117537260183`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.010563313554859288`", ",", "0.842598209242611`", ",", 
                    "0.28387676305890275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18635688096651823`, 0.3224290263670765, 
                    0.2859539040028191], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27953532144977733`", ",", "0.4836435395506147`", ",", 
                    "0.42893085600422864`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.366965033412802, 0.09179214474236168, 
                    0.06944724310909416], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.550447550119203`", ",", "0.1376882171135425`", ",", 
                    "0.10417086466364123`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3338264776165977, 0.5226988244157552, 
                    0.4697312374111381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5007397164248966`", ",", "0.7840482366236328`", ",", 
                    "0.7045968561167071`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.06511078869478142, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.09766618304217212`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.491241834453361, 0.6569873685929809, 
                    0.11251071343904404`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7368627516800415`", ",", "0.9854810528894713`", ",", 
                    "0.16876607015856604`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4171657502429042, 0.12388898401688739`, 
                    0.05546062254821823], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6257486253643563`", ",", "0.18583347602533107`", ",", 
                    "0.08319093382232734`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6413031829165032, 0.3827441860362894, 
                    0.12658819586771902`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9619547743747547`", ",", "0.5741162790544341`", ",", 
                    "0.1898822938015785`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18578759068160194`, 0.5630940905675623, 
                    0.3788541431764876], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2786813860224029`", ",", "0.8446411358513435`", ",", 
                    "0.5682812147647314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47745187012305124`, 0.4719413373193821, 
                    0.5698362673588642], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7161778051845769`", ",", "0.7079120059790731`", ",", 
                    "0.8547544010382961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6136465327512035, 0.008313512355942947, 
                    0.3923650721640207], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.588547608246031`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3662735949793764, 0.18919067467597817`, 
                    0.6236281218709374], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5494103924690645`", ",", "0.28378601201396725`", ",", 
                    "0.9354421828064061`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46930287876834764`, 0.3110075035776889, 
                    0.6554234951573257], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7039543181525214`", ",", "0.4665112553665334`", ",", 
                    "0.9831352427359885`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3457297625530133, 0.2615915274273023, 
                    0.13892562021358432`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5185946438295199`", ",", "0.3923872911409534`", ",", 
                    "0.20838843032037646`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6434952799047426, 0.4395167617268121, 
                    0.03472350407165159], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.965242919857114`", ",", "0.6592751425902181`", ",", 
                    "0.052085256107477385`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33563795010534647`, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], Editable -> False, Selectable -> 
                   False]}], "}"}], ",", 
              RowBox[{"{", 
                
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                  ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                  ",", #13, ",", #14, ",", #15, ",", #16, ",", #17}], "}"}], 
              ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", 
                RowBox[{"(", 
                  RowBox[{
                    FrameBox[
                    "#1", RoundingRadius -> 5, StripOnInput -> False], "&"}], 
                  ")"}]}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"Aminoacids changes\""}], 
              ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
              RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
         True], TraditionalForm], TraditionalForm]}, "Legended", 
     DisplayFunction -> (GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ), 
     InterpretationFunction -> (RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
    StyleBox["\"Frequency\"", Bold, StripOnInput -> False],StyleBox[
    "\"Expected Frequency\"", Bold, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[
        RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
        "LabeledLabel"], 
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {"", 
       ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 2}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]}, {
  4,"\<\"specific_oct_bim\"\>"->
  TemplateBox[{TemplateBox[{
      GraphicsBox[{{}, {{{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            PointSize[0.02]], 
           
           PointBox[{{0.042, 0.133}, {0.042, 0.072}, {0.042, 0.056}, {0.021, 
            0.025}, {0.042, 0.048}, {0.042, 0.048}, {0.313, 0.35}, {0.042, 
            0.042}, {0.021, 0.02}, {0.042, 0.037}, {0.042, 0.032}, {0.063, 
            0.048}, {0.083, 0.053}, {0.042, 0.02}, {0.042, 0.009}, {0.042, 
            0.008}, {0.042, 0.}}]}, {}}, {{
           StyleBox[{
             PointBox[{{0.042, 0.133}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.010563313554859288`, 0.842598209242611, 
               0.28387676305890275`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.072}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.27953532144977733`, 0.4836435395506147, 
               0.42893085600422864`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.056}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.021, 0.025}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.048}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.048}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              GrayLevel[0]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.313, 0.35}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.042}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.6257486253643563, 0.18583347602533107`, 
               0.08319093382232734]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.021, 0.02}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.037}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.032}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.063, 0.048}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.083, 0.053}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.02}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.009}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.008}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.042, 0.}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
            StripOnInput -> False]}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0.019851562500000003`, 0}, 
        PlotRange -> {{0.021, 0.0945}, {0, 0.16649999999999998`}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0.019851562500000003`, 0}, DisplayFunction :> Identity,
         Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.021, 0.0945}, {0, 0.16649999999999998`}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{
         "\"KR\"", "\"SG\"", "\"IM\"", "\"TA\"", "\"IV\"", "\"syn\"", 
          "\"MV\"", "\"HR\"", "\"NS\"", "\"ND\"", "\"QR\"", "\"KE\"", 
          "\"EG\"", "\"RG\"", "\"YC\"", "\"DG\"", "\"stop-W\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           FrameBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"Aminoacids changes\"", {FontFamily -> "Arial"}, 
                    Background -> Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], RoundingRadius -> 5, StripOnInput -> False], 
           TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.007042209036572859, 0.5617321394950741, 
                    0.18925117537260183`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.010563313554859288`", ",", "0.842598209242611`", ",", 
                    "0.28387676305890275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18635688096651823`, 0.3224290263670765, 
                    0.2859539040028191], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27953532144977733`", ",", "0.4836435395506147`", ",", 
                    "0.42893085600422864`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.366965033412802, 0.09179214474236168, 
                    0.06944724310909416], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.550447550119203`", ",", "0.1376882171135425`", ",", 
                    "0.10417086466364123`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3338264776165977, 0.5226988244157552, 
                    0.4697312374111381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5007397164248966`", ",", "0.7840482366236328`", ",", 
                    "0.7045968561167071`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.06511078869478142, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.09766618304217212`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.491241834453361, 0.6569873685929809, 
                    0.11251071343904404`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7368627516800415`", ",", "0.9854810528894713`", ",", 
                    "0.16876607015856604`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4171657502429042, 0.12388898401688739`, 
                    0.05546062254821823], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6257486253643563`", ",", "0.18583347602533107`", ",", 
                    "0.08319093382232734`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6413031829165032, 0.3827441860362894, 
                    0.12658819586771902`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9619547743747547`", ",", "0.5741162790544341`", ",", 
                    "0.1898822938015785`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18578759068160194`, 0.5630940905675623, 
                    0.3788541431764876], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2786813860224029`", ",", "0.8446411358513435`", ",", 
                    "0.5682812147647314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47745187012305124`, 0.4719413373193821, 
                    0.5698362673588642], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7161778051845769`", ",", "0.7079120059790731`", ",", 
                    "0.8547544010382961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6136465327512035, 0.008313512355942947, 
                    0.3923650721640207], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.588547608246031`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3662735949793764, 0.18919067467597817`, 
                    0.6236281218709374], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5494103924690645`", ",", "0.28378601201396725`", ",", 
                    "0.9354421828064061`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46930287876834764`, 0.3110075035776889, 
                    0.6554234951573257], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7039543181525214`", ",", "0.4665112553665334`", ",", 
                    "0.9831352427359885`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3457297625530133, 0.2615915274273023, 
                    0.13892562021358432`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5185946438295199`", ",", "0.3923872911409534`", ",", 
                    "0.20838843032037646`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6434952799047426, 0.4395167617268121, 
                    0.03472350407165159], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.965242919857114`", ",", "0.6592751425902181`", ",", 
                    "0.052085256107477385`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33563795010534647`, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], Editable -> False, Selectable -> 
                   False]}], "}"}], ",", 
              RowBox[{"{", 
                
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                  ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                  ",", #13, ",", #14, ",", #15, ",", #16, ",", #17}], "}"}], 
              ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", 
                RowBox[{"(", 
                  RowBox[{
                    FrameBox[
                    "#1", RoundingRadius -> 5, StripOnInput -> False], "&"}], 
                  ")"}]}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"Aminoacids changes\""}], 
              ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
              RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
         True], TraditionalForm], TraditionalForm]}, "Legended", 
     DisplayFunction -> (GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ), 
     InterpretationFunction -> (RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
    StyleBox["\"Frequency\"", Bold, StripOnInput -> False],StyleBox[
    "\"Expected Frequency\"", Bold, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[
        RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
        "LabeledLabel"], 
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {"", 
       ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 2}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]}, {
  5,"\<\"specific_squid\"\>"->
  TemplateBox[{TemplateBox[{
      GraphicsBox[{{}, {{{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            PointSize[0.02]], 
           
           PointBox[{{0.041666667, 0.133439299}, {0.041666667, 0.069721146}, {
            0.041666667, 0.053255351}, {0.3125, 0.348976096}, {0.041666667, 
            0.04453635}, {0.020833333, 0.021403991}, {0.041666667, 
            0.041758615}, {0.041666667, 0.041326523}, {0.041666667, 
            0.040462339}, {0.020833333, 0.019320689}, {0.041666667, 
            0.036604373}, {0.0625, 0.046048672}, {0.041666667, 0.029474854}, {
            0.083333333, 0.052622645}, {0.041666667, 0.012067715}, {
            0.041666667, 0.008780729}, {0.041666667, 0.000200614}}]}, {}}, {{
           StyleBox[{
             PointBox[{{0.041666667, 0.133439299}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.010563313554859288`, 0.842598209242611, 
               0.28387676305890275`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.069721146}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.27953532144977733`, 0.4836435395506147, 
               0.42893085600422864`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.053255351}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.3125, 0.348976096}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.04453635}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.021403991}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              GrayLevel[0]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.041758615}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.041326523}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.6257486253643563, 0.18583347602533107`, 
               0.08319093382232734]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.040462339}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.019320689}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.036604373}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.0625, 0.046048672}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.029474854}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.083333333, 0.052622645}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.012067715}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.008780729}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.000200614}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
            StripOnInput -> False]}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.15620129249999998`}},
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0.0196940100859375, 0}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.15620129249999998`}},
         PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{
         "\"KR\"", "\"SG\"", "\"IM\"", "\"TA\"", "\"IV\"", "\"syn\"", 
          "\"MV\"", "\"HR\"", "\"NS\"", "\"ND\"", "\"QR\"", "\"KE\"", 
          "\"EG\"", "\"RG\"", "\"YC\"", "\"DG\"", "\"stop-W\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           FrameBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"Aminoacids changes\"", {FontFamily -> "Arial"}, 
                    Background -> Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], RoundingRadius -> 5, StripOnInput -> False], 
           TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.007042209036572859, 0.5617321394950741, 
                    0.18925117537260183`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.010563313554859288`", ",", "0.842598209242611`", ",", 
                    "0.28387676305890275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18635688096651823`, 0.3224290263670765, 
                    0.2859539040028191], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27953532144977733`", ",", "0.4836435395506147`", ",", 
                    "0.42893085600422864`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.366965033412802, 0.09179214474236168, 
                    0.06944724310909416], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.550447550119203`", ",", "0.1376882171135425`", ",", 
                    "0.10417086466364123`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3338264776165977, 0.5226988244157552, 
                    0.4697312374111381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5007397164248966`", ",", "0.7840482366236328`", ",", 
                    "0.7045968561167071`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.06511078869478142, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.09766618304217212`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.491241834453361, 0.6569873685929809, 
                    0.11251071343904404`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7368627516800415`", ",", "0.9854810528894713`", ",", 
                    "0.16876607015856604`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4171657502429042, 0.12388898401688739`, 
                    0.05546062254821823], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6257486253643563`", ",", "0.18583347602533107`", ",", 
                    "0.08319093382232734`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6413031829165032, 0.3827441860362894, 
                    0.12658819586771902`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9619547743747547`", ",", "0.5741162790544341`", ",", 
                    "0.1898822938015785`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18578759068160194`, 0.5630940905675623, 
                    0.3788541431764876], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2786813860224029`", ",", "0.8446411358513435`", ",", 
                    "0.5682812147647314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47745187012305124`, 0.4719413373193821, 
                    0.5698362673588642], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7161778051845769`", ",", "0.7079120059790731`", ",", 
                    "0.8547544010382961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6136465327512035, 0.008313512355942947, 
                    0.3923650721640207], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.588547608246031`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3662735949793764, 0.18919067467597817`, 
                    0.6236281218709374], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5494103924690645`", ",", "0.28378601201396725`", ",", 
                    "0.9354421828064061`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46930287876834764`, 0.3110075035776889, 
                    0.6554234951573257], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7039543181525214`", ",", "0.4665112553665334`", ",", 
                    "0.9831352427359885`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3457297625530133, 0.2615915274273023, 
                    0.13892562021358432`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5185946438295199`", ",", "0.3923872911409534`", ",", 
                    "0.20838843032037646`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6434952799047426, 0.4395167617268121, 
                    0.03472350407165159], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.965242919857114`", ",", "0.6592751425902181`", ",", 
                    "0.052085256107477385`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33563795010534647`, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], Editable -> False, Selectable -> 
                   False]}], "}"}], ",", 
              RowBox[{"{", 
                
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                  ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                  ",", #13, ",", #14, ",", #15, ",", #16, ",", #17}], "}"}], 
              ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", 
                RowBox[{"(", 
                  RowBox[{
                    FrameBox[
                    "#1", RoundingRadius -> 5, StripOnInput -> False], "&"}], 
                  ")"}]}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"Aminoacids changes\""}], 
              ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
              RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
         True], TraditionalForm], TraditionalForm]}, "Legended", 
     DisplayFunction -> (GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ), 
     InterpretationFunction -> (RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
    StyleBox["\"Frequency\"", Bold, StripOnInput -> False],StyleBox[
    "\"Expected Frequency\"", Bold, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[
        RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
        "LabeledLabel"], 
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {"", 
       ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 2}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]}, {
  6,"\<\"specific_oct_vul\"\>"->
  TemplateBox[{TemplateBox[{
      GraphicsBox[{{}, {{{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6], 
            PointSize[0.02]], 
           
           PointBox[{{0.041666667, 0.131532966}, {0.041666667, 0.071029042}, {
            0.041666667, 0.053731868}, {0.041666667, 0.048097104}, {0.3125, 
            0.350161806}, {0.041666667, 0.046639303}, {0.020833333, 
            0.022962955}, {0.041666667, 0.043806412}, {0.020833333, 
            0.020367862}, {0.041666667, 0.038171648}, {0.041666667, 
            0.031875187}, {0.0625, 0.04719761}, {0.083333333, 0.052739322}, {
            0.041666667, 0.02364533}, {0.041666667, 0.009956473}, {
            0.041666667, 0.007930026}, {0.041666667, 0.000155085}}]}, {}}, {{
           StyleBox[{
             PointBox[{{0.041666667, 0.131532966}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.010563313554859288`, 0.842598209242611, 
               0.28387676305890275`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.071029042}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.27953532144977733`, 0.4836435395506147, 
               0.42893085600422864`]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.053731868}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.048097104}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.3125, 0.350161806}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.046639303}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              GrayLevel[0]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.022962955}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.043806412}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.6257486253643563, 0.18583347602533107`, 
               0.08319093382232734]]}, StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.020833333, 0.020367862}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.038171648}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.031875187}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.0625, 0.04719761}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.083333333, 0.052739322}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.02364533}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
            StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.009956473}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.007930026}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]},
             StripOnInput -> False]}, {
           StyleBox[{
             PointBox[{{0.041666667, 0.000155085}}]}, {
             Directive[
              AbsoluteThickness[1.6], 
              PointSize[0.02], 
              RGBColor[
              0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
            StripOnInput -> False]}}}, {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.16263789550000002`}},
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes -> {True, True}, AxesLabel -> {None, None}, 
        AxesOrigin -> {0.0196940100859375, 0}, DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Large, 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.16263789550000002`}},
         PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{
         "\"KR\"", "\"SG\"", "\"IM\"", "\"TA\"", "\"IV\"", "\"syn\"", 
          "\"MV\"", "\"HR\"", "\"NS\"", "\"ND\"", "\"QR\"", "\"KE\"", 
          "\"EG\"", "\"RG\"", "\"YC\"", "\"DG\"", "\"stop-W\""}, 
         "SwatchLegend", DisplayFunction -> (FormBox[
           FrameBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"Aminoacids changes\"", {FontFamily -> "Arial"}, 
                    Background -> Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], RoundingRadius -> 5, StripOnInput -> False], 
           TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.007042209036572859, 0.5617321394950741, 
                    0.18925117537260183`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.010563313554859288`", ",", "0.842598209242611`", ",", 
                    "0.28387676305890275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18635688096651823`, 0.3224290263670765, 
                    0.2859539040028191], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27953532144977733`", ",", "0.4836435395506147`", ",", 
                    "0.42893085600422864`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.366965033412802, 0.09179214474236168, 
                    0.06944724310909416], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.550447550119203`", ",", "0.1376882171135425`", ",", 
                    "0.10417086466364123`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3338264776165977, 0.5226988244157552, 
                    0.4697312374111381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5007397164248966`", ",", "0.7840482366236328`", ",", 
                    "0.7045968561167071`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.06511078869478142, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.09766618304217212`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.491241834453361, 0.6569873685929809, 
                    0.11251071343904404`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7368627516800415`", ",", "0.9854810528894713`", ",", 
                    "0.16876607015856604`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4171657502429042, 0.12388898401688739`, 
                    0.05546062254821823], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6257486253643563`", ",", "0.18583347602533107`", ",", 
                    "0.08319093382232734`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6413031829165032, 0.3827441860362894, 
                    0.12658819586771902`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9619547743747547`", ",", "0.5741162790544341`", ",", 
                    "0.1898822938015785`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18578759068160194`, 0.5630940905675623, 
                    0.3788541431764876], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2786813860224029`", ",", "0.8446411358513435`", ",", 
                    "0.5682812147647314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47745187012305124`, 0.4719413373193821, 
                    0.5698362673588642], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7161778051845769`", ",", "0.7079120059790731`", ",", 
                    "0.8547544010382961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6136465327512035, 0.008313512355942947, 
                    0.3923650721640207], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.588547608246031`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3662735949793764, 0.18919067467597817`, 
                    0.6236281218709374], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5494103924690645`", ",", "0.28378601201396725`", ",", 
                    "0.9354421828064061`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46930287876834764`, 0.3110075035776889, 
                    0.6554234951573257], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7039543181525214`", ",", "0.4665112553665334`", ",", 
                    "0.9831352427359885`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3457297625530133, 0.2615915274273023, 
                    0.13892562021358432`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5185946438295199`", ",", "0.3923872911409534`", ",", 
                    "0.20838843032037646`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6434952799047426, 0.4395167617268121, 
                    0.03472350407165159], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.965242919857114`", ",", "0.6592751425902181`", ",", 
                    "0.052085256107477385`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], Editable -> False, Selectable -> 
                   False], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33563795010534647`, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                   0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], Editable -> False, Selectable -> 
                   False]}], "}"}], ",", 
              RowBox[{"{", 
                
                RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                  ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                  ",", #13, ",", #14, ",", #15, ",", #16, ",", #17}], "}"}], 
              ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", 
                RowBox[{"(", 
                  RowBox[{
                    FrameBox[
                    "#1", RoundingRadius -> 5, StripOnInput -> False], "&"}], 
                  ")"}]}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"Aminoacids changes\""}], 
              ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
              RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
         True], TraditionalForm], TraditionalForm]}, "Legended", 
     DisplayFunction -> (GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ), 
     InterpretationFunction -> (RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
    StyleBox["\"Frequency\"", Bold, StripOnInput -> False],StyleBox[
    "\"Expected Frequency\"", Bold, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[
        RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
        "LabeledLabel"], 
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {"", 
       ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 2}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]}}, 
  1]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7407649067421913`*^9, 3.7414634751253757`*^9, {3.755112497370349*^9, 
   3.755112520225547*^9}, 3.7551125510366507`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f7f738b8-a187-4d4a-bae4-a3aecc413208"]
}, {4}]],

Cell["\<\
For importing images I was using  Wolfram|Alpha Query, which is a very \
helpful tool to find correct images and more information on a subject right \
inside Mathematica.\
\>", "Text",ExpressionUUID->"aa42f1a2-644f-4115-8cf8-1d26ffaa0e4b"],

Cell[CellGroupData[{

Cell["Squid image", "WolframAlphaLong",
 CellLabel->"In[64]:=",ExpressionUUID->"dff664c5-1e89-4e2c-a474-4708e38748f5"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Squid image", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Species\", \"Order:Teuthida\"][EntityProperty[\"Species\", \
\"Image\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"squids\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {SpeciesData, "Order:Teuthida"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"image\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> 
     "Image:SpeciesData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["imagesource", {}, {"http://www.eol.org/pages/2336"}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Species\", \"Order:Teuthida\"][EntityProperty[\"Species\", \
\"Image\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzFvXV4FNm6L9zuEQgMLsGdwV0SJCFAlIQIcXd367i7uxCDCAkhSIAEH2YY
xvf4zJ49svfZ+9xzz/nuc+75/rjPd59vSdXq1dWdDDDse+tZ6adSXV1d/f7W
6++7ytQn0j5AwOPxYmXgxd470SwmxjvZwRj84xgRGxwY4e93JiLOP9A/Zr+P
EBz0A3/14A/u8/lKgUAlFBqAIRAYCoVGIpGxRDKXzzfAAx4UGOMh4BuJRXPx
Dp9nCF7BPjgfDHCa5nyhEX4Vi8HVDEUilUCg4PPl4BXsSyTGMtlc9O4cMOAH
2UuBVx5PhS9CBr4ldHvgLSWPpwAD7IAjYrGBRGIoFMn5AqlAKBOJFWKJkvmX
L+HzxOBVBI4LZUJ0BOzweAI+XygQiMAAO2CAI3iAfZFIJBaLwatAAOkJNgHa
+NSGj9P79BHdM9/WNtOVMYLs0FCMhkMknAOAA69gEDTxAEcA3GAgIhsRXPA+
gs8Qw8fjycCOUKgERwDxwfngNPxFPJ4BRhBAScNHzyIyzfDH2QGupsKQYRDB
ADs8vgRDRhDEgIKDGDUOfPiIUCgWCoUEu9cC5Z8N3ysiCPbRvwwTETQxKBg+
hu9YNCG44jkYQXymNqCATcClANfIAIiY4OCLABNJpSYYaIgRz5DwOIaefDvZ
J7ICzwqMI54SAEEwaPgwgvQgLImB0+U+AB9iTMGrEG0m8tLc+tYRxN+i76CS
HjQnsnxkjOFAIo5hFsySjCwVGGIpShAn/IgIDsgOLqtgqA334VQhCMKPszwO
ccSY8g0o+YlBVNE3SXgQXlYkB/ITDIwghhIzoO7QCx/ADu9gFN4AiLfLfTNd
hCPD8b8c+BBZjAjptBAUGAIlpYWggBF6GEHCLxSFDSjgFPhbMB8R+IjgxVMC
X5NoQ3QOgx2tAVk2VELWRghiNiQKkccTAabDQ0CxpC4P0kKVIEhw/F3I/jhe
b3Bl+hx9c9uIMzCIhBM1UpR9F4hNBgWGGYlppCLqD8lSOMBBIFoJr2kYDXE0
vgg92OswnwXAAVsIDKxhgcDEqGFVqIsg3uEgSEHGWDVisRQIUnqSYxBnoiHh
038SfK9+ZY6BRxQiRx9pk9SIsA+tKJEGNKbMDAN0ZawBGUDxoAwSI9qUBa/g
IkDAgoFmhREZ5LMIQQC0AWZAgh1WfxhByI+sMQMQBIMRoQBTFjJ6AOxEIgmS
pRpKckzQmbZ/HoIzaD3ucQ6CRF5hjLStQTgIo3GOY1mK3QcCELqaHPGgAQaC
tUBUwKEAcBMriFyBTAnMfazINUJsa8DKCgUrlhn5STMgoxZZJwIjiJkR7mjM
TjFrvcB/WbUISSREG6tlXhW+twIovsgsDK7vuBaPsGjK2X+hSqK1ki6yxF8j
Ayspwj7a9j/zRUgGqjBq2ggaEMFOZgIreA2wRUTsIsCJADLMfQzrYTNGKJPL
DCQAXAArqw1ZELUMGB2vkKESh4a6YHH+xSIX4E6O0NPgdyF7XYh5WqqQiyAG
kfYQZxrautJQd7AevR4E2VcjSnviyWDImQbkCkQm44HjA5gBaQQxMxIfkDZp
CIK0BtRFUJdoeg0bfBwjRd7la5uLehHnXOQVIZv5X4Ya1GBUIW1S4ogNEZva
5g3DU5yhixrngngQCUnUHId/8ZBKjbDuY40iGbaRcBCGDsgwFinWepQ5yuxT
tijHLsW2KAcgvTC9CoKvBdMs2HGEtj7RzYFPgenM8aBnQhBb+7SJwjFadAft
lWu755oTOLCCAawX7FrigSceDBEgN1AXQRJJ40Cpy300gjQQABeJRELEoy6C
utSe6YQ31o+6OlffHGN4kJJOKr0so0+uzgSTZj5oR+00CHIMG9p8pacNsYVw
XA5L0dn1IJaiYmDPIBA1NgwbkyEmKMV6GgSxB0EjqMsLuohwEOQI3lnE4Btg
Svbx1NKL4KwcRMJcBjQ62rJRiQNoOIamK0hpBDmMSStBztXowA5r4kIepN1A
HGGDgw2mYfiwQ4H9QWKL0k49i6yGifSqPxpETECRSMSJpuLTRGibCet/HoKU
qcDlHV0/kX6LtjnZCLYK8ggCnZaTWEgSK4WoPyw2aQXKylgoPLEexNfECGLv
TyJV0bkJDB8UrSSMRjn1gCtxCBR4fxwEWaHKJS8HUw6+GEEMIgfomWzRV0Fw
lhM4N4NmjowjpsjQTjypiJ9IDQ1nIefOSKjlAyqJz85hN+yh04xGFB+OldGw
ksgq0X1MoJV1/aAtCmBCspT49RgvOrXEIMgT/y6CNOsRKcrhR4505XgTPDYt
pRe+2UHkzBNdPcjRiay2QtzHesR4VhNJSCwZGBrlK/giA54QOIngI3KwLxAb
gn/xDt7nCZTgX3yaAHgKImP8Lz3wycylBEr8EaHEiCcE15ejV6VQYiCWGaGD
KuZMNMBbYPCABgQAUdKVsVERgmKRAg8BH8AHAAU4Av8CYq2JlCKPnqgqatP4
F1jkaslSPnxHJILoYCZjkRKIxeDKPHrwecz449tM+pdGkESlSIiYtf0MCDcB
AgKSgoFJStDUQhAdZ4bQCA4KO3yCBj4WfRZZ8BYGUYZBJDOEYI3xBaeBoasf
4dyDehBwHzBm5Bg4giB+1fYstHiNgyCEG6HMQVAsAXISHpHJZBg+qGrBmfh9
BJ9QoIHyrWx6NTJJ/RC5REQTBJHyEHGwCxAQkBQjiLmG8Ag+TmFhSLObFtMh
BBlE0JQQSY3hEQGEDAzIYgK5Bmj0peizCnRcgyARsGQqsnFRIDPlgAcxdixw
EpYTRRgaIktpu1EPjvTkRwiCVwCXWApsYKhnhSImnM6SF1yRjNki5H8ETT7l
TTCaizXkgGOF+ZFVkUrWIDEm0ABxigkrls0BgyCIQSTwcY7TbEgQJNDjfcCG
DIJEGguUGGIkPBUYQSxFaRXJDCw9BDIAn0SsBK+YGbEIJQNIUYlYIZHI2OSg
rpUiZuOl2puAxwCLeBeynlBmbLwQWALoBgDumLxvOWmoF0EsRUl8A/tWmALM
DqNfNDYnoCQjQgHxAYgMzQ1psOh/WX5RMbgg+sOBPsuAyIfCFqtLIoFpaYyn
CkaQFrMwF8/6+BBHNr6NLBkZ5kEEnwy7hzSIDIKAkQUiDkxINDFGJkUuvMPg
C+DjC0SA74CRDJTItncPe3pHGM5ZzOOLkf4TItEp0KsI+fT4w/jCSiHW4QLc
R2w5qPFZBOnYCFfNsdTWNVGwUoMXBCQFphGGD3KWHCPIQAwQ5AEcDSGCQiOM
LH01ZrboaECIIDAvkX/BBNxYGQJBRAITD4yghElYAGaUg3fRCUzGUC+CeCPw
adQgRFDEKj6YdlEZLi4ubSoubTlxyh5ND4HW0FGEugj+ERBlMmPsZ8Gkm0RJ
osRauTbKVODxZXAIAQ1VWGfR/IV5hOyDd9F1JEBNkIAJni0wMSTSZChI1RPJ
+ZJMMRuc0SPtOfE0kqxHcVFstDAhNcKGWDNiA5XYM7Smo/QLbTbQNEPeB18C
LyU0WLVqW2FxQ2ZWZXFZu/mpC2iKiuHgs3kQcH1O7kMfghwQXx1TTExMT8iD
SMJgHDUFYLSHLmaMeXrQEpIx9RGjCeGUkCAtD2jLKlmxAZA8OCaG0QHw4bIZ
Hk9J5XxVVIRNRQwVbKto6pqAQULllfAOD0KGdZ+EhNTYeicJBpfxEzWxNe42
M80g9yHuVvj5hF+7dre8rC07tyYhsch0zS7420VSnlACQeQw42si+Lsgsp9j
SsigKmHIIkHaGcAnoTULPf8xk+L5j2PLmnCWNoOgi4AzpQhBGVQTlIalMxSc
CBsbdtMUStHxT0bZieQC7XAokaIkGkPiaax3jxmQrX1iYqSQtsRi1E02MfEr
nkDIB5NBJORLDBRzzljavnzxZWfnUFhoam1977Hj9nyhMTInkK0LyKhdT0Uy
yARHQOVXZLRZN6kmPcEAIcM0R0OmGew5BDWaF2gQCT3RQRm+FN4BCDKU16od
NcQhHe24KA4maKYWE2zRlp+6CDJnIredTkxgEEnEm3XnhZRRx0AmFgP1KqEo
z0MqEVxEoFIYSETyd+Yt8vEMaKxrr6lsiY5M62wfio7KkEkXABkCbsnQyAQa
SBBHwcJFS6QyBY4MkEoqxm15TU9/Zq7UQhDpERnLgFo4EmbEeoeu7qMRJEWb
7MlycjU0LcX4W4h8JiIai0oNcFocLSN3okEQ28n0EQZNKclE0MFtrA3hQCE1
QlJCH4QgJLVMqpIC+c/Djp5EZWCEJadSbggYcNnC5WmJ6d1tPT1dV50cLqkz
ivJzK9atexdocLncZNHCZfPnL1DKVXK5cvPmrVu3budBVSXiEH12IalXonKi
dmQj1MO2HEaQho8YIQQaXaJxJKdW7TQ1H5AIFeM5QPiaBFGxX4NvA70rZV/J
bci0CgtxmJQtFtXEtCkEaVmKXXjtpLzWhrgD8hqADzIRigBA8ovlWBQD+Nau
3pCdnjM+cqO/+0qQb0hBdtH1azcP7D0CTl60cKW5mcXB/YfmGs9Zbbpm/959
hw4cXrp0qUQkJtfnFPPPyG/6MJ3pI8AEJaVfBEHEKVJigRA7hBZZHOxIwwIW
ZRgjBLeGATGIRBISymOmpvKzGGshfgVuFx4C4GKzOMJBxbcJ6Hj60ZUV+vLy
eic/cuGRf4G9SOB0gFeJVIWcR+iGLJi3JDwo8uHkw/s378eGxabEplwfvJ4S
n7pg7ju7d+655Opua223f/eeQ/v2njh2/MSxo+/MNeGj7hSpWAJMUvwDRAJu
Tv/VvQm9p2EEMQ+y4lFOCE5YAAEhxdkcvSpJ03LCKkoWUIwacymMIId5KQRl
DHYcEw4fATY8w49wwmAniIhr7LbgCcOyjJhmPcx9mHq6xWDgLaD+aI8DmJoS
1FkDvmvBO0vlMsMTR09NjN6avj0dERjh7+Y7NTHZXtccHxmdEBUTHR4WGhjg
7+0VFhAQGRx87MCBZYsWbt+8aevGDQvnzTeQK8BEJPYnyfjTd/LGLiFxh7Gd
SRDEEk97QFMQ6zUi1mgrRXfAc9h4MgltCdkSCJKEJUdYfpmpkkEoZNJGwD0H
gs5AJFTqIojnCRahTKGFVn0vCqjw6YE3iKCICcepAHwCYJYIDHg8BaCPSmmy
d8+R1ob2saFxdbLa18W7t7lzuLuvtaquOCs7IsAvNzOtKDdLnZoUFugXFxZS
nK3OTk9pqaurLi3NTE1xdXLcvGnDooXvyCRSwIMkpYhTwG/sTRAeJAgSSwZQ
QB8oMhy0wYQSSxQYa7yP7WfsMrAWCzRjcHaAzhQAKuFwFh4ETWxy6E2z4o3J
rWMQ4QflLDtjEcH4LMwcQ11LmKf4bJyErunlaVkIYqb5BXGuGKU2UB5KBnAU
Cw1NV25Qp+cO9V1NiY6rKSq+PzZ2c6C/qaQwPyk+Jymmu6FqoKO+q7GisaKw
va68taZ0oK2hpbqkpbqsq7m2ojC7KDstItj3nIXZ+lXL5xkpVXJgS0HpirMY
syCoLSX0k0UkNQQDut4w8CUHO0KpQiCRY08cY8E6AkzejYDC8BFKmGI9gs08
MLBEYtUKjkmyTMHIUsZEBBcHE4CRnzzSgaJJz2ERyupBcFdgnkjBHSIhAFMD
fHwOYyZpkrysNSXGvwWb9zwmXgm8OxEp+iXWPiq/F2NZJ4YZQOAAqpYsWhMR
FNPd2tlSVTnc2fz01sh4V11HaXpbceqVxsIH1zoeXe++3lvb11LU3ZDXUp7e
XJbWVpZ+rbtqqKOitiCxr6morig52N3G3+Ws1dGdZ47sOHlw266NyxYbSwyl
8AfjWYQZUzdTrBdNLR6UG4tlRjDMCH4sDmCKZQBXPJ/x3GYnNvK/+FrwUSoG
xxIZpQOgpFEjlbcC1rbBOOLpgb+IkdW4rBo3GaF8OjpfhPHCr+gOxTDuIRRh
BFlTh5EVxJ3BdhGS5xI+zkFAUMCp0LnT9rU1YRNGW8E0rkQqnuvjFd7Verm/
vWP4cvOdodap4aYno41PRuo/n7r81cMrXzzov3e1+np30d3hmitN6uGWnMmB
yoH6jOIkr/bShPL04IGGnKsthZlR7jmxvmlhl9IiPWP9nS/Zmtuf3n9o14b1
q1eamJjwtWN6HIxmR1CmnAtA5OOYtkCMsUOElYgljIACPIJlpkSqpKNSUAAK
NQlQSi9rlfOhvKcmPEIQpP07QnM2h471I/oWJNixV8j6hjKG1wTIRmLnCREO
7MeJiBCRtlxsUfCQOSGXyyUSCSOh0Q3DHb5EgjJ9cpnB6lWbYmOy+3rHHz14
Oj1589HdK49utz0ar3052fTFg7aPbzd++7jnw1vNty8XPhyufjLecHeguLMk
oibVszkvpKMoOjvCqSzJt7cms0odcbkmJ8bHISHILdTTwdP+jJfTuYBL9l4u
drY2Z83MzIDfuGTJEpVKNZOLMYtOxAgyPCiSgumN/SldBLG4I6YIlJModkFs
Y2qeCHTqaUU0grRu1QRwkCkFVQ+kP7Z5UG4IuKtiJuBAv8LoupCEyKR0GhfF
LRnxjmwGPqk50kshfBB79OCz80wW7Xh3b1Bg5PDgzRcffPv8+RfvPf3gzs1r
I/11Uzeavnja8+WT9n98de0/vh3/+cWVH571vTdadaNDfas7rzkv4HJxaG9p
eFdhSEOmb5KXZVVqQFlSYIK/Y7y/c5CrjZv1KVdbCw9H6zPHDxw/sOPQ3ne3
btkE4Nu0adPy5cuVSuXv4qW7iWUGIqmKSdYwCEK9z6gbJKOwfSLgNMYyzSPC
WYqysI+sKctkpCjV4ECC1ShNA50aPmMHgle8j4+zZagqfCaOyMHjCGss20V8
OASQiwHLSaGm4wuEKFFO5+mQwAf3xpNIBQqlWK4QQZGMUnngN2/asDkmKr7v
8tD1a5P3Jp9OT78/NHy9q6P7xrWhLz96/PcfP/yXr6d+++z6X14O/PBe+4cT
pQOVIZ2FAYO18X3lMX2l0R3ZPvXJLvnBZxPcjgMEwy+aB9qdSAvxCHa2tdi/
48C2DQsM5WCGKSVCIY8ppOHpOPh6Yy8zbdiAQQlTCRwiKdYX2GzA+oU1AzRF
s3SnD6eIizaPCYJMlSZWnWw8k0JQqSlBFBpC4NgBoNRbq8+GTzGCcgi0QCEW
yMEA2IGBcIR+A/Yd0J3BAW4EJ16lUgY7kYinUPDeMVHs2Lbez/tSTmZGY3Vt
X0ffUO/w/dvTD6efPHrw+INn7/345ed///OX37yYennv6lePB799evXze219
FVEdhUEjdYm95ZEdeSGlsY5lsfbV8Y4NaR51qV4VCV4dxcn9NYV9dWW99VXd
tTX1pSVZSckH9uyeY2SsUiixd6894V8/x4SsF2J24hgIfAXes1hEDEsgjqhs
mh5e063KIwjy2EZ1phsFhwLYjmzUZWNI1k8gxfakxBGXHWqKDKneJWaQ+B6l
BLFZi24e6kGWB4V8nEHjC8BvAgjOmSPdsmm51emDgd6OkcHuNcVZXY1VV9pb
7167dmPg6kBr573x2x8+fvbVyw8/eTr9Ymris0cTnz+c+PD28DePJn96PvXz
Bw8+uzt8s62oKTe4Qe01WBsDROjVqti+8riJjsLB+rxbPfXXOxqvdbbV5OXV
l5ZVFhQX5xaW5BcH+AWuNl1DqKdXjr2qpw9+u5jx7Ni4B+Q+QHWMILTHpHIA
Iusazxh0JVaxdvMdgyCxTpm4DZM20kKQzzdACGK+U7LtZrhyWMHEQnGeS8hE
UCVSlSb+gzLvTIoTWlwS4MjI5AZSmYqxdaGlBAuopAqjpcuXnTtvkZ+f1t1R
2dVa1NmQP9ZX++hmX1tFdmlq9K2e9sn+y3U5mcWpSf1N9Q9vjLy4f+Oj+xMv
J8e/ejL137764j///OP/+utv//uvv/7vv/3lv3/9wZ8eD0+PVHZXR7cUhLUV
RbWVxFdlhBcnhRUkRKSGh1gdPbrIcK6xVGWiMllosmjLpu1+PoE5OXnHj5vT
QW9adr06gthrwIYKxg6YMAg7OgBF2ySzNUXSk4qVCZqSWmZhEMwvOApEdUUB
BpTJ5vJ4TJUjxosghTCS4GQHjr9hX57JpQqgc8HE5FF9BfBbwaWMjBaAoVDM
VRjMW7J8vcpwscJw8Z4DpwKCo3LzCu5OTnz88uHo1eabI02Pb3U8uN747Gbb
lYYsdahzT1l6R2GKv/XxeC+bkqTg5vzUT6ZufP/eo58+fPE/fvzzf/38y2+f
fvb104cf3Ll+f6i7szKnJj++Ijs6+NKZc8e2HN+1au0i5RwRb8kc2fF9O70v
Oof5BuzYtEMI7FuREmhqPtRHomXLVpibnzQ1NVUAIa5JjiBQXifoTeIYjPAE
XAa8MaFAO36oFRN+FQQpkU4t2IIdQxz9ZhFEiV2mKwqndHHqik5REZ8UDSly
/4VMM6BACLxCIBVRVQOxeKFXYmy0wGTuYvAV8+evOG/r0t0z2tjcX1LeNnJ9
6oOXXz58+PiXn7776ftPJq933LvedG+oemq4Ynqo/MFg+XR/WVWyd5Tj8aoE
77HG7LI4r/JE/5sdVS8mrj4ZvfJwZGCktbGhMKcsIzktMjDU+6Lt6cNb1ixY
aCw0lkERgIdMyNzNQpMFh/YetrGyXfTOMqSJREBHC2FfBbQoDA0Naaq+OnA0
gpj72OgxEYzIDtCPkZ4KZ04zF6UuqYZZ5LhpNbwz5QEGbNOuEkhFTYiGDYlj
44rHNqeg8BqKHohQSRh4RTpOLlfKZMCCBXJEbjLnnRXL12zbuufcuQulpfVT
U88fPfnkybPP/vLLf/zrv/7PX3/5+68///L9V59eH2ofH6gd6sob785tKQzq
LA0dbUpuyfUPtdtbFuuaG+JQFn2pPNqzMT3oVkdBfrRTebpvVVZIToKvOi4o
3NfV/MBuIxlUPyoZTw7EAPCFpAIcKwM+GJBoqMhJpJAZAMm5bs1GWCkMPSYR
m+7XbK/S8DsTgmjgbA5TMIJtW70IakeDNQiSaAzV2MV8A2kXmhlBJVuVqmBS
tDg4w7AeuT19NjasvGWOK+WKeXNN1qxYvXfHHjcn14zkzNrqhslbU7duTk1P
vzc0dOP773/9r//5//2///W/vvvq6798//UPX3747acPaotiSzN820ojBuri
atWerYWBbYXBlakeCd6nU3yscoMcsn1tUjxO16d550Rax/iYxfpbejkdcbE/
tmS+HJi8OMiJKl5goAjeDw70IdeS7R0WKBSqFStMJSIpGMhIhg4NGAyNtFOH
rwUloA+SSyjAiMrE6XpjGi8BElWceD6OgJHFr0j5EB2QwVYo6UChU1daiXik
75jgHpNKpiLVOHrGCnO+xnxCFdc8/jzjOft27HK2t48PiyzOyu2ob7o5PDrY
2//yvffHhkY//ODlzz/98sN3P/7jr789fXT/+cM7H7937z/+9vWfPrgJNGB7
ZXx1jt+37w8+m2i41Vc82pGXHn4h2MXc5/z+RLdT5VHOye6nQh0OBF044GO/
/+LZHW4Oh1cukYpIdgM1UECpIGLrAXDYkA3twn4KgcDExEQhk+MqUmQaozJE
9rdopuRrcqIE2JkSGRhwqmOhpF00TvDCc4ZUkuNjRLthjEgVCmehDzoNQfKw
uFKdk+EF1r6AzcKjt1hPR7sFngfzYmKVSmVsOGfF4uVH9x/28/AqzFR31NUP
dnSNdHdDd+Dqlbtjoy8eP5y6c/OTD9//5k+fAew+//DRR8/utNXnP5rs//LF
reGuojuDVQ+uN9wbqXp2u6U2P/TQ9vmrFwCtzFtkyPOwOZzucz7W8UiwzX7b
g6t3LJW6ndt36uCGRXNx9RsTKxCLhSSew9bei3jMUlGaDZymUkIE2VyhQCqW
ESVITnvdEn3MgOAVgigijTx02T8PY8cMIQ5oCFh9JCYBSZw/0rQ/s+/ialsw
mGwFG8rGNjAYEqkSGPwwZAe7XeRs6wST+kcDnobsTKZzE1x87tx5G9ZttDC3
DPDyayivudYz0Nfc2lFTd6WlZbijfWp0+HJd9fO7E8/uTjyeHP/sxeP3H03+
/P0nQGx++uz6Vx/efDbZ/e1HN/7+3YNfv7z7y58mv//kZkrURdN3eKsWiw3l
vIXzJcYq3p7NKzKDnFI9rVzNtppvXRx44YTZ7jXzldBOkgig0MZgwUUzYCCL
h3I0qCAHui1MShewhUTMk0r4eB9neMH0ozsyCBvOVAwz28Z48RBEtCqOpvdf
oL3hAAIMEYuwoyHCDIiT2tppXKaQD1meEhRQVeLYOCnewOFWABwewGvDGEEf
AdUSg1dY0y4zUCiNlao5BoYmcoWhSjnHZO6Che8sAe7wqROng/2Cmqvq22sa
Ri73j/b0tVdWdlZX3RrofTA2dLO/s72y4PHE0LPJkYnBjm8/fwzGD18+eflo
6OXD/n/59sHY5cKPH/b8+tWtHz8d+7c/P3K02rZiPs/b5aTLBTPTZXOUMt66
dcsP7tp8csdqf+ujxzYtsj6y1dnqiIkcmZoCPkptABTg7MXyAYEC81ZYPMKs
iUiTl6cHy2s4q6VZAuXNeBAn5UWUU48CoVKStcEpOUYHgfuSSPlilKTDYhMN
roLDmhFJVxRulfHESp4YZYeBYMRhWBEMpLMVODLMhuCzyBBlymzkKhMweAI5
eJ07dzG41YULVmxct9XB2jEuPC43PbeuuLK3qaWzurqrpqY2P68yJ32kq+nu
cPeL+6PPb1/5+vntqZH2Hz66e3uw8ZOnY7/88N63n90FfPfJo/7nd1r/9vWd
718O/eP7O//+83RfU+KyubwTB5dZn96xf+eq0+b77Kwt9u3dfXjfrt3rl5vt
WONw6uCpQzsWGsmgmyDC6Q0BcV5I2vEP9T+8zka7BnSlCrbhSaod2w/Y1GHs
KyYrx+QXAEYYQRFb2YvfxSAKMScCsADHSQ0EUthtJJDIUW0/RgqXLaGmBqlS
JlXh9D3AHfAd4D5wY3L5HOCPq1TzDA3mr12z6byVXUp8WkNlw0B7X3VBxdX2
7vby8uocdXlmynB7w/Welsrs+JcPRh+OdX328Novn95/Ot7xl08nP5oeeHSz
9fZIzefvj/zLt9OjXbkPxqrfn2z507NegOC//TQV7We+3VQETJQDOxYD8Xfs
wNbd767fuX3TecuTS00UZ47tObJ7M87GyoFJglo+2bSykEeWVuC9kTPwhxEk
BgORcnQNDFaRWFei1CrMrvIlDONAjKi8LWYrFBvXIIgzg6T0F1wKtwuRiKtU
KpdJ5BKJDLziMj+5zFCpMMavCrkReF221PTUCcvEmKTGmoaJa+MjvVcnro5c
7bjcUVXVW1NRnBg92lY/0dP83YupL57c+Pb9W9PDTfcHairT/P78Ynyyr+zl
vW7gsI92F3zx/uCj8drbVwpHO7ImevIfjNU+vdn05bOhuIBz54+utzu1/cC2
xauXyKTIJT+0Z7215cGtaxevXjzHWMpE63BpBFzjQlMbQNIzb6vR81VBxDss
D3IRJH4ixo6UNwAEhVImXYgjDNh4hv+KZSS/Dy8C8zsSGQAFOkFysRBgKgKv
4PNClEsGs0GKeFIukqEKRZlKYQDUHCCVVKIyUM0Bn1q6eJn1mfOhgUF1FVWX
29qKs7J7Wlof3roNjJY7w8O99TUT3S0jzRXN+am/ff70wbWOJ+Md//XrJz++
f+PFRPvXDwbeH2v660c3nlyr/epJ3/WunKGW9PHL2c9u1nZWRPfVJU70FA+2
ZLWWxvs7HnU4uf388a3Hdq7wdjI/d3K7h7N5gJfVabNt603n4xiLQowjvEzT
riYGwmPqIv5P8iC90dKM1NujHaiKySAg4jw+cz67eDWDvkTOAwgiHKG5AqSr
QArlJpKeMgGYFiIDqXyO0sBQpjCSK40VKvCvoUxmYmAEBCU8qFQBmQwZUKqa
YzTv4N59of7+FfkFbXU16oS4jPiosuyMyWuD02MjLWXFH9y7c6Wx6kp94aPh
1vH2sn98/eTT6St/eTnxjy/u//hs5MnVqi8mO358PHCzJePT280fTTTc7sp+
NlY9dbVopCVlpCV9oC7xZnfRw9H65sKYSE/Lvevnnthnam2+xcV6f7i/dYjf
OYfzu9asUEphoJaHk1UaI0Qo1u6JQFkYtpNFl8hvFmzRu+leio1pk6JQCVvj
xCBIqm3x4CDI2KLAjMQMqI0gYDEDkdxIJDORqeYrDMFYZGyyfP7CZfMWzFcZ
LZ4zb4Gh0UIj45ULFi41mWckAXCL5hnNNzKYu33rTn8vv5S4uIyEuMLMlIK0
hIrslDJ1UmtZ/lh3y/2R/icTI9998Pi796e/mB55Ntry5QOI3dTV6j9N939x
r/tvL6//5zdT7w9WDBRHtKl9mtI8Xl6vfTxQ/PHNhhstaQNVMWA05wUVx7te
rU/tqkyoygrytD1wcv/KUwfXnDqyzsXuoNXJLTs2z1ch3Qeww8ITOHQYQLlC
xUEQgsjX39Gpe+QPIsi5Gknj6uKFAzWMsmbfxZqOEZJMxlZKK0Gc6CcIGouV
8+UGy4wXrJq/1HTekjWLVqxfunLt4uVbTNfu37pj54aN65ctX79s6bqlS9Ys
XrRxpemWdZt83H0zktOzUtNzU5KzE2Oz4sKSQrzz40NTQtzby7Omr3WD8fH0
9Rd3rn35eOK3jyf//vndFxNtty8XdpZE/fLR2HhL5md3Wp4NlN5sSPnyVvP3
99s/G699OVJxpzm1PNruUW/BdE9Bb3F4dbJbqt+p7HDrhly/puLQ5tLIjBhn
D6djLg5Hjh1cv2KpEvh1QnY1Az5FLqBKtEqR2Vgfs3jFDAjOtP1xBIk6JpBR
Je5IbHIQFKCAM9tXIhIy4pdJ8aMsP7RYkI0q48sAcNtWrDPbecDmuIWjpY2H
nbO/q1eAm6e3k2u4T4DHBcfje/ft2bzp6K4dTmfPxAYHJYRHqVMystMyqooK
2qrLm8vyavNTi5LDIt1t1JGezUXJk1eafnxx77999+JOX2N9Tsynd3t+fDb0
4mbL9NWyxyNVL2+3fHy76d+/vA1Y71Zj6lRbRoLj3juNyR0ZnteqIm82JoyU
RTSluI3WxFbEX6hIdIz3Pt6Q69tVHdtaFV+gDggPtLtoZ2akhEwnFsGBF6zg
MeJLpx+Q6r+giz//LyCI3EA8wQhXEj8CZ50wiKSeluZBjKBYrhJAq0SJHQRA
ANMFKw5v329vfs7azMr57IUAFx9/Z+/kiIQQT//ogJBQLz8nq3OeDo4hHh5l
mRntlRUZsdHBnl5psXEF6WlDXR0TA931hZnZMf7tpRnPb/VP9tcnBzj+9PLe
Xz998PG9wZ6KjN7K9N8+vvW3j8f/9tnEt08H7g4UDzUkPbxa0lsaMdGY8uFw
5VBJGECwP99/qCTkQbe6MvLcdFtSX67ndHtqq9qtNMYmN/zsQGNif1NGStRF
d6cTVif3btu8Si5DUTuJTA9kWsBp927P6g++XVmqB0GEEWY62penEWTNUS0E
BaRbQQxBlCoNYYBFqpKKFWuXrz2y65CjpR2Az+LgiaM7Dvo4enhfcD+x/7iD
pXWwh09yeCSAryQ9/XJd7UBTfV5sZGFyQkpkeG5K0vhAz+fPHvzw0XtD7TXF
KeGA7z6duvbVk/GfXtz+t6+ffnJ3YLA+63/88PzptUbAgI+ulqcGnPn55Wh5
qltZiuv01ZKhuoSeotDB8qjm1EsPO7MuZ3s3Jjo1JF/8eKSkP/fSWHnArYao
262Jl0uC67N8anKCvS4cNZZDlScT8+QyXJIhYuoxqEVltSXn6yH4z9v47LI1
TJRaxNbJUNEYLEVZx1DGuHvaCAIXA/xqhdIIVjWIFfON3zGHSNm6nHNytLS3
O2l95oiFz0XPIHd/N1snVxtHfxf3ovTMxuKiwdam0pSElGCfkqRodWRQQVJs
c1nBF+9N/+dvP/bUl108c/RyTf7nj8e/eDz+9dMbz8ban421/vs3T/6f7558
83jom8eDw3Wp1xpSn4/Xf3K3/asnPR/eafr0XhsQpPe6cq6URtxuSnnSm/9e
X971qoibjXHP+tRdasc7jaGPetP7y0KuVMfW5YR6OZxYvchIjswVWDQsU4Df
wocWtFTTC68HwT9G9jeVonoRZJJKaAcOFjKaHymWlNIIQpeQdUDgr5cbKOSG
hnKjAzsPAPg87d0A0zmdsbc5cd7utLW3k0eEb3ByRFyYl19WfCJgvYbCvKKE
mPbinAZ1UlqAW5jT2ctVBS8mr/fVlVTlJE2N9nZU5b64P/qXTx/98PL+R/cH
63OjAOv921cPAPc9v9785/eGb7ZnD9cl3+7M/ex++/2Bosn+gtGWtGuNSbda
M16MlNclXIxz2t2W5jJeEz5YFtiVe2myLXa0LmSyM7W7JCw10GbbciMgKw1h
j58I+bZorRJUeAlT/6IZGqn+MIIM8d8GgpDpCHbsgGVOrEQlwQesCknkkyBI
9oHuA/ABA2bdinV+Lt5+FzwCL3oDyXli75EzR09fOGMDbJggd9+4oLD64tKr
zc2lKUnVman1mcmpvi6Zfi7+Z44ke9rnRnjHejtGezp88/69bz+c/u8/fT7R
3zzWU/vwxuU/f3IfOOy/fX7/++ejmcH2X033P7paOdGa8WSw7EZbxlhr+mRv
/t3+/IIo21ud6smOrLHauM5sr+Zkp/ttieURFnfbEwYrgkbqoy5XRKjDbdzP
7pkvhivpmCjlQrg+EzCemUW9YMsnWRMNEYlD9jezQP44WHovwkhObQQhw7Fp
Xw4nMg4j1S9GP51KKTeUCmQnDphF+4UHO/v4X/CwPHDc2szykt3Fi+fsAy/5
FKVntVZWA91XlprcXJDTX1nckpOc5e+S4W0X73ja68Su0Asnp4BgzU/84tGN
f//zZ9+8mHo40X97qP3Xr5///KcnH00Pff5oBCjB98aaIAO2ZqV5n/xkoqG3
NDzN/1Rzju+NzsyHV4un+nJzAk6P18VOtaW8fyXndmN0ZZTFZHP0SF14S2FI
nN/5bStUeEV4lQiyk5DPch8sRBSjChbc/MIQ6a0Q/w+KzZk+TmQkDR9UehIZ
iaRhe4Z49DD0jZK5BEGy3o5CZmC62NTN1jnCIyjY0cvP1s33gpvtSUs3G4ek
sKiSzByg+0ozMmJ9fbMjQ8tTYktig7MDXAuDXGLsjqrdrTLcrQrDL/30/h3g
Jnzz/Pa/fvdhuTr2/ljv33/69KuPpsf7G57f6ftkenCyt/Jub9lEWw6wOZ8O
FE80JnXk+fWUhky0p0W57KtOce4rD3vUm9Nb4NuR6XK7PmqkzK+vwG2ozDsn
+PS5QxsBcIZCnlLAA+ayEGWKebBAgonek+iKkI2C4gFLFLSXK9QpUv8nmjKz
OCAEQQwim1QXEwQlUjkYJLhNmrlQbyBj1QAEpRIlgE8lNTh51DzcKzDSKzDM
xTPMxT3AySXA2Tk/KSk7LrYiMzM7NsrH9lx2ZLA62Lc+I+5quTru4imfE9uL
AmxzPC3aUvzSvaw/uXPli+mRzx9d//XL9ydHe54/GP/yo4eP7w31tpZMX+8a
bC6szAjqLI69XBJ7/3LxcGVMV67f4yuFYw0Jzdledeku9WkuD3vVEw3RQ+VB
99qTquOse4v8GtJd4y7t37FMBFhvnlKFY9QSMVM8CX4yVZOvgY+DIPHu3wqC
r8WSs3iRuKSZ7l7B+VyZTIELfcmyDwKENMzqwyioVCDBjgbT2QdPFkqWLlji
6eSSFBEZ4eUV4+PjduZUlIdrVkRQvI9bcoBnRohvmr97tJttWUJQTrBrZ15M
VbxXfpBtjq9Vituxy1n+D7ryPr3R/eOTiWut5XeutH736XuffDD17NHNyZtX
25pLJkZa26rVg61FBXG+temhd7sqJ5rz+sujrlZHRV/cmx92tjndDfDdWFXo
5ZxLtYnnxxsirzfG9ldGFSa6O5/ZvcQAaj25CPZlobaJ2WJfDGR8zTqx9DJr
s5P6FQ/q/d7fhU93wXZOTzepAAcISiQygqCm7oWpz4eFmgIwiaUSYIHyUEn2
HKO51pZWEf4B4T5eYR5uwa4O0V7Osd4XYzwcIlxtAu1OlsUHR7mcbVZH16YE
F4Q4ZwfYZnhZ3mpKr4px7CsIulEfd6cl89lg83vXeh8MdX00NfZkcgQw4PSd
waG++ivdlXdH26uyorurMu/0VD0ZaeqvShuqTbtaFXuvJ7sp06Mj22u0OuJu
S/yN2vCJuoiRquCyWOsSYIv6nT3y7gojKW+OSmYAnD0BdxUCuk1gJmLyZ143
+822N1aLupVsBDJcQSFmNwwfWXqFZPTYzmsx5elDM0alMFpnutbX1T0mKDja
1yfBz8vX9kyI87kAe4sod5t6daw6xD3ukm1htG91UrCXxa4YJ7PKOI/O7JAH
3fnVsU5XikMfdKu7C8LGGys+npx4Mtp/72rrWHfF9cvl06MtdwZq712tz428
1KCOmOypuNaU1VIQ1lUe0V8b++hK8ZXyqNGa6Ie9GXda4/KCjvYX+/QW+QCP
vj0/LMjJfKkRT8mHxZxyVKlCSih5VHk5lkKcNjq6ApDPrpVHqlDeDDLOv292
Hc4RGjsJtZF+ai34UEwGqEJc28Y0RAhlcqnKxHCe1UnLCN/A7Li4vNhoIDb9
7U4HOJwKdrIoSghUh1wKsj/ZnBOfHuBUGOGe6Wd3uSC6Mc2vPMppvC75bms6
YMAo+3cHiiPeG+4siA6oUUcP1Kjv9lXd7Cy831v2Yqz5SlliUYhjb350V164
37l3m/MCbvXkTA8XdeUHNaS4jjfE1CbZdeZeas927Sn2r0t3ywiyPX9w4zKV
YI4Elk9LUCUntFaEWoKIzy5ESSCjZRGnqeF3WXUWyGbqbXkrCIrYDXMfKy40
1dfEvoFdMDIVvUQSDKCJlEaKOdvWbAnzDgxz9wp1cwt3vRB04WxGkGt3Wdpg
fV5tZoTP2UNp/g4RF05k+NsB+Pyt9gAEx+rS29V+ozXxjcmuBQGnUlz2N6e5
Nqm9+yqi7vcW3e8tmeopG6lOu9taMFQcnedtMVYe8+GVkooou9Ys35sd6ooU
99o0r6Gq2KHysIHSwKnu9IHy4LY87/xI2zDnY3vWzDNEC6caKaTQMgHCQyGB
RfoMtwlJd8lM5WF6eeR1bQ+aznoRFOisizLTpWayZIgIJXOP6EzqKQwaBGEQ
G7XiYhClYoVCrFq5aKW3k0d6VGKkp0+oy8VE30s54V4AsopkPyD0Yt0tPSx3
hTkcS/ezTfI8U5PkWx7n3pkb1pTh25ByyfXQ0qGSkIYEx+HS4N48z74i7648
944cj5YMj84sv4akS+lux2siHcuCzk41p/RmeU+3pk3UJ5ZHO1QlXqpKcn3Y
n9+Y6tKY4dZZGJAXYVMQc9HmyPq188VzRTxDMU8BVy7nyeVK7A3AMItAqzGH
TzVe8fV18HGweGM9OJMUpe9kls9ylDV9MlnbhL4Oki1ivQNWJ4qkmBOBE2Go
mrNk3pJTh04khcbFB4SGXHSJ9nAtjgseby29XJbQkhNaEnOpMtE73c864Nye
vNALHic3l0W7xDofyfA63VsQ2ph8abg8siLifG+2T2mIRWGA2XChR02EeWnw
sYna0OES//YM59pY++LAMx1pHoW+lmOl0bWR9o3xF1tSXK5XRQHhWZN84XJJ
YHdJaH60U8CF47tMTeZJIOtJUe+JTIqYCy26C2uu+MyCzLqCVDDzo3lo6r1u
SfzsgL4BD+q+C1QekJy6Spy0yTOshx+Sgm1RMUrK88Tz5i5Yv2rd/u27g9x9
Izz9EgNDMkKCC2LDskM8rlSrb3UUXKmIq03xbs8NLQp3zPQ/F2a7P8rxYHXi
pY7cQACf2vtkjt+pzkyPiLObS4NOB5ivbIg+3xZj05t8oSvFoT7qTGmwWUmI
WY73obCzG4aKgq9XRPZk+lisEgOsb1SHt6c5FUec7ijyKU91jfeztNi7arGK
r0DYGQCHAbp70HnD7IXq4fESKBp7m8NZM1GJrp4V6jzeRZfar3hw9rdeZZ7g
u8XqjygC8uswasCnwAOgCcgAF1oE7pQULreoUhkuWrB48bx3vJ1ck8MjQ90u
laaklCbGDNYVq4NdmrNCP7ze0FMS3qL2zQ60Ko24UJPkXpfonul9Ksf/THuW
b46fRUWUQ2nouXTXg0A2dqe6Xsn2vqL2Gc0OaQ5z7Ih1HisMuVMXnetzuDDw
aH++e0uyQ2WEZWOCXWeGc6fapbfQoyHFuiXXNSfW7rz5usVGkO9UQp5KJJAC
uHhCYHJRliT2tlG7EGWxcOY2/uEc+vCpp7fMwgi6n3rF8199m+lSxJbmU66r
ED40SoaXhSHakI3Mw0ipkdGceXNNJAL+yUOH85KTY/39kgL8mvLVDeqk7pL0
igSflqygW+3q0hi7pjSPgaKw7pyA6c6c1nQvoL/aMrwLg88FWm4uDLRMdd6f
43msOtSqM/FibdiZjlinJw2598ozbpel9GX4tcQ5tiU79mS59Oe7+JrPT3Dc
0JpqWxhqVh5j1ZjlXBJv62OzbYUJz1jOU4h4SilPIRUgtoM/QgyXMGVlJoql
4IoXAU+zCjoHRKYiXV8RNX3wdxF5u9jxqTZtvSEFvrYVTQEKh1QqxyBKYFcF
swaCUmkw32Te/DnGzrbWZdkZl+sr00L9atXJ423V1xtLWtSRz0caeosjuwuC
s/zML+f65/ufro627831z/U96X50RWWkLWC9PL9TJUFWCfY78z2Ppzns6oi7
0BxpUx1wdrw44V5dbluiX2uCp9+xNb7Hlj1sT7ic5dCRfr417WxtvEVFwvmM
kDNhbmZbVxrMU/JwQ6xYwBOLmU5QcO8oJMisTALf4UNkUXMv07ZArzBDNnoy
0xtH970tnnr1jdyGXpuZE4qhtDkUpAAssuIWbjlRylUL580H/Hn2xPHsxNgK
AFxXw53e5sGagqmehqEqdX9JQkGwTV9R6J3WtNvNSYOFQRfeNS70OxlvvxNA
VhFhk+NlHmOzI8vjODAvK4OtEs5vL/E6nu24tybAotLvTFuy92V1SJ6vVTOQ
ujH2DfG2zcm2xcFHK6JOAu6rT7uY4G1+cON8YxHEDtgpMokU9nYJYS+vSMqT
yNFiKnzUF8mXCmgEhXAIBVqWCYcUtM9OU0bwmt1hf5wBX/3jxBAl8LFKAUIG
eBDzHeBBsC+XKkwMjIylMmfr86nhIclBXqOtVXd76q9WZo3W5Y7WZE13llZE
Ome6mwN2G6uJ7sy8VBF6Jt/zaKn/SbCjvnS4JMgy1+t4osOulgSX6lDrNIc9
uc6HYk9vrPGzbIuwrQs+Vx5qUxJmM1AclOiyqzXLqSLOAsjM3JBT1cmucZdO
ntpuukDCU/Fx6QNfJocr8UKwYFgeWppopS74u3DLMK4qx0FpuMqWkHSKcQnF
1wnC0FByTpvdMnkrSpATI5rlTBR+EdG2NHsnTGcuFqEAPrCvUhjMkxuEeno3
Fha2FOdMdDX2lqu78uMnGvPvtxYNliS0Jftme5ysCLEBSHVlXhos8Fc774k/
v6kx0ibZfkdDlF3qxX0Awcqwc4XeJxsi7Eu9Tqgd9qrt9iRabkm23AQ4McN1
f328fV2iXU2KXXaoWWHM2fps76hLZpZ71pgaS4BfZwxsYx5PIVPiPlmJVAkG
SS7gvDrgR9xAB6OgTOMq05gslUqpJjs+zWgz2ZmEhkRX6pVmMyH4ZiDq/aDe
S8lkMjqmRKlvEXnEG0AQDGB8bt2wJTYwtLu6rqeyorMkvyUn+U5bxUhF+rWK
lLGyxOIA61SHgxWB56PObIk7vy3n0qFiX/PIk6uqA0/VBluU+pm1xzuWB57O
dT+a6XwAwFcfbpdmuyvl/LvR5uvizNdHHVmVZLUxxWFTa8r5NrVzdYpTkr+F
ndmmjUuVRmLk3wH4FApAOyA50dwT4QeQsTcMBAWYamIMpgBpRhZNPkqhoXW/
mXW6hBxQCJTkarq6j0/54K+O4BvA91qbXC4n65TCG2OXf8GSE+Ym+CJDldGS
RUvNj5hlpWb2NLTXqHOHmxqv1pTVJIb15iVcVodVRzg1xLqp3cxirXcVeVsk
2+7OdNqf5bw/+vSayBMrK32Op9psiT29tiHsXFWQZU+6R2eya4LNzjwPM//D
K4MOmwYcNA06uMp719J0h4N5fmbRF3d6W23etky4xBA+IQ/2LEiEUuAeCGF/
EIYPN6LzmPZn1i9GLWCA66TwwWQAYp4YC1XIhyJmATfkHNAOFPgcbv2jTRed
VXE0UvT/jCXD+ZZZ5oNCLgXEYTSgQIR7x5giXrRuhkwoN1YYnjpslp2YWpFd
NNB2+Vpn743OjrHGqv7itCv5MRmu5nneFnH2+3zN1gWd3uxntjbRdleo+apI
c9N4i9Vq2w01PgerfQ7nXdyTab+jN8U1yWZHRcj5PK9TanezONu97gdMvY+s
d9u7xnK1ifvxnTtXzZ+nghwHmM1ABngGPt1BqQBiXEo7raz6xr+Oh9dJY38s
Cp4h2wY3/ws01otWMI0QhGN/EpscrjWqw0187RV79CpKXSbVlm8Cwczhu9kn
jK4ZJkOrZjBaQIjbA2ErNHpyCpj2MilffHDH3qSwqOzYpMyo+JtXR57euvVo
eKC7IK0gwCHH81SC3W7vwysCT64LOLkh/Ox2f/M1AcdWJp7blGm3NfXs2vhT
yzKs1+U4bEUI7kqx26V2OQwUZZ6vRYzDPm+zDZab5lpsmGe9w/TUhsVmm1bN
N1Bgr4ePog3EnOCEUISaB+DiTn9N5zjmSowpfZzdZ34+UXxCfU9MJkJVl4ac
I3pPoKUxiedwTtDLUL+LoO4RwIAoY41brFGjhAj2hMHSQakKNx+52Dpmxibm
xqcMtbbd7O/prS7pyE1uTA7M97GMsNiQe+lAos2WwOMrUi/uibHZ7nd8uf+R
xeoL21Os1iSfMS31OhBtYZpisyXZekv8uW0A7ji7PYBVAy23hFnvdjxgar/f
9MSG+cfXzrPfv3GtCVz3j6bkTEqHsAkAmfwg6Akyq8nz8avOktpcOuOvwGtN
6G66pCYE1MWaY8qS+9f7lF698Om+O/uZeJMwNQdILrEIwgJsuKKLQCKS7t72
boR/kL/bpdTI6J7a2sYCdVliWGN6WH9BVE2EXbC5aY7bviLfo5VhlklOu+Ls
dmR7HYm32ZxkuyXWYmWC1eqUC9v9zZaFnF4TbrXJdd+SYIstnsfWOe1ddn77
gvM7Fl08ss5u/yrzzYus9qw5/e6qlUawOkzIJux47L5AJ05CQETegQZBYN4g
FcdAyUGQXIGvvdGOg1B740g/jnKksaODcq+O1+zbmyIIh1yhws+pWbN8ZWRA
YISfb3xwcFWOuq0ka7CuYKK5YKg8oTvTuyPVpTvDtSnRvj7+QlOKW16QVYTd
rmggLS/uCzyxwuvwQt9Tq33PbLDe9Y6v5dZz7y48vWme7e7lNruWH11taLZh
7u7l8qMb3zm10/TkrtVHtwF3Aa8pqZUlEbCxCL62isH3TCDDfAf2MXb4IL0i
BwaRhoYj4mgQOVKUTy2FPTv7vNbxt4KgWCTQRZAvhnEYcEQORKlQYGNlUZCZ
Vl2Y39tY3VKc3V6S3qCOKI/1qEvxvFIa0ZjqXhxpl+pz0v/8Dt/ze9wstjke
X3vh8CrXY6ucj5k6n1jnZL7efNv8IxvnHF5rcnCl0b5lhjuXKPeuMNq2SLZv
jcnuNfPM96w9dWDzIiO4ho6QZSi9E55DfFRXIMKDxo4Dn7Za1GI6OohBcyWH
hrryUC9h9bIepu0/EUHEgnzGyBbhIZKIZQpgyPMMVND/UogF9lYWhRlpNYW5
1YWZ2fFh8f7Ooa5Wrpa7rfas3LlM9u5y2VIlb5GKt1AF86pLjHim84RrF0q3
rzLav+WdfVveMd+zausygz2rFxzZuHzncpMDaxdvXqAC/+5Zu3DnusXvrlts
usjQQMITUg1cRNNhBsGkJgUtnI2UGZAjnIuQ0BNdP08WE+NpL7CvuzocX8fm
JBNJVxpzoAdfDQzpfx6COGrB/FgWPviAYJFQoZKD9yRivkIKf6SJSvLuxtXm
h/ZsXrN8kbF0jpRnKOCZSHmLDHjvqHjzDQRKEez9kQhhqBm8wqc1iHjAHVBJ
eEZy3tJ58g1LTFbPM1o/f87WpfO3r1y0Y83STcvmz1fBB0Lg4kzojPN5tPVC
lAvOY3JqIzk/lkNkHmW1kg/Sq7jjpRjww3b1VpWIxfopz9dX9Yc3js2JzyQI
6jL4H0GQyAuccIE/Hq2PDgbYkcolsKQC1gjxlTKhgUykEMPwvkwEQ41yEc9Y
LjSW8wGLgoNSEX4MAJJaqHiYHWjxSBRShp/lMaEVGap4xzs4+kw+y9c2D+i5
TWNEyyhdc4JmRizEMIICVI+Nu1vx0hO4GwRPY3wcG7Ps0mcMKByTWFdL6kWE
vmFs7uqeoAeR11SaGEHmhhCCgAHRKwyqiSV8oAgBgmAoxHyAlEwkRIs38RUS
oVIikKBVNJkfzDxBWEwNvF4iUkYAKWDcwuWB4KLecvgsWGY1XnYlc1SDSlGG
x852vda+LqYz/UYBFWPBy1fJJDDGw9w1u6YVHsA/lkLtKsYQ07aNLqlnp7Ze
ATsLD74xguQDWGiT1UckMrFMLpKhtUIAJ+Kl5OViuCI5HvgIABSYQ2IRMTNE
Ak2PjIhZ8RKXSwFjnw8EilTGl0ngCuV83BPFqCe+CD/5lPPDMQfpIqjLArMQ
kAg9zHcYKcxr+F/6yVaEK/naPK77Xbo3wNmf6SOz3/BrIShgaSggSh+wnlSE
uiUkAD6JVADbyQV46Woo9IAIlSNZKhXCNY7kYljyC7wStLozI5RIbRvTWyrE
j8HFIhMnfYSYXAJ2fSRqRUdm7TiO1tMLny4FOBJVoO2Y81mxQ6QlB0FanGLK
8HU23e/iHH9FBHXRfwME8a2i9bXF2A4HAwgRmUIKeBBbggJWDMIUG0qIi8h0
Bb4z8kfE7PJA7OrJaDVLjeUvpp/8gh/Nw9wzwhfzrAiG8gR8tnqHLsHiafPU
TJuAchAIbenfi/Ufnyw9wdPsC/jMbyQ72MjTS2EOguSLZkJcoC+yxIHszRDE
wSes0IkPBYMbMrFARK6MHzTFp34XY3drZB7V7yOk1Ctfo9A1z7eCGVeckxXi
5inUyI80HscUIfTh/EYOJWciGod/+WjVFxomRv4z+V/mNxJxSusX3etzjuMj
NII0e+p1JN8KgrT8JxsEUSziCTRXJqRgjgtFKHkj4wnFTGocPyYYT2bWjsZ3
g2lFpCX8rFDAsCtKZ+FeBsy2tGdHy8OZKDkLgkJN9JuqQEBViHIZMNb4eEch
F0NrTSEBO+BfMMC/wJ0So7QIRxrzqICq3k0XQVqMk4MUqfVImNdCkGM5Y/hE
yO6gERSQZ3/gOQoTqDKeRMYTiGgEMYjsbaAlT/nM9GayeLjLW6SZ5SyCjGGP
+Z0EWDS5Px2y6JJRQHkTPO2oDo9ERHk8lVI6x1gFXgFSCrkIYCeTClQyCB8A
DhzEOCKfmI9uhtHINIKce9B7S3pP4wS6Z5K6r74JdYLnfEqec05mrs8Qn3lC
LlkVR5eeiIZ8OjLJwzJZLNBNFjAzSoiFGw+bT7CyhV1nVagJcgoIn3IyUBx1
o0NJeBG5TGiolKjkIrmEr5DykK/EN1YCw40PVLxMDBPKwMbGEpW8YlMNq1Gh
5hdxfzLW3SSUxEfiS/dO9CLF1xGwr44gZ4LNNBnog3wdU0EvgnRwkiRkMXNx
snh8FBMAM18iZuDDqDHPIsBal41tciQboRVdBUokMLVB+kslfAOFGAAnl/DA
UEn5BjKBkQKFLIRoSRmxQCpkRAfWkjSC+KAughyZKWBXXSa+/O8iOBOpXx1B
eia/RQT5fEYyE8sW7+OhlUFAnQ5ApsEV2cQMJ2JxTmY+B0H63mjFp4MdPh9e
EPAgB0FDuRAMgKAMtRkCBCUCjZ1DUCNDglJaehHkU5EiTF6JRCLUqUF9iwgK
tJMmb5cH0Z3ziGrDtUkk/aqHDRHHAQorFWIDldTIUGGgkgGuJOxANCNddM25
H90JT09IYK6AKxsbyACIQIQSBAEbKhB8Cil8gpoYTRjGw9WGD48340FdBF+F
1LNv/z8kp9xt
                "], {{0, 100}, {150, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", ImageResolution -> {72, 72}, 
                Interleaving -> True], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSizeRaw -> {150, 100}, 
              PlotRange -> {{0, 150}, {0, 100}}], 
             Annotation[#, {
              "URL" -> 
               "http://www.wolframcdn.com/waimage/hset050/921/\
921912200ce175e7e21e169c19269bd3_v001s.jpg", "Dimensions" -> {150, 100}, 
               "Source" -> "http://www.eol.org/pages/2336", "Popup" -> 
               "hset050/921/921912200ce175e7e21e169c19269bd3_v001ms.jpg", 
               "MaxWidth" -> "MaxWidth", "MaxHeight" -> "MaxHeight"}, 
              "Image"]& ], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}. Use \"${word3}\" as ${desc3}. Use \"${word4}\" as ${desc4}. Use \
\"${word5}\" as ${desc5}.", "count" -> "5"}, {
        XMLElement[
        "value", {
         "name" -> "Species", "word" -> "Squid", "desc" -> 
          "a species specification", "input" -> "*MC.%7E-_*Species-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ExpandedFood", "word" -> "Squid", "desc" -> "a food", 
          "input" -> "*MC.%7E-_*ExpandedFood-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "AmusementParkRide", "word" -> "Squid", "desc" -> 
          "an amusement park ride", "input" -> 
          "*MC.%7E-_*AmusementParkRide-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MeasurementDevice", "word" -> "Squid", "desc" -> 
          "a measurement device", "input" -> 
          "*MC.%7E-_*MeasurementDevice-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "WordData", "word" -> "", "desc" -> 
          " referring to English words", "input" -> 
          "*MC.%7E-_*WordData-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "Squid", "template" -> 
        "Assuming ${desc1}. Use ${desc2} instead", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Order:Teuthida", "desc" -> "squids", "input" -> 
          "*DPClash.SpeciesE.Squid-_*Order%3ATeuthida-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Species:LoligoPealeii", "desc" -> "longfin inshore squid",
           "input" -> 
          "*DPClash.SpeciesE.Squid-_*Species%3ALoligoPealeii-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
SpeciesDataSourceInformationNotes.html", "text" -> "Species data"}, {}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Species", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.616", 
    "parsetiming" -> "1.307", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa16161c3563cdh15b080700004360gf5ecb0h962e", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "52", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa16171c3563cdh15b0807000013b0g923dga4g3b56140422195261669885", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 7, 4, 0, 15, 40.849309`8.363759692728422}, "Line" -> 64, 
    "SessionID" -> 31678361661919525468}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Squid image"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1253., {151., 157.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", \
"WolframAlphaFullOutput",ExpressionUUID->"d66c0e4f-fba9-498b-a707-\
4a8231a09a43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"squids\"",RowBox[{"Entity", "[", 
      RowBox[{"\"Species\"", ",", "\"Order:Teuthida\""}], "]"}],
    "\"Entity[\\\"Species\\\", \\\"Order:Teuthida\\\"]\"",
    "\"species specification\""},
   "Entity"], "[", 
  TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
   "EntityProperty"], "]"}]], "Code",
 CellLabel->"In[88]:=",ExpressionUUID->"f6128f93-30ad-46f7-947f-1a386237fa85"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzFvXV4FNm6L9zuEQgMLsGdwV0SJCFAlIQIcXd367i7uxCDCAkhSIAEH2YY
xvf4zJ49svfZ+9xzz/nuc+75/rjPd59vSdXq1dWdDDDse+tZ6adSXV1d/f7W
6++7ytQn0j5AwOPxYmXgxd470SwmxjvZwRj84xgRGxwY4e93JiLOP9A/Zr+P
EBz0A3/14A/u8/lKgUAlFBqAIRAYCoVGIpGxRDKXzzfAAx4UGOMh4BuJRXPx
Dp9nCF7BPjgfDHCa5nyhEX4Vi8HVDEUilUCg4PPl4BXsSyTGMtlc9O4cMOAH
2UuBVx5PhS9CBr4ldHvgLSWPpwAD7IAjYrGBRGIoFMn5AqlAKBOJFWKJkvmX
L+HzxOBVBI4LZUJ0BOzweAI+XygQiMAAO2CAI3iAfZFIJBaLwatAAOkJNgHa
+NSGj9P79BHdM9/WNtOVMYLs0FCMhkMknAOAA69gEDTxAEcA3GAgIhsRXPA+
gs8Qw8fjycCOUKgERwDxwfngNPxFPJ4BRhBAScNHzyIyzfDH2QGupsKQYRDB
ADs8vgRDRhDEgIKDGDUOfPiIUCgWCoUEu9cC5Z8N3ysiCPbRvwwTETQxKBg+
hu9YNCG44jkYQXymNqCATcClANfIAIiY4OCLABNJpSYYaIgRz5DwOIaefDvZ
J7ICzwqMI54SAEEwaPgwgvQgLImB0+U+AB9iTMGrEG0m8tLc+tYRxN+i76CS
HjQnsnxkjOFAIo5hFsySjCwVGGIpShAn/IgIDsgOLqtgqA334VQhCMKPszwO
ccSY8g0o+YlBVNE3SXgQXlYkB/ITDIwghhIzoO7QCx/ADu9gFN4AiLfLfTNd
hCPD8b8c+BBZjAjptBAUGAIlpYWggBF6GEHCLxSFDSjgFPhbMB8R+IjgxVMC
X5NoQ3QOgx2tAVk2VELWRghiNiQKkccTAabDQ0CxpC4P0kKVIEhw/F3I/jhe
b3Bl+hx9c9uIMzCIhBM1UpR9F4hNBgWGGYlppCLqD8lSOMBBIFoJr2kYDXE0
vgg92OswnwXAAVsIDKxhgcDEqGFVqIsg3uEgSEHGWDVisRQIUnqSYxBnoiHh
038SfK9+ZY6BRxQiRx9pk9SIsA+tKJEGNKbMDAN0ZawBGUDxoAwSI9qUBa/g
IkDAgoFmhREZ5LMIQQC0AWZAgh1WfxhByI+sMQMQBIMRoQBTFjJ6AOxEIgmS
pRpKckzQmbZ/HoIzaD3ucQ6CRF5hjLStQTgIo3GOY1mK3QcCELqaHPGgAQaC
tUBUwKEAcBMriFyBTAnMfazINUJsa8DKCgUrlhn5STMgoxZZJwIjiJkR7mjM
TjFrvcB/WbUISSREG6tlXhW+twIovsgsDK7vuBaPsGjK2X+hSqK1ki6yxF8j
Ayspwj7a9j/zRUgGqjBq2ggaEMFOZgIreA2wRUTsIsCJADLMfQzrYTNGKJPL
DCQAXAArqw1ZELUMGB2vkKESh4a6YHH+xSIX4E6O0NPgdyF7XYh5WqqQiyAG
kfYQZxrautJQd7AevR4E2VcjSnviyWDImQbkCkQm44HjA5gBaQQxMxIfkDZp
CIK0BtRFUJdoeg0bfBwjRd7la5uLehHnXOQVIZv5X4Ya1GBUIW1S4ogNEZva
5g3DU5yhixrngngQCUnUHId/8ZBKjbDuY40iGbaRcBCGDsgwFinWepQ5yuxT
tijHLsW2KAcgvTC9CoKvBdMs2HGEtj7RzYFPgenM8aBnQhBb+7SJwjFadAft
lWu755oTOLCCAawX7FrigSceDBEgN1AXQRJJ40Cpy300gjQQABeJRELEoy6C
utSe6YQ31o+6OlffHGN4kJJOKr0so0+uzgSTZj5oR+00CHIMG9p8pacNsYVw
XA5L0dn1IJaiYmDPIBA1NgwbkyEmKMV6GgSxB0EjqMsLuohwEOQI3lnE4Btg
Svbx1NKL4KwcRMJcBjQ62rJRiQNoOIamK0hpBDmMSStBztXowA5r4kIepN1A
HGGDgw2mYfiwQ4H9QWKL0k49i6yGifSqPxpETECRSMSJpuLTRGibCet/HoKU
qcDlHV0/kX6LtjnZCLYK8ggCnZaTWEgSK4WoPyw2aQXKylgoPLEexNfECGLv
TyJV0bkJDB8UrSSMRjn1gCtxCBR4fxwEWaHKJS8HUw6+GEEMIgfomWzRV0Fw
lhM4N4NmjowjpsjQTjypiJ9IDQ1nIefOSKjlAyqJz85hN+yh04xGFB+OldGw
ksgq0X1MoJV1/aAtCmBCspT49RgvOrXEIMgT/y6CNOsRKcrhR4505XgTPDYt
pRe+2UHkzBNdPcjRiay2QtzHesR4VhNJSCwZGBrlK/giA54QOIngI3KwLxAb
gn/xDt7nCZTgX3yaAHgKImP8Lz3wycylBEr8EaHEiCcE15ejV6VQYiCWGaGD
KuZMNMBbYPCABgQAUdKVsVERgmKRAg8BH8AHAAU4Av8CYq2JlCKPnqgqatP4
F1jkaslSPnxHJILoYCZjkRKIxeDKPHrwecz449tM+pdGkESlSIiYtf0MCDcB
AgKSgoFJStDUQhAdZ4bQCA4KO3yCBj4WfRZZ8BYGUYZBJDOEYI3xBaeBoasf
4dyDehBwHzBm5Bg4giB+1fYstHiNgyCEG6HMQVAsAXISHpHJZBg+qGrBmfh9
BJ9QoIHyrWx6NTJJ/RC5REQTBJHyEHGwCxAQkBQjiLmG8Ag+TmFhSLObFtMh
BBlE0JQQSY3hEQGEDAzIYgK5Bmj0peizCnRcgyARsGQqsnFRIDPlgAcxdixw
EpYTRRgaIktpu1EPjvTkRwiCVwCXWApsYKhnhSImnM6SF1yRjNki5H8ETT7l
TTCaizXkgGOF+ZFVkUrWIDEm0ABxigkrls0BgyCIQSTwcY7TbEgQJNDjfcCG
DIJEGguUGGIkPBUYQSxFaRXJDCw9BDIAn0SsBK+YGbEIJQNIUYlYIZHI2OSg
rpUiZuOl2puAxwCLeBeynlBmbLwQWALoBgDumLxvOWmoF0EsRUl8A/tWmALM
DqNfNDYnoCQjQgHxAYgMzQ1psOh/WX5RMbgg+sOBPsuAyIfCFqtLIoFpaYyn
CkaQFrMwF8/6+BBHNr6NLBkZ5kEEnwy7hzSIDIKAkQUiDkxINDFGJkUuvMPg
C+DjC0SA74CRDJTItncPe3pHGM5ZzOOLkf4TItEp0KsI+fT4w/jCSiHW4QLc
R2w5qPFZBOnYCFfNsdTWNVGwUoMXBCQFphGGD3KWHCPIQAwQ5AEcDSGCQiOM
LH01ZrboaECIIDAvkX/BBNxYGQJBRAITD4yghElYAGaUg3fRCUzGUC+CeCPw
adQgRFDEKj6YdlEZLi4ubSoubTlxyh5ND4HW0FGEugj+ERBlMmPsZ8Gkm0RJ
osRauTbKVODxZXAIAQ1VWGfR/IV5hOyDd9F1JEBNkIAJni0wMSTSZChI1RPJ
+ZJMMRuc0SPtOfE0kqxHcVFstDAhNcKGWDNiA5XYM7Smo/QLbTbQNEPeB18C
LyU0WLVqW2FxQ2ZWZXFZu/mpC2iKiuHgs3kQcH1O7kMfghwQXx1TTExMT8iD
SMJgHDUFYLSHLmaMeXrQEpIx9RGjCeGUkCAtD2jLKlmxAZA8OCaG0QHw4bIZ
Hk9J5XxVVIRNRQwVbKto6pqAQULllfAOD0KGdZ+EhNTYeicJBpfxEzWxNe42
M80g9yHuVvj5hF+7dre8rC07tyYhsch0zS7420VSnlACQeQw42si+Lsgsp9j
SsigKmHIIkHaGcAnoTULPf8xk+L5j2PLmnCWNoOgi4AzpQhBGVQTlIalMxSc
CBsbdtMUStHxT0bZieQC7XAokaIkGkPiaax3jxmQrX1iYqSQtsRi1E02MfEr
nkDIB5NBJORLDBRzzljavnzxZWfnUFhoam1977Hj9nyhMTInkK0LyKhdT0Uy
yARHQOVXZLRZN6kmPcEAIcM0R0OmGew5BDWaF2gQCT3RQRm+FN4BCDKU16od
NcQhHe24KA4maKYWE2zRlp+6CDJnIredTkxgEEnEm3XnhZRRx0AmFgP1KqEo
z0MqEVxEoFIYSETyd+Yt8vEMaKxrr6lsiY5M62wfio7KkEkXABkCbsnQyAQa
SBBHwcJFS6QyBY4MkEoqxm15TU9/Zq7UQhDpERnLgFo4EmbEeoeu7qMRJEWb
7MlycjU0LcX4W4h8JiIai0oNcFocLSN3okEQ28n0EQZNKclE0MFtrA3hQCE1
QlJCH4QgJLVMqpIC+c/Djp5EZWCEJadSbggYcNnC5WmJ6d1tPT1dV50cLqkz
ivJzK9atexdocLncZNHCZfPnL1DKVXK5cvPmrVu3budBVSXiEH12IalXonKi
dmQj1MO2HEaQho8YIQQaXaJxJKdW7TQ1H5AIFeM5QPiaBFGxX4NvA70rZV/J
bci0CgtxmJQtFtXEtCkEaVmKXXjtpLzWhrgD8hqADzIRigBA8ovlWBQD+Nau
3pCdnjM+cqO/+0qQb0hBdtH1azcP7D0CTl60cKW5mcXB/YfmGs9Zbbpm/959
hw4cXrp0qUQkJtfnFPPPyG/6MJ3pI8AEJaVfBEHEKVJigRA7hBZZHOxIwwIW
ZRgjBLeGATGIRBISymOmpvKzGGshfgVuFx4C4GKzOMJBxbcJ6Hj60ZUV+vLy
eic/cuGRf4G9SOB0gFeJVIWcR+iGLJi3JDwo8uHkw/s378eGxabEplwfvJ4S
n7pg7ju7d+655Opua223f/eeQ/v2njh2/MSxo+/MNeGj7hSpWAJMUvwDRAJu
Tv/VvQm9p2EEMQ+y4lFOCE5YAAEhxdkcvSpJ03LCKkoWUIwacymMIId5KQRl
DHYcEw4fATY8w49wwmAniIhr7LbgCcOyjJhmPcx9mHq6xWDgLaD+aI8DmJoS
1FkDvmvBO0vlMsMTR09NjN6avj0dERjh7+Y7NTHZXtccHxmdEBUTHR4WGhjg
7+0VFhAQGRx87MCBZYsWbt+8aevGDQvnzTeQK8BEJPYnyfjTd/LGLiFxh7Gd
SRDEEk97QFMQ6zUi1mgrRXfAc9h4MgltCdkSCJKEJUdYfpmpkkEoZNJGwD0H
gs5AJFTqIojnCRahTKGFVn0vCqjw6YE3iKCICcepAHwCYJYIDHg8BaCPSmmy
d8+R1ob2saFxdbLa18W7t7lzuLuvtaquOCs7IsAvNzOtKDdLnZoUFugXFxZS
nK3OTk9pqaurLi3NTE1xdXLcvGnDooXvyCRSwIMkpYhTwG/sTRAeJAgSSwZQ
QB8oMhy0wYQSSxQYa7yP7WfsMrAWCzRjcHaAzhQAKuFwFh4ETWxy6E2z4o3J
rWMQ4QflLDtjEcH4LMwcQ11LmKf4bJyErunlaVkIYqb5BXGuGKU2UB5KBnAU
Cw1NV25Qp+cO9V1NiY6rKSq+PzZ2c6C/qaQwPyk+Jymmu6FqoKO+q7GisaKw
va68taZ0oK2hpbqkpbqsq7m2ojC7KDstItj3nIXZ+lXL5xkpVXJgS0HpirMY
syCoLSX0k0UkNQQDut4w8CUHO0KpQiCRY08cY8E6AkzejYDC8BFKmGI9gs08
MLBEYtUKjkmyTMHIUsZEBBcHE4CRnzzSgaJJz2ERyupBcFdgnkjBHSIhAFMD
fHwOYyZpkrysNSXGvwWb9zwmXgm8OxEp+iXWPiq/F2NZJ4YZQOAAqpYsWhMR
FNPd2tlSVTnc2fz01sh4V11HaXpbceqVxsIH1zoeXe++3lvb11LU3ZDXUp7e
XJbWVpZ+rbtqqKOitiCxr6morig52N3G3+Ws1dGdZ47sOHlw266NyxYbSwyl
8AfjWYQZUzdTrBdNLR6UG4tlRjDMCH4sDmCKZQBXPJ/x3GYnNvK/+FrwUSoG
xxIZpQOgpFEjlbcC1rbBOOLpgb+IkdW4rBo3GaF8OjpfhPHCr+gOxTDuIRRh
BFlTh5EVxJ3BdhGS5xI+zkFAUMCp0LnT9rU1YRNGW8E0rkQqnuvjFd7Verm/
vWP4cvOdodap4aYno41PRuo/n7r81cMrXzzov3e1+np30d3hmitN6uGWnMmB
yoH6jOIkr/bShPL04IGGnKsthZlR7jmxvmlhl9IiPWP9nS/Zmtuf3n9o14b1
q1eamJjwtWN6HIxmR1CmnAtA5OOYtkCMsUOElYgljIACPIJlpkSqpKNSUAAK
NQlQSi9rlfOhvKcmPEIQpP07QnM2h471I/oWJNixV8j6hjKG1wTIRmLnCREO
7MeJiBCRtlxsUfCQOSGXyyUSCSOh0Q3DHb5EgjJ9cpnB6lWbYmOy+3rHHz14
Oj1589HdK49utz0ar3052fTFg7aPbzd++7jnw1vNty8XPhyufjLecHeguLMk
oibVszkvpKMoOjvCqSzJt7cms0odcbkmJ8bHISHILdTTwdP+jJfTuYBL9l4u
drY2Z83MzIDfuGTJEpVKNZOLMYtOxAgyPCiSgumN/SldBLG4I6YIlJModkFs
Y2qeCHTqaUU0grRu1QRwkCkFVQ+kP7Z5UG4IuKtiJuBAv8LoupCEyKR0GhfF
LRnxjmwGPqk50kshfBB79OCz80wW7Xh3b1Bg5PDgzRcffPv8+RfvPf3gzs1r
I/11Uzeavnja8+WT9n98de0/vh3/+cWVH571vTdadaNDfas7rzkv4HJxaG9p
eFdhSEOmb5KXZVVqQFlSYIK/Y7y/c5CrjZv1KVdbCw9H6zPHDxw/sOPQ3ne3
btkE4Nu0adPy5cuVSuXv4qW7iWUGIqmKSdYwCEK9z6gbJKOwfSLgNMYyzSPC
WYqysI+sKctkpCjV4ECC1ShNA50aPmMHgle8j4+zZagqfCaOyMHjCGss20V8
OASQiwHLSaGm4wuEKFFO5+mQwAf3xpNIBQqlWK4QQZGMUnngN2/asDkmKr7v
8tD1a5P3Jp9OT78/NHy9q6P7xrWhLz96/PcfP/yXr6d+++z6X14O/PBe+4cT
pQOVIZ2FAYO18X3lMX2l0R3ZPvXJLvnBZxPcjgMEwy+aB9qdSAvxCHa2tdi/
48C2DQsM5WCGKSVCIY8ppOHpOPh6Yy8zbdiAQQlTCRwiKdYX2GzA+oU1AzRF
s3SnD6eIizaPCYJMlSZWnWw8k0JQqSlBFBpC4NgBoNRbq8+GTzGCcgi0QCEW
yMEA2IGBcIR+A/Yd0J3BAW4EJ16lUgY7kYinUPDeMVHs2Lbez/tSTmZGY3Vt
X0ffUO/w/dvTD6efPHrw+INn7/345ed///OX37yYennv6lePB799evXze219
FVEdhUEjdYm95ZEdeSGlsY5lsfbV8Y4NaR51qV4VCV4dxcn9NYV9dWW99VXd
tTX1pSVZSckH9uyeY2SsUiixd6894V8/x4SsF2J24hgIfAXes1hEDEsgjqhs
mh5e063KIwjy2EZ1phsFhwLYjmzUZWNI1k8gxfakxBGXHWqKDKneJWaQ+B6l
BLFZi24e6kGWB4V8nEHjC8BvAgjOmSPdsmm51emDgd6OkcHuNcVZXY1VV9pb
7167dmPg6kBr573x2x8+fvbVyw8/eTr9Ymris0cTnz+c+PD28DePJn96PvXz
Bw8+uzt8s62oKTe4Qe01WBsDROjVqti+8riJjsLB+rxbPfXXOxqvdbbV5OXV
l5ZVFhQX5xaW5BcH+AWuNl1DqKdXjr2qpw9+u5jx7Ni4B+Q+QHWMILTHpHIA
Iusazxh0JVaxdvMdgyCxTpm4DZM20kKQzzdACGK+U7LtZrhyWMHEQnGeS8hE
UCVSlSb+gzLvTIoTWlwS4MjI5AZSmYqxdaGlBAuopAqjpcuXnTtvkZ+f1t1R
2dVa1NmQP9ZX++hmX1tFdmlq9K2e9sn+y3U5mcWpSf1N9Q9vjLy4f+Oj+xMv
J8e/ejL137764j///OP/+utv//uvv/7vv/3lv3/9wZ8eD0+PVHZXR7cUhLUV
RbWVxFdlhBcnhRUkRKSGh1gdPbrIcK6xVGWiMllosmjLpu1+PoE5OXnHj5vT
QW9adr06gthrwIYKxg6YMAg7OgBF2ySzNUXSk4qVCZqSWmZhEMwvOApEdUUB
BpTJ5vJ4TJUjxosghTCS4GQHjr9hX57JpQqgc8HE5FF9BfBbwaWMjBaAoVDM
VRjMW7J8vcpwscJw8Z4DpwKCo3LzCu5OTnz88uHo1eabI02Pb3U8uN747Gbb
lYYsdahzT1l6R2GKv/XxeC+bkqTg5vzUT6ZufP/eo58+fPE/fvzzf/38y2+f
fvb104cf3Ll+f6i7szKnJj++Ijs6+NKZc8e2HN+1au0i5RwRb8kc2fF9O70v
Oof5BuzYtEMI7FuREmhqPtRHomXLVpibnzQ1NVUAIa5JjiBQXifoTeIYjPAE
XAa8MaFAO36oFRN+FQQpkU4t2IIdQxz9ZhFEiV2mKwqndHHqik5REZ8UDSly
/4VMM6BACLxCIBVRVQOxeKFXYmy0wGTuYvAV8+evOG/r0t0z2tjcX1LeNnJ9
6oOXXz58+PiXn7776ftPJq933LvedG+oemq4Ynqo/MFg+XR/WVWyd5Tj8aoE
77HG7LI4r/JE/5sdVS8mrj4ZvfJwZGCktbGhMKcsIzktMjDU+6Lt6cNb1ixY
aCw0lkERgIdMyNzNQpMFh/YetrGyXfTOMqSJREBHC2FfBbQoDA0Naaq+OnA0
gpj72OgxEYzIDtCPkZ4KZ04zF6UuqYZZ5LhpNbwz5QEGbNOuEkhFTYiGDYlj
44rHNqeg8BqKHohQSRh4RTpOLlfKZMCCBXJEbjLnnRXL12zbuufcuQulpfVT
U88fPfnkybPP/vLLf/zrv/7PX3/5+68///L9V59eH2ofH6gd6sob785tKQzq
LA0dbUpuyfUPtdtbFuuaG+JQFn2pPNqzMT3oVkdBfrRTebpvVVZIToKvOi4o
3NfV/MBuIxlUPyoZTw7EAPCFpAIcKwM+GJBoqMhJpJAZAMm5bs1GWCkMPSYR
m+7XbK/S8DsTgmjgbA5TMIJtW70IakeDNQiSaAzV2MV8A2kXmhlBJVuVqmBS
tDg4w7AeuT19NjasvGWOK+WKeXNN1qxYvXfHHjcn14zkzNrqhslbU7duTk1P
vzc0dOP773/9r//5//2///W/vvvq6798//UPX3747acPaotiSzN820ojBuri
atWerYWBbYXBlakeCd6nU3yscoMcsn1tUjxO16d550Rax/iYxfpbejkdcbE/
tmS+HJi8OMiJKl5goAjeDw70IdeS7R0WKBSqFStMJSIpGMhIhg4NGAyNtFOH
rwUloA+SSyjAiMrE6XpjGi8BElWceD6OgJHFr0j5EB2QwVYo6UChU1daiXik
75jgHpNKpiLVOHrGCnO+xnxCFdc8/jzjOft27HK2t48PiyzOyu2ob7o5PDrY
2//yvffHhkY//ODlzz/98sN3P/7jr789fXT/+cM7H7937z/+9vWfPrgJNGB7
ZXx1jt+37w8+m2i41Vc82pGXHn4h2MXc5/z+RLdT5VHOye6nQh0OBF044GO/
/+LZHW4Oh1cukYpIdgM1UECpIGLrAXDYkA3twn4KgcDExEQhk+MqUmQaozJE
9rdopuRrcqIE2JkSGRhwqmOhpF00TvDCc4ZUkuNjRLthjEgVCmehDzoNQfKw
uFKdk+EF1r6AzcKjt1hPR7sFngfzYmKVSmVsOGfF4uVH9x/28/AqzFR31NUP
dnSNdHdDd+Dqlbtjoy8eP5y6c/OTD9//5k+fAew+//DRR8/utNXnP5rs//LF
reGuojuDVQ+uN9wbqXp2u6U2P/TQ9vmrFwCtzFtkyPOwOZzucz7W8UiwzX7b
g6t3LJW6ndt36uCGRXNx9RsTKxCLhSSew9bei3jMUlGaDZymUkIE2VyhQCqW
ESVITnvdEn3MgOAVgigijTx02T8PY8cMIQ5oCFh9JCYBSZw/0rQ/s+/ialsw
mGwFG8rGNjAYEqkSGPwwZAe7XeRs6wST+kcDnobsTKZzE1x87tx5G9ZttDC3
DPDyayivudYz0Nfc2lFTd6WlZbijfWp0+HJd9fO7E8/uTjyeHP/sxeP3H03+
/P0nQGx++uz6Vx/efDbZ/e1HN/7+3YNfv7z7y58mv//kZkrURdN3eKsWiw3l
vIXzJcYq3p7NKzKDnFI9rVzNtppvXRx44YTZ7jXzldBOkgig0MZgwUUzYCCL
h3I0qCAHui1MShewhUTMk0r4eB9neMH0ozsyCBvOVAwz28Z48RBEtCqOpvdf
oL3hAAIMEYuwoyHCDIiT2tppXKaQD1meEhRQVeLYOCnewOFWABwewGvDGEEf
AdUSg1dY0y4zUCiNlao5BoYmcoWhSjnHZO6Che8sAe7wqROng/2Cmqvq22sa
Ri73j/b0tVdWdlZX3RrofTA2dLO/s72y4PHE0LPJkYnBjm8/fwzGD18+eflo
6OXD/n/59sHY5cKPH/b8+tWtHz8d+7c/P3K02rZiPs/b5aTLBTPTZXOUMt66
dcsP7tp8csdqf+ujxzYtsj6y1dnqiIkcmZoCPkptABTg7MXyAYEC81ZYPMKs
iUiTl6cHy2s4q6VZAuXNeBAn5UWUU48CoVKStcEpOUYHgfuSSPlilKTDYhMN
roLDmhFJVxRulfHESp4YZYeBYMRhWBEMpLMVODLMhuCzyBBlymzkKhMweAI5
eJ07dzG41YULVmxct9XB2jEuPC43PbeuuLK3qaWzurqrpqY2P68yJ32kq+nu
cPeL+6PPb1/5+vntqZH2Hz66e3uw8ZOnY7/88N63n90FfPfJo/7nd1r/9vWd
718O/eP7O//+83RfU+KyubwTB5dZn96xf+eq0+b77Kwt9u3dfXjfrt3rl5vt
WONw6uCpQzsWGsmgmyDC6Q0BcV5I2vEP9T+8zka7BnSlCrbhSaod2w/Y1GHs
KyYrx+QXAEYYQRFb2YvfxSAKMScCsADHSQ0EUthtJJDIUW0/RgqXLaGmBqlS
JlXh9D3AHfAd4D5wY3L5HOCPq1TzDA3mr12z6byVXUp8WkNlw0B7X3VBxdX2
7vby8uocdXlmynB7w/Welsrs+JcPRh+OdX328Novn95/Ot7xl08nP5oeeHSz
9fZIzefvj/zLt9OjXbkPxqrfn2z507NegOC//TQV7We+3VQETJQDOxYD8Xfs
wNbd767fuX3TecuTS00UZ47tObJ7M87GyoFJglo+2bSykEeWVuC9kTPwhxEk
BgORcnQNDFaRWFei1CrMrvIlDONAjKi8LWYrFBvXIIgzg6T0F1wKtwuRiKtU
KpdJ5BKJDLziMj+5zFCpMMavCrkReF221PTUCcvEmKTGmoaJa+MjvVcnro5c
7bjcUVXVW1NRnBg92lY/0dP83YupL57c+Pb9W9PDTfcHairT/P78Ynyyr+zl
vW7gsI92F3zx/uCj8drbVwpHO7ImevIfjNU+vdn05bOhuIBz54+utzu1/cC2
xauXyKTIJT+0Z7215cGtaxevXjzHWMpE63BpBFzjQlMbQNIzb6vR81VBxDss
D3IRJH4ixo6UNwAEhVImXYgjDNh4hv+KZSS/Dy8C8zsSGQAFOkFysRBgKgKv
4PNClEsGs0GKeFIukqEKRZlKYQDUHCCVVKIyUM0Bn1q6eJn1mfOhgUF1FVWX
29qKs7J7Wlof3roNjJY7w8O99TUT3S0jzRXN+am/ff70wbWOJ+Md//XrJz++
f+PFRPvXDwbeH2v660c3nlyr/epJ3/WunKGW9PHL2c9u1nZWRPfVJU70FA+2
ZLWWxvs7HnU4uf388a3Hdq7wdjI/d3K7h7N5gJfVabNt603n4xiLQowjvEzT
riYGwmPqIv5P8iC90dKM1NujHaiKySAg4jw+cz67eDWDvkTOAwgiHKG5AqSr
QArlJpKeMgGYFiIDqXyO0sBQpjCSK40VKvCvoUxmYmAEBCU8qFQBmQwZUKqa
YzTv4N59of7+FfkFbXU16oS4jPiosuyMyWuD02MjLWXFH9y7c6Wx6kp94aPh
1vH2sn98/eTT6St/eTnxjy/u//hs5MnVqi8mO358PHCzJePT280fTTTc7sp+
NlY9dbVopCVlpCV9oC7xZnfRw9H65sKYSE/Lvevnnthnam2+xcV6f7i/dYjf
OYfzu9asUEphoJaHk1UaI0Qo1u6JQFkYtpNFl8hvFmzRu+leio1pk6JQCVvj
xCBIqm3x4CDI2KLAjMQMqI0gYDEDkdxIJDORqeYrDMFYZGyyfP7CZfMWzFcZ
LZ4zb4Gh0UIj45ULFi41mWckAXCL5hnNNzKYu33rTn8vv5S4uIyEuMLMlIK0
hIrslDJ1UmtZ/lh3y/2R/icTI9998Pi796e/mB55Ntry5QOI3dTV6j9N939x
r/tvL6//5zdT7w9WDBRHtKl9mtI8Xl6vfTxQ/PHNhhstaQNVMWA05wUVx7te
rU/tqkyoygrytD1wcv/KUwfXnDqyzsXuoNXJLTs2z1ch3Qeww8ITOHQYQLlC
xUEQgsjX39Gpe+QPIsi5Gknj6uKFAzWMsmbfxZqOEZJMxlZKK0Gc6CcIGouV
8+UGy4wXrJq/1HTekjWLVqxfunLt4uVbTNfu37pj54aN65ctX79s6bqlS9Ys
XrRxpemWdZt83H0zktOzUtNzU5KzE2Oz4sKSQrzz40NTQtzby7Omr3WD8fH0
9Rd3rn35eOK3jyf//vndFxNtty8XdpZE/fLR2HhL5md3Wp4NlN5sSPnyVvP3
99s/G699OVJxpzm1PNruUW/BdE9Bb3F4dbJbqt+p7HDrhly/puLQ5tLIjBhn
D6djLg5Hjh1cv2KpEvh1QnY1Az5FLqBKtEqR2Vgfs3jFDAjOtP1xBIk6JpBR
Je5IbHIQFKCAM9tXIhIy4pdJ8aMsP7RYkI0q48sAcNtWrDPbecDmuIWjpY2H
nbO/q1eAm6e3k2u4T4DHBcfje/ft2bzp6K4dTmfPxAYHJYRHqVMystMyqooK
2qrLm8vyavNTi5LDIt1t1JGezUXJk1eafnxx77999+JOX2N9Tsynd3t+fDb0
4mbL9NWyxyNVL2+3fHy76d+/vA1Y71Zj6lRbRoLj3juNyR0ZnteqIm82JoyU
RTSluI3WxFbEX6hIdIz3Pt6Q69tVHdtaFV+gDggPtLtoZ2akhEwnFsGBF6zg
MeJLpx+Q6r+giz//LyCI3EA8wQhXEj8CZ50wiKSeluZBjKBYrhJAq0SJHQRA
ANMFKw5v329vfs7azMr57IUAFx9/Z+/kiIQQT//ogJBQLz8nq3OeDo4hHh5l
mRntlRUZsdHBnl5psXEF6WlDXR0TA931hZnZMf7tpRnPb/VP9tcnBzj+9PLe
Xz998PG9wZ6KjN7K9N8+vvW3j8f/9tnEt08H7g4UDzUkPbxa0lsaMdGY8uFw
5VBJGECwP99/qCTkQbe6MvLcdFtSX67ndHtqq9qtNMYmN/zsQGNif1NGStRF
d6cTVif3btu8Si5DUTuJTA9kWsBp927P6g++XVmqB0GEEWY62penEWTNUS0E
BaRbQQxBlCoNYYBFqpKKFWuXrz2y65CjpR2Az+LgiaM7Dvo4enhfcD+x/7iD
pXWwh09yeCSAryQ9/XJd7UBTfV5sZGFyQkpkeG5K0vhAz+fPHvzw0XtD7TXF
KeGA7z6duvbVk/GfXtz+t6+ffnJ3YLA+63/88PzptUbAgI+ulqcGnPn55Wh5
qltZiuv01ZKhuoSeotDB8qjm1EsPO7MuZ3s3Jjo1JF/8eKSkP/fSWHnArYao
262Jl0uC67N8anKCvS4cNZZDlScT8+QyXJIhYuoxqEVltSXn6yH4z9v47LI1
TJRaxNbJUNEYLEVZx1DGuHvaCAIXA/xqhdIIVjWIFfON3zGHSNm6nHNytLS3
O2l95oiFz0XPIHd/N1snVxtHfxf3ovTMxuKiwdam0pSElGCfkqRodWRQQVJs
c1nBF+9N/+dvP/bUl108c/RyTf7nj8e/eDz+9dMbz8ban421/vs3T/6f7558
83jom8eDw3Wp1xpSn4/Xf3K3/asnPR/eafr0XhsQpPe6cq6URtxuSnnSm/9e
X971qoibjXHP+tRdasc7jaGPetP7y0KuVMfW5YR6OZxYvchIjswVWDQsU4Df
wocWtFTTC68HwT9G9jeVonoRZJJKaAcOFjKaHymWlNIIQpeQdUDgr5cbKOSG
hnKjAzsPAPg87d0A0zmdsbc5cd7utLW3k0eEb3ByRFyYl19WfCJgvYbCvKKE
mPbinAZ1UlqAW5jT2ctVBS8mr/fVlVTlJE2N9nZU5b64P/qXTx/98PL+R/cH
63OjAOv921cPAPc9v9785/eGb7ZnD9cl3+7M/ex++/2Bosn+gtGWtGuNSbda
M16MlNclXIxz2t2W5jJeEz5YFtiVe2myLXa0LmSyM7W7JCw10GbbciMgKw1h
j58I+bZorRJUeAlT/6IZGqn+MIIM8d8GgpDpCHbsgGVOrEQlwQesCknkkyBI
9oHuA/ABA2bdinV+Lt5+FzwCL3oDyXli75EzR09fOGMDbJggd9+4oLD64tKr
zc2lKUnVman1mcmpvi6Zfi7+Z44ke9rnRnjHejtGezp88/69bz+c/u8/fT7R
3zzWU/vwxuU/f3IfOOy/fX7/++ejmcH2X033P7paOdGa8WSw7EZbxlhr+mRv
/t3+/IIo21ud6smOrLHauM5sr+Zkp/ttieURFnfbEwYrgkbqoy5XRKjDbdzP
7pkvhivpmCjlQrg+EzCemUW9YMsnWRMNEYlD9jezQP44WHovwkhObQQhw7Fp
Xw4nMg4j1S9GP51KKTeUCmQnDphF+4UHO/v4X/CwPHDc2szykt3Fi+fsAy/5
FKVntVZWA91XlprcXJDTX1nckpOc5e+S4W0X73ja68Su0Asnp4BgzU/84tGN
f//zZ9+8mHo40X97qP3Xr5///KcnH00Pff5oBCjB98aaIAO2ZqV5n/xkoqG3
NDzN/1Rzju+NzsyHV4un+nJzAk6P18VOtaW8fyXndmN0ZZTFZHP0SF14S2FI
nN/5bStUeEV4lQiyk5DPch8sRBSjChbc/MIQ6a0Q/w+KzZk+TmQkDR9UehIZ
iaRhe4Z49DD0jZK5BEGy3o5CZmC62NTN1jnCIyjY0cvP1s33gpvtSUs3G4ek
sKiSzByg+0ozMmJ9fbMjQ8tTYktig7MDXAuDXGLsjqrdrTLcrQrDL/30/h3g
Jnzz/Pa/fvdhuTr2/ljv33/69KuPpsf7G57f6ftkenCyt/Jub9lEWw6wOZ8O
FE80JnXk+fWUhky0p0W57KtOce4rD3vUm9Nb4NuR6XK7PmqkzK+vwG2ozDsn
+PS5QxsBcIZCnlLAA+ayEGWKebBAgonek+iKkI2C4gFLFLSXK9QpUv8nmjKz
OCAEQQwim1QXEwQlUjkYJLhNmrlQbyBj1QAEpRIlgE8lNTh51DzcKzDSKzDM
xTPMxT3AySXA2Tk/KSk7LrYiMzM7NsrH9lx2ZLA62Lc+I+5quTru4imfE9uL
AmxzPC3aUvzSvaw/uXPli+mRzx9d//XL9ydHe54/GP/yo4eP7w31tpZMX+8a
bC6szAjqLI69XBJ7/3LxcGVMV67f4yuFYw0Jzdledeku9WkuD3vVEw3RQ+VB
99qTquOse4v8GtJd4y7t37FMBFhvnlKFY9QSMVM8CX4yVZOvgY+DIPHu3wqC
r8WSs3iRuKSZ7l7B+VyZTIELfcmyDwKENMzqwyioVCDBjgbT2QdPFkqWLlji
6eSSFBEZ4eUV4+PjduZUlIdrVkRQvI9bcoBnRohvmr97tJttWUJQTrBrZ15M
VbxXfpBtjq9Vituxy1n+D7ryPr3R/eOTiWut5XeutH736XuffDD17NHNyZtX
25pLJkZa26rVg61FBXG+temhd7sqJ5rz+sujrlZHRV/cmx92tjndDfDdWFXo
5ZxLtYnnxxsirzfG9ldGFSa6O5/ZvcQAaj25CPZlobaJ2WJfDGR8zTqx9DJr
s5P6FQ/q/d7fhU93wXZOTzepAAcISiQygqCm7oWpz4eFmgIwiaUSYIHyUEn2
HKO51pZWEf4B4T5eYR5uwa4O0V7Osd4XYzwcIlxtAu1OlsUHR7mcbVZH16YE
F4Q4ZwfYZnhZ3mpKr4px7CsIulEfd6cl89lg83vXeh8MdX00NfZkcgQw4PSd
waG++ivdlXdH26uyorurMu/0VD0ZaeqvShuqTbtaFXuvJ7sp06Mj22u0OuJu
S/yN2vCJuoiRquCyWOsSYIv6nT3y7gojKW+OSmYAnD0BdxUCuk1gJmLyZ143
+822N1aLupVsBDJcQSFmNwwfWXqFZPTYzmsx5elDM0alMFpnutbX1T0mKDja
1yfBz8vX9kyI87kAe4sod5t6daw6xD3ukm1htG91UrCXxa4YJ7PKOI/O7JAH
3fnVsU5XikMfdKu7C8LGGys+npx4Mtp/72rrWHfF9cvl06MtdwZq712tz428
1KCOmOypuNaU1VIQ1lUe0V8b++hK8ZXyqNGa6Ie9GXda4/KCjvYX+/QW+QCP
vj0/LMjJfKkRT8mHxZxyVKlCSih5VHk5lkKcNjq6ApDPrpVHqlDeDDLOv292
Hc4RGjsJtZF+ai34UEwGqEJc28Y0RAhlcqnKxHCe1UnLCN/A7Li4vNhoIDb9
7U4HOJwKdrIoSghUh1wKsj/ZnBOfHuBUGOGe6Wd3uSC6Mc2vPMppvC75bms6
YMAo+3cHiiPeG+4siA6oUUcP1Kjv9lXd7Cy831v2Yqz5SlliUYhjb350V164
37l3m/MCbvXkTA8XdeUHNaS4jjfE1CbZdeZeas927Sn2r0t3ywiyPX9w4zKV
YI4Elk9LUCUntFaEWoKIzy5ESSCjZRGnqeF3WXUWyGbqbXkrCIrYDXMfKy40
1dfEvoFdMDIVvUQSDKCJlEaKOdvWbAnzDgxz9wp1cwt3vRB04WxGkGt3Wdpg
fV5tZoTP2UNp/g4RF05k+NsB+Pyt9gAEx+rS29V+ozXxjcmuBQGnUlz2N6e5
Nqm9+yqi7vcW3e8tmeopG6lOu9taMFQcnedtMVYe8+GVkooou9Ys35sd6ooU
99o0r6Gq2KHysIHSwKnu9IHy4LY87/xI2zDnY3vWzDNEC6caKaTQMgHCQyGB
RfoMtwlJd8lM5WF6eeR1bQ+aznoRFOisizLTpWayZIgIJXOP6EzqKQwaBGEQ
G7XiYhClYoVCrFq5aKW3k0d6VGKkp0+oy8VE30s54V4AsopkPyD0Yt0tPSx3
hTkcS/ezTfI8U5PkWx7n3pkb1pTh25ByyfXQ0qGSkIYEx+HS4N48z74i7648
944cj5YMj84sv4akS+lux2siHcuCzk41p/RmeU+3pk3UJ5ZHO1QlXqpKcn3Y
n9+Y6tKY4dZZGJAXYVMQc9HmyPq188VzRTxDMU8BVy7nyeVK7A3AMItAqzGH
TzVe8fV18HGweGM9OJMUpe9kls9ylDV9MlnbhL4Oki1ivQNWJ4qkmBOBE2Go
mrNk3pJTh04khcbFB4SGXHSJ9nAtjgseby29XJbQkhNaEnOpMtE73c864Nye
vNALHic3l0W7xDofyfA63VsQ2ph8abg8siLifG+2T2mIRWGA2XChR02EeWnw
sYna0OES//YM59pY++LAMx1pHoW+lmOl0bWR9o3xF1tSXK5XRQHhWZN84XJJ
YHdJaH60U8CF47tMTeZJIOtJUe+JTIqYCy26C2uu+MyCzLqCVDDzo3lo6r1u
SfzsgL4BD+q+C1QekJy6Spy0yTOshx+Sgm1RMUrK88Tz5i5Yv2rd/u27g9x9
Izz9EgNDMkKCC2LDskM8rlSrb3UUXKmIq03xbs8NLQp3zPQ/F2a7P8rxYHXi
pY7cQACf2vtkjt+pzkyPiLObS4NOB5ivbIg+3xZj05t8oSvFoT7qTGmwWUmI
WY73obCzG4aKgq9XRPZk+lisEgOsb1SHt6c5FUec7ijyKU91jfeztNi7arGK
r0DYGQCHAbp70HnD7IXq4fESKBp7m8NZM1GJrp4V6jzeRZfar3hw9rdeZZ7g
u8XqjygC8uswasCnwAOgCcgAF1oE7pQULreoUhkuWrB48bx3vJ1ck8MjQ90u
laaklCbGDNYVq4NdmrNCP7ze0FMS3qL2zQ60Ko24UJPkXpfonul9Ksf/THuW
b46fRUWUQ2nouXTXg0A2dqe6Xsn2vqL2Gc0OaQ5z7Ih1HisMuVMXnetzuDDw
aH++e0uyQ2WEZWOCXWeGc6fapbfQoyHFuiXXNSfW7rz5usVGkO9UQp5KJJAC
uHhCYHJRliT2tlG7EGWxcOY2/uEc+vCpp7fMwgi6n3rF8199m+lSxJbmU66r
ED40SoaXhSHakI3Mw0ipkdGceXNNJAL+yUOH85KTY/39kgL8mvLVDeqk7pL0
igSflqygW+3q0hi7pjSPgaKw7pyA6c6c1nQvoL/aMrwLg88FWm4uDLRMdd6f
43msOtSqM/FibdiZjlinJw2598ozbpel9GX4tcQ5tiU79mS59Oe7+JrPT3Dc
0JpqWxhqVh5j1ZjlXBJv62OzbYUJz1jOU4h4SilPIRUgtoM/QgyXMGVlJoql
4IoXAU+zCjoHRKYiXV8RNX3wdxF5u9jxqTZtvSEFvrYVTQEKh1QqxyBKYFcF
swaCUmkw32Te/DnGzrbWZdkZl+sr00L9atXJ423V1xtLWtSRz0caeosjuwuC
s/zML+f65/ufro627831z/U96X50RWWkLWC9PL9TJUFWCfY78z2Ppzns6oi7
0BxpUx1wdrw44V5dbluiX2uCp9+xNb7Hlj1sT7ic5dCRfr417WxtvEVFwvmM
kDNhbmZbVxrMU/JwQ6xYwBOLmU5QcO8oJMisTALf4UNkUXMv07ZArzBDNnoy
0xtH970tnnr1jdyGXpuZE4qhtDkUpAAssuIWbjlRylUL580H/Hn2xPHsxNgK
AFxXw53e5sGagqmehqEqdX9JQkGwTV9R6J3WtNvNSYOFQRfeNS70OxlvvxNA
VhFhk+NlHmOzI8vjODAvK4OtEs5vL/E6nu24tybAotLvTFuy92V1SJ6vVTOQ
ujH2DfG2zcm2xcFHK6JOAu6rT7uY4G1+cON8YxHEDtgpMokU9nYJYS+vSMqT
yNFiKnzUF8mXCmgEhXAIBVqWCYcUtM9OU0bwmt1hf5wBX/3jxBAl8LFKAUIG
eBDzHeBBsC+XKkwMjIylMmfr86nhIclBXqOtVXd76q9WZo3W5Y7WZE13llZE
Ome6mwN2G6uJ7sy8VBF6Jt/zaKn/SbCjvnS4JMgy1+t4osOulgSX6lDrNIc9
uc6HYk9vrPGzbIuwrQs+Vx5qUxJmM1AclOiyqzXLqSLOAsjM3JBT1cmucZdO
ntpuukDCU/Fx6QNfJocr8UKwYFgeWppopS74u3DLMK4qx0FpuMqWkHSKcQnF
1wnC0FByTpvdMnkrSpATI5rlTBR+EdG2NHsnTGcuFqEAPrCvUhjMkxuEeno3
Fha2FOdMdDX2lqu78uMnGvPvtxYNliS0Jftme5ysCLEBSHVlXhos8Fc774k/
v6kx0ibZfkdDlF3qxX0Awcqwc4XeJxsi7Eu9Tqgd9qrt9iRabkm23AQ4McN1
f328fV2iXU2KXXaoWWHM2fps76hLZpZ71pgaS4BfZwxsYx5PIVPiPlmJVAkG
SS7gvDrgR9xAB6OgTOMq05gslUqpJjs+zWgz2ZmEhkRX6pVmMyH4ZiDq/aDe
S8lkMjqmRKlvEXnEG0AQDGB8bt2wJTYwtLu6rqeyorMkvyUn+U5bxUhF+rWK
lLGyxOIA61SHgxWB56PObIk7vy3n0qFiX/PIk6uqA0/VBluU+pm1xzuWB57O
dT+a6XwAwFcfbpdmuyvl/LvR5uvizNdHHVmVZLUxxWFTa8r5NrVzdYpTkr+F
ndmmjUuVRmLk3wH4FApAOyA50dwT4QeQsTcMBAWYamIMpgBpRhZNPkqhoXW/
mXW6hBxQCJTkarq6j0/54K+O4BvA91qbXC4n65TCG2OXf8GSE+Ym+CJDldGS
RUvNj5hlpWb2NLTXqHOHmxqv1pTVJIb15iVcVodVRzg1xLqp3cxirXcVeVsk
2+7OdNqf5bw/+vSayBMrK32Op9psiT29tiHsXFWQZU+6R2eya4LNzjwPM//D
K4MOmwYcNA06uMp719J0h4N5fmbRF3d6W23etky4xBA+IQ/2LEiEUuAeCGF/
EIYPN6LzmPZn1i9GLWCA66TwwWQAYp4YC1XIhyJmATfkHNAOFPgcbv2jTRed
VXE0UvT/jCXD+ZZZ5oNCLgXEYTSgQIR7x5giXrRuhkwoN1YYnjpslp2YWpFd
NNB2+Vpn743OjrHGqv7itCv5MRmu5nneFnH2+3zN1gWd3uxntjbRdleo+apI
c9N4i9Vq2w01PgerfQ7nXdyTab+jN8U1yWZHRcj5PK9TanezONu97gdMvY+s
d9u7xnK1ifvxnTtXzZ+nghwHmM1ABngGPt1BqQBiXEo7raz6xr+Oh9dJY38s
Cp4h2wY3/ws01otWMI0QhGN/EpscrjWqw0187RV79CpKXSbVlm8Cwczhu9kn
jK4ZJkOrZjBaQIjbA2ErNHpyCpj2MilffHDH3qSwqOzYpMyo+JtXR57euvVo
eKC7IK0gwCHH81SC3W7vwysCT64LOLkh/Ox2f/M1AcdWJp7blGm3NfXs2vhT
yzKs1+U4bEUI7kqx26V2OQwUZZ6vRYzDPm+zDZab5lpsmGe9w/TUhsVmm1bN
N1Bgr4ePog3EnOCEUISaB+DiTn9N5zjmSowpfZzdZ34+UXxCfU9MJkJVl4ac
I3pPoKUxiedwTtDLUL+LoO4RwIAoY41brFGjhAj2hMHSQakKNx+52Dpmxibm
xqcMtbbd7O/prS7pyE1uTA7M97GMsNiQe+lAos2WwOMrUi/uibHZ7nd8uf+R
xeoL21Os1iSfMS31OhBtYZpisyXZekv8uW0A7ji7PYBVAy23hFnvdjxgar/f
9MSG+cfXzrPfv3GtCVz3j6bkTEqHsAkAmfwg6Akyq8nz8avOktpcOuOvwGtN
6G66pCYE1MWaY8qS+9f7lF698Om+O/uZeJMwNQdILrEIwgJsuKKLQCKS7t72
boR/kL/bpdTI6J7a2sYCdVliWGN6WH9BVE2EXbC5aY7bviLfo5VhlklOu+Ls
dmR7HYm32ZxkuyXWYmWC1eqUC9v9zZaFnF4TbrXJdd+SYIstnsfWOe1ddn77
gvM7Fl08ss5u/yrzzYus9qw5/e6qlUawOkzIJux47L5AJ05CQETegQZBYN4g
FcdAyUGQXIGvvdGOg1B740g/jnKksaODcq+O1+zbmyIIh1yhws+pWbN8ZWRA
YISfb3xwcFWOuq0ka7CuYKK5YKg8oTvTuyPVpTvDtSnRvj7+QlOKW16QVYTd
rmggLS/uCzyxwuvwQt9Tq33PbLDe9Y6v5dZz7y48vWme7e7lNruWH11taLZh
7u7l8qMb3zm10/TkrtVHtwF3Aa8pqZUlEbCxCL62isH3TCDDfAf2MXb4IL0i
BwaRhoYj4mgQOVKUTy2FPTv7vNbxt4KgWCTQRZAvhnEYcEQORKlQYGNlUZCZ
Vl2Y39tY3VKc3V6S3qCOKI/1qEvxvFIa0ZjqXhxpl+pz0v/8Dt/ze9wstjke
X3vh8CrXY6ucj5k6n1jnZL7efNv8IxvnHF5rcnCl0b5lhjuXKPeuMNq2SLZv
jcnuNfPM96w9dWDzIiO4ho6QZSi9E55DfFRXIMKDxo4Dn7Za1GI6OohBcyWH
hrryUC9h9bIepu0/EUHEgnzGyBbhIZKIZQpgyPMMVND/UogF9lYWhRlpNYW5
1YWZ2fFh8f7Ooa5Wrpa7rfas3LlM9u5y2VIlb5GKt1AF86pLjHim84RrF0q3
rzLav+WdfVveMd+zausygz2rFxzZuHzncpMDaxdvXqAC/+5Zu3DnusXvrlts
usjQQMITUg1cRNNhBsGkJgUtnI2UGZAjnIuQ0BNdP08WE+NpL7CvuzocX8fm
JBNJVxpzoAdfDQzpfx6COGrB/FgWPviAYJFQoZKD9yRivkIKf6SJSvLuxtXm
h/ZsXrN8kbF0jpRnKOCZSHmLDHjvqHjzDQRKEez9kQhhqBm8wqc1iHjAHVBJ
eEZy3tJ58g1LTFbPM1o/f87WpfO3r1y0Y83STcvmz1fBB0Lg4kzojPN5tPVC
lAvOY3JqIzk/lkNkHmW1kg/Sq7jjpRjww3b1VpWIxfopz9dX9Yc3js2JzyQI
6jL4H0GQyAuccIE/Hq2PDgbYkcolsKQC1gjxlTKhgUykEMPwvkwEQ41yEc9Y
LjSW8wGLgoNSEX4MAJJaqHiYHWjxSBRShp/lMaEVGap4xzs4+kw+y9c2D+i5
TWNEyyhdc4JmRizEMIICVI+Nu1vx0hO4GwRPY3wcG7Ps0mcMKByTWFdL6kWE
vmFs7uqeoAeR11SaGEHmhhCCgAHRKwyqiSV8oAgBgmAoxHyAlEwkRIs38RUS
oVIikKBVNJkfzDxBWEwNvF4iUkYAKWDcwuWB4KLecvgsWGY1XnYlc1SDSlGG
x852vda+LqYz/UYBFWPBy1fJJDDGw9w1u6YVHsA/lkLtKsYQ07aNLqlnp7Ze
ATsLD74xguQDWGiT1UckMrFMLpKhtUIAJ+Kl5OViuCI5HvgIABSYQ2IRMTNE
Ak2PjIhZ8RKXSwFjnw8EilTGl0ngCuV83BPFqCe+CD/5lPPDMQfpIqjLArMQ
kAg9zHcYKcxr+F/6yVaEK/naPK77Xbo3wNmf6SOz3/BrIShgaSggSh+wnlSE
uiUkAD6JVADbyQV46Woo9IAIlSNZKhXCNY7kYljyC7wStLozI5RIbRvTWyrE
j8HFIhMnfYSYXAJ2fSRqRUdm7TiO1tMLny4FOBJVoO2Y81mxQ6QlB0FanGLK
8HU23e/iHH9FBHXRfwME8a2i9bXF2A4HAwgRmUIKeBBbggJWDMIUG0qIi8h0
Bb4z8kfE7PJA7OrJaDVLjeUvpp/8gh/Nw9wzwhfzrAiG8gR8tnqHLsHiafPU
TJuAchAIbenfi/Ufnyw9wdPsC/jMbyQ72MjTS2EOguSLZkJcoC+yxIHszRDE
wSes0IkPBYMbMrFARK6MHzTFp34XY3drZB7V7yOk1Ctfo9A1z7eCGVeckxXi
5inUyI80HscUIfTh/EYOJWciGod/+WjVFxomRv4z+V/mNxJxSusX3etzjuMj
NII0e+p1JN8KgrT8JxsEUSziCTRXJqRgjgtFKHkj4wnFTGocPyYYT2bWjsZ3
g2lFpCX8rFDAsCtKZ+FeBsy2tGdHy8OZKDkLgkJN9JuqQEBViHIZMNb4eEch
F0NrTSEBO+BfMMC/wJ0So7QIRxrzqICq3k0XQVqMk4MUqfVImNdCkGM5Y/hE
yO6gERSQZ3/gOQoTqDKeRMYTiGgEMYjsbaAlT/nM9GayeLjLW6SZ5SyCjGGP
+Z0EWDS5Px2y6JJRQHkTPO2oDo9ERHk8lVI6x1gFXgFSCrkIYCeTClQyCB8A
DhzEOCKfmI9uhtHINIKce9B7S3pP4wS6Z5K6r74JdYLnfEqec05mrs8Qn3lC
LlkVR5eeiIZ8OjLJwzJZLNBNFjAzSoiFGw+bT7CyhV1nVagJcgoIn3IyUBx1
o0NJeBG5TGiolKjkIrmEr5DykK/EN1YCw40PVLxMDBPKwMbGEpW8YlMNq1Gh
5hdxfzLW3SSUxEfiS/dO9CLF1xGwr44gZ4LNNBnog3wdU0EvgnRwkiRkMXNx
snh8FBMAM18iZuDDqDHPIsBal41tciQboRVdBUokMLVB+kslfAOFGAAnl/DA
UEn5BjKBkQKFLIRoSRmxQCpkRAfWkjSC+KAughyZKWBXXSa+/O8iOBOpXx1B
eia/RQT5fEYyE8sW7+OhlUFAnQ5ApsEV2cQMJ2JxTmY+B0H63mjFp4MdPh9e
EPAgB0FDuRAMgKAMtRkCBCUCjZ1DUCNDglJaehHkU5EiTF6JRCLUqUF9iwgK
tJMmb5cH0Z3ziGrDtUkk/aqHDRHHAQorFWIDldTIUGGgkgGuJOxANCNddM25
H90JT09IYK6AKxsbyACIQIQSBAEbKhB8Cil8gpoYTRjGw9WGD48340FdBF+F
1LNv/z8kp9xt
    "], {{0, 100}, {150, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageResolution -> {72, 72}, Interleaving -> 
    True, MetaInformation -> 
    Association[
     "Source" -> "http://www.eol.org/pages/2336", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset050/921/\
921912200ce175e7e21e169c19269bd3_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150, 100},
  PlotRange->{{0, 150}, {0, 100}}]], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"d9dca569-74b1-4785-8b05-a6c403d48ba1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\


The comparison of frequencies of changes in all species\
\>", "Subsubsection",ExpressionUUID->"dfedf0e6-f4f5-40ad-aa08-e64823e57432"],

Cell["\<\
With this plot we are trying to explore the amino acid changes that are \
\>", "Text",ExpressionUUID->"76ead7ce-925d-4c38-8de9-8d0ca2222a6b"],

Cell["\<\
1) the most different and the most similar  in all of the species.\
\>", "Text",
 CellChangeTimes->{
  3.661223195555509*^9},ExpressionUUID->"c6fa0419-e412-4b01-8a9b-\
25783a36d304"],

Cell["2) how and why are they different or similar?", "Text",
 CellChangeTimes->{
  3.661223200317329*^9},ExpressionUUID->"e0f6c08c-2ff9-4a39-b2d9-\
debc852ac8bf"],

Cell["3) and what is the general pattern?", "Text",ExpressionUUID->"e160525e-037f-4278-9866-d25e0304fb7e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rulesTicks", "=", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "\[Rule]", 
       RowBox[{"First", "[", "#2", "]"}]}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<KR\>\"", ",", "\"\<SG\>\"", ",", "\"\<IM\>\"", ",", "\"\<TA\>\"", 
       ",", "\"\<IV\>\"", ",", "\"\<MV\>\"", ",", "\"\<HR\>\"", ",", 
       "\"\<NS\>\"", ",", "\"\<ND\>\"", ",", "\"\<QR\>\"", ",", "\"\<KE\>\"", 
       ",", "\"\<EG\>\"", ",", "\"\<RG\>\"", ",", "\"\<YC\>\"", ",", "\n", 
       "\"\<DG\>\"", ",", "\"\<stop-W\>\"", ",", "\"\<syn\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rulesColors", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<human\>\"", " ", "\[Rule]", " ", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.6900000000000001, 0.49, 0.31], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4600000000000001, 0.32666666666666666`, 0.20666666666666667`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.6900000000000001`", ",", "0.49`", ",", "0.31`"}], 
            "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6900000000000001, 0.49, 0.31]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6900000000000001, 0.49, 0.31],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"\"\<specific_oct_bim\>\"", " ", "\[Rule]", " ", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.6, 0.04], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.4, 0.02666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.`", ",", "0.6`", ",", "0.04`"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.6, 0.04]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.6, 0.04],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"\"\<conserved_cephalopods\>\"", " ", "\[Rule]", " ", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9204697991268052, 0.01247026853391442, 0.39], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6136465327512035, 0.008313512355942947, 0.26],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.9204697991268052`", ",", "0.01247026853391442`", ",", 
              "0.39`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9204697991268052, 0.01247026853391442, 0.39],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"\"\<specific_sepia\>\"", " ", "\[Rule]", " ", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.2073047547900564, 0.46, 0.7900750170440545], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.1382031698600376, 0.3066666666666667, 0.5267166780293697],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.2073047547900564`", ",", "0.46`", ",", 
              "0.7900750170440545`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.2073047547900564, 0.46, 0.7900750170440545],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"\"\<specific_squid\>\"", " ", "\[Rule]", " ", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.64, 0.09809664422436004, 0.7443255369657586], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4266666666666667, 0.06539776281624003, 0.4962170246438391],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.64`", ",", "0.09809664422436004`", ",", 
              "0.7443255369657586`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.64, 0.09809664422436004, 0.7443255369657586],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"\"\<specific_oct_vul\>\"", " ", "\[Rule]", " ", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.34, 0.78, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.22666666666666668`, 0.52, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.34`", ",", "0.78`", ",", "1"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.34, 0.78, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.34, 0.78, 1],
       Editable->False,
       Selectable->False]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rules", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"rulesTicks", ",", "rulesColors"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Creating", " ", "tick", " ", "marks", " ", "for", " ", "y"}], 
    "-", 
    RowBox[{
    "axis", " ", "and", " ", "assigning", " ", "colors", " ", "to", " ", 
     "the", " ", "points", " ", "associated", " ", "with", " ", "a", " ", 
     "specific", " ", "species"}]}], "*)"}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7551125792594624`*^9},
 CellLabel->
  "In[232]:=",ExpressionUUID->"3a569cee-d381-486a-9307-73df112c35d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"legendSpecies", " ", "=", " ", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Values", "@", "rulesColors"}], ",", 
      RowBox[{"Keys", "@", "rulesColors"}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", "\"\<Species\>\""}], ",", "\n", 
      RowBox[{"LegendFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{"#", ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Creating", " ", "a", " ", "legend", " ", "for", " ", "colors", " ", 
    "associated", " ", "with", " ", "species"}], "*)"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.755112579259739*^9},
 CellLabel->
  "In[235]:=",ExpressionUUID->"4e07d666-dc6e-49df-a7fb-8473104aef4e"],

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#2", ",", "#1"}], "}"}], ",", "#3"}], "]"}], "&"}], ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Values", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"data", "[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Change\>\"", ",", "\"\<Frequency\>\"", ",", 
               "\"\<Species\>\""}], "}"}]}], "]"}], "]"}], "]"}]}], "/.", 
        "rules"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Values", "[", "rulesTicks", "]"}], ",", 
           RowBox[{"Keys", "[", "rulesTicks", "]"}]}], "}"}]}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "legendSpecies"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "0.012", "]"}]}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Changes\>\"", ",", "Bold"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Frequency\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Left", ",", " ", "Bottom"}], "}"}], ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.755112579260003*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"9b7e35f5-7a0f-4241-a0ca-e5348fef0c6a"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           PointSize[0.012]], 
          PointBox[CompressedData["
1:eJxVlHkwlGEcx99lFKmInUbamtKuMdKiQ6NNHia5clamTDpIjjaJLUUrR2sZ
HabFYmXdu8smlCi5pynnyJSZ1TUqpGknq5GmRQdvv2c8Mzs73z/e5/l9Pu/3
eTcGnvMN1iAIIvjv79+/QB2n1rRrtyfm14R95EfqpIvOIzITqNzPYWnjtlwy
a6OWW6aNk2kNZNZHWvbpBykt1WSmIrevNDW6lUlmI+QYJd/5ZkhEZhoKCnVM
HB6sIvMGVGU4mZ+qkJPZBFnf3+msY1tHZjoyifndzmY2kdkUzRLnnXpGa8ls
hm6/5jLXhf8/35x8vozMFqjfU1T5dLOYzEzE+XRR7M4PJ7MV0smI3kyLagN+
2XJZR0p8NfDfPK3wKaXKYV5RRrXPi4cVMA+Ft43B9ZDAeWzmytyGwVdktkbh
LXWGjI0S4DubOLuscqUQ/GRvWD+mLSvB87OG6PH7BOCbb9sUeKm2CHzMMTj+
Jx2k4HvJy+wcW6UIfHwo5uQYCSrg/dTqhlFydvGA/3vm0JZp2yR4H1pmBcLq
gxbgw4P3GFnRu8GH+/IJ5+679eCjQ31na/mVu8D77diWn6NCOcx/VYCO8xly
mNeFsT85tC8PeIab6ivOsDC/v3JGk3mjFPyu5omt9GxKwO8AzTFg4l0R+Au9
GeUjG5cBPzfW/F6Vsgd8L8yTDz5SvK93RkhLwEdn50jjGRYf+GP9Ng1ESJPB
z6U8Q88x4VHwUWhs+Za+BPeD9d7rhjCiFnxcHje11pbjfuTlzi/g/RUf/oQj
kALP4myCTs+vQZh/7b/jEnF/46hVzsOx+D6ls8fUMlUx+J6RqQY8AgvB9+L9
qSjN4cRIv0kl8C/ezwwt8CQB/8J+CeCHWLSsUHFQ3s80KvZh/+7zoz2KGvAh
zupY4bq3Enx8mVa8Eh/CfCgkRhnTWw4+AlAwT/klC/gSShNEgSfLgO+Z8RVK
q1kZ+PJbGt0bW18KfrwEGdze5/i+HBpVqPqaisHHPle+do1AAj4mf3+bljAL
gN9OKvrhr8L3RR6/xm3qYSr4kPSsv1qkTgQfrbKgTVx3c+hHW4SUazDYCj52
dHEyp5i4H6tRoVdzEvZBPGBTLAtxH/o1nPRXhGE/F55Y+q4dxt+LY0G/BnKT
hcDX59bl1H22HPjZLfVU79e4Hw3N2dOsdPw9yV8V2a3ywf1Al3vmXMxxPwS6
oXNlBO6HcYjN7jibHPCz3fiIpd6pa+DDgp9vUGCH+0E7nE3pOkAHH38Anc6t
SA==
           "]]}, {}}, {{
          StyleBox[{
            PointBox[{{0.142487047, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.097797927, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.024611399, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.095854922, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.065414508, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.02007772, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.027202073, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.060233161, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.05634715, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.082901554, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.113989637, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.073834197, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.064119171, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.041450777, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.030440415, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.003238342, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.136294862, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.06443064, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.054844985, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052176038, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.045513068, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.341230535, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04517475, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022516892, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038399008, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.018823596, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.034564745, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.047373812, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.027272129, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.051903504, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.010365665, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008899623, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000216147, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.212041885, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.092495637, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.057591623, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.055846422, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.054973822, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02617801, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022687609, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.040139616, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.037521815, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.034904014, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.05061082, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.22600349, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.027923211, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038394415, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.011343805, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009598604, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.001745201, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.133, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.072, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.056, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.025, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.35, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.042, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.037, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.032, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.133439299, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.069721146, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053255351, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.348976096, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04453635, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.021403991, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.041758615, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.041326523, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.040462339, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.019320689, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.036604373, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.046048672, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.029474854, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052622645, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.012067715, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008780729, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000200614, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.131532966, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.071029042, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053731868, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048097104, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.350161806, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.046639303, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022962955, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.043806412, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.020367862, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038171648, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.031875187, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04719761, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052739322, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02364533, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009956473, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.007930026, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000155085, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> 
           False]}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.15101896649999996`}, {0, 17.}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 0.15101896649999996`}, {0, 17.}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
           FormBox["\"KR\"", TraditionalForm]}, {2, 
           FormBox["\"SG\"", TraditionalForm]}, {3, 
           FormBox["\"IM\"", TraditionalForm]}, {4, 
           FormBox["\"TA\"", TraditionalForm]}, {5, 
           FormBox["\"IV\"", TraditionalForm]}, {6, 
           FormBox["\"MV\"", TraditionalForm]}, {7, 
           FormBox["\"HR\"", TraditionalForm]}, {8, 
           FormBox["\"NS\"", TraditionalForm]}, {9, 
           FormBox["\"ND\"", TraditionalForm]}, {10, 
           FormBox["\"QR\"", TraditionalForm]}, {11, 
           FormBox["\"KE\"", TraditionalForm]}, {12, 
           FormBox["\"EG\"", TraditionalForm]}, {13, 
           FormBox["\"RG\"", TraditionalForm]}, {14, 
           FormBox["\"YC\"", TraditionalForm]}, {15, 
           FormBox["\"DG\"", TraditionalForm]}, {16, 
           FormBox["\"stop-W\"", TraditionalForm]}, {17, 
           FormBox["\"syn\"", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"human\"", "\"specific_oct_bim\"", "\"conserved_cephalopods\"", 
         "\"specific_sepia\"", "\"specific_squid\"", "\"specific_oct_vul\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          FrameBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"Species\"", {FontFamily -> "Arial"}, Background -> 
                   Automatic, StripOnInput -> False]}, {
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6900000000000001, 0.49, 0.31]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.6, 0.04]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.34, 0.78, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], RoundingRadius -> 5, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6900000000000001, 0.49, 0.31], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4600000000000001, 0.32666666666666666`, 
                    0.20666666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6900000000000001`", ",", "0.49`", ",", "0.31`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6900000000000001, 0.49, 0.31]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.6900000000000001, 0.49, 0.31], Editable -> False,
                   Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6, 0.04], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4, 0.02666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6`", ",", "0.04`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6, 0.04]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0.6, 0.04], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6136465327512035, 0.008313512355942947, 0.26], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.39`"}], "]"}], NumberMarks -> False]], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.9204697991268052, 0.01247026853391442, 0.39], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.3066666666666667, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.46`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2073047547900564, 0.46, 0.7900750170440545], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4266666666666667, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.64`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.64, 0.09809664422436004, 0.7443255369657586], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.34, 0.78, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.22666666666666668`, 0.52, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.34`", ",", "0.78`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.34, 0.78, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.34, 0.78, 1], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", 
               RowBox[{"(", 
                 RowBox[{
                   FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False],
                    "&"}], ")"}]}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Species\""}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   StyleBox["\"Changes\"", Bold, StripOnInput -> False],StyleBox[
   "\"Frequency\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.755112579260289*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"a216680a-3a0e-4bdf-81cc-47eaaedf61ae"]
}, {4}]],

Cell[BoxData[""], "Input",ExpressionUUID->"a12667cb-1910-444b-83d8-0d2892686eff"],

Cell["\<\
First observation:
Humans have a different pattern from each one of cephalopod species, but \
cephalopod species together have a similar pattern which means that this \
amino acid preference is connected to cephalopod species being special.\
\>", "Text",ExpressionUUID->"23bcec35-c0bf-482f-a612-9ae88406850a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#2", ",", "#1"}], "}"}], ",", "#3"}], "]"}], "&"}], ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Values", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"data", "[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Change\>\"", ",", "\"\<Frequency\>\"", ",", 
               "\"\<Species\>\""}], "}"}]}], "]"}], "]"}], "]"}]}], "/.", 
        "rules"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Values", "[", "rulesTicks", "]"}], ",", 
           RowBox[{"Keys", "[", "rulesTicks", "]"}]}], "}"}]}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", " ", "\[Rule]", " ", "legendSpecies"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "0.012", "]"}]}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Changes\>\"", ",", " ", "Bold"}], "]"}], ",", " ", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Frequency\>\"", ",", " ", "Bold"}], "]"}]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"Left", ",", " ", "Bottom"}], "}"}], ",", " ", 
   RowBox[{"RotateLabel", " ", "\[Rule]", " ", "True"}]}], "]"}]], "Code",
 CellLabel->
  "In[259]:=",ExpressionUUID->"9fe0e80e-33c0-4d23-b929-d5adca72c47e"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           PointSize[0.012]], 
          PointBox[CompressedData["
1:eJxVlHkwlGEcx99lFKmInUbamtKuMdKiQ6NNHia5clamTDpIjjaJLUUrR2sZ
HabFYmXdu8smlCi5pynnyJSZ1TUqpGknq5GmRQdvv2c8Mzs73z/e5/l9Pu/3
eTcGnvMN1iAIIvjv79+/QB2n1rRrtyfm14R95EfqpIvOIzITqNzPYWnjtlwy
a6OWW6aNk2kNZNZHWvbpBykt1WSmIrevNDW6lUlmI+QYJd/5ZkhEZhoKCnVM
HB6sIvMGVGU4mZ+qkJPZBFnf3+msY1tHZjoyifndzmY2kdkUzRLnnXpGa8ls
hm6/5jLXhf8/35x8vozMFqjfU1T5dLOYzEzE+XRR7M4PJ7MV0smI3kyLagN+
2XJZR0p8NfDfPK3wKaXKYV5RRrXPi4cVMA+Ft43B9ZDAeWzmytyGwVdktkbh
LXWGjI0S4DubOLuscqUQ/GRvWD+mLSvB87OG6PH7BOCbb9sUeKm2CHzMMTj+
Jx2k4HvJy+wcW6UIfHwo5uQYCSrg/dTqhlFydvGA/3vm0JZp2yR4H1pmBcLq
gxbgw4P3GFnRu8GH+/IJ5+679eCjQ31na/mVu8D77diWn6NCOcx/VYCO8xly
mNeFsT85tC8PeIab6ivOsDC/v3JGk3mjFPyu5omt9GxKwO8AzTFg4l0R+Au9
GeUjG5cBPzfW/F6Vsgd8L8yTDz5SvK93RkhLwEdn50jjGRYf+GP9Ng1ESJPB
z6U8Q88x4VHwUWhs+Za+BPeD9d7rhjCiFnxcHje11pbjfuTlzi/g/RUf/oQj
kALP4myCTs+vQZh/7b/jEnF/46hVzsOx+D6ls8fUMlUx+J6RqQY8AgvB9+L9
qSjN4cRIv0kl8C/ezwwt8CQB/8J+CeCHWLSsUHFQ3s80KvZh/+7zoz2KGvAh
zupY4bq3Enx8mVa8Eh/CfCgkRhnTWw4+AlAwT/klC/gSShNEgSfLgO+Z8RVK
q1kZ+PJbGt0bW18KfrwEGdze5/i+HBpVqPqaisHHPle+do1AAj4mf3+bljAL
gN9OKvrhr8L3RR6/xm3qYSr4kPSsv1qkTgQfrbKgTVx3c+hHW4SUazDYCj52
dHEyp5i4H6tRoVdzEvZBPGBTLAtxH/o1nPRXhGE/F55Y+q4dxt+LY0G/BnKT
hcDX59bl1H22HPjZLfVU79e4Hw3N2dOsdPw9yV8V2a3ywf1Al3vmXMxxPwS6
oXNlBO6HcYjN7jibHPCz3fiIpd6pa+DDgp9vUGCH+0E7nE3pOkAHH38Anc6t
SA==
           "]]}, {}}, {{
          StyleBox[{
            PointBox[{{0.142487047, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.097797927, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.024611399, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.095854922, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.065414508, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.02007772, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.027202073, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.060233161, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.05634715, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.082901554, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.113989637, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.073834197, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.064119171, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.041450777, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.030440415, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.003238342, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{0.136294862, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.06443064, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.054844985, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052176038, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.045513068, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.341230535, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04517475, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022516892, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038399008, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.018823596, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.034564745, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.047373812, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.027272129, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.051903504, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.010365665, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008899623, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000216147, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.212041885, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.092495637, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.057591623, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.055846422, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.054973822, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02617801, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022687609, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.040139616, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.037521815, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.034904014, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.05061082, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.22600349, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.027923211, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038394415, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.011343805, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009598604, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.001745201, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.133, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.072, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.056, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.025, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.35, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.042, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.037, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.032, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.133439299, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.069721146, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053255351, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.348976096, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04453635, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.021403991, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.041758615, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.041326523, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.040462339, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.019320689, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.036604373, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.046048672, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.029474854, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052622645, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.012067715, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008780729, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000200614, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.131532966, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.071029042, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053731868, 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048097104, 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.350161806, 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.046639303, 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022962955, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.043806412, 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.020367862, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038171648, 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.031875187, 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04719761, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052739322, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02364533, 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009956473, 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.007930026, 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000155085, 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> 
           False]}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.15101896649999996`}, {0, 17.}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 0.15101896649999996`}, {0, 17.}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
           FormBox["\"KR\"", TraditionalForm]}, {2, 
           FormBox["\"SG\"", TraditionalForm]}, {3, 
           FormBox["\"IM\"", TraditionalForm]}, {4, 
           FormBox["\"TA\"", TraditionalForm]}, {5, 
           FormBox["\"IV\"", TraditionalForm]}, {6, 
           FormBox["\"MV\"", TraditionalForm]}, {7, 
           FormBox["\"HR\"", TraditionalForm]}, {8, 
           FormBox["\"NS\"", TraditionalForm]}, {9, 
           FormBox["\"ND\"", TraditionalForm]}, {10, 
           FormBox["\"QR\"", TraditionalForm]}, {11, 
           FormBox["\"KE\"", TraditionalForm]}, {12, 
           FormBox["\"EG\"", TraditionalForm]}, {13, 
           FormBox["\"RG\"", TraditionalForm]}, {14, 
           FormBox["\"YC\"", TraditionalForm]}, {15, 
           FormBox["\"DG\"", TraditionalForm]}, {16, 
           FormBox["\"stop-W\"", TraditionalForm]}, {17, 
           FormBox["\"syn\"", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"human\"", "\"specific_oct_bim\"", "\"conserved_cephalopods\"", 
         "\"specific_sepia\"", "\"specific_squid\"", "\"specific_oct_vul\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          FrameBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"Species\"", {FontFamily -> "Arial"}, Background -> 
                   Automatic, StripOnInput -> False]}, {
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6900000000000001, 0.49, 0.31]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.6, 0.04]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.34, 0.78, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], RoundingRadius -> 5, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6900000000000001, 0.49, 0.31], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4600000000000001, 0.32666666666666666`, 
                    0.20666666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6900000000000001`", ",", "0.49`", ",", "0.31`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6900000000000001, 0.49, 0.31]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.6900000000000001, 0.49, 0.31], Editable -> False,
                   Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6, 0.04], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4, 0.02666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6`", ",", "0.04`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6, 0.04]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0.6, 0.04], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6136465327512035, 0.008313512355942947, 0.26], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.39`"}], "]"}], NumberMarks -> False]], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.9204697991268052, 0.01247026853391442, 0.39], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.3066666666666667, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.46`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2073047547900564, 0.46, 0.7900750170440545], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4266666666666667, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.64`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.64, 0.09809664422436004, 0.7443255369657586], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.34, 0.78, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.22666666666666668`, 0.52, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.34`", ",", "0.78`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.34, 0.78, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.34, 0.78, 1], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", 
               RowBox[{"(", 
                 RowBox[{
                   FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False],
                    "&"}], ")"}]}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Species\""}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   StyleBox["\"Changes\"", Bold, StripOnInput -> False],StyleBox[
   "\"Frequency\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[259]=",ExpressionUUID->"462ac5cd-8807-4ac1-9e87-239cee27e894"]
}, {2}]],

Cell["\<\
Second observation:
EG, TA, KE changes in human are most different and therefore are more likely \
to have a negative effect. As well contributed to cephalopod species being \
special.
If we check these three changes, it turns out: EG, KE are radical changes and \
TA is conserved which doesn\[CloseCurlyQuote]t disprove our assumptions.\
\>", "Text",ExpressionUUID->"c842159c-a0dd-4342-9eee-26c8930424de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The comparison of amount of changes in cephalopod species", \
"Subsubsection",ExpressionUUID->"0e9e68ab-c5a4-4cc2-9777-3d370938801c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#2", ",", "#1"}], "}"}], ",", "#3"}], "]"}], "&"}], ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Values", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"data", "[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Change\>\"", ",", "\"\<Edits\>\"", ",", 
               "\"\<Species\>\""}], "}"}]}], "]"}], "]"}], "]"}]}], "/.", 
        "rules"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Values", "[", "rulesTicks", "]"}], ",", 
           RowBox[{"Keys", "[", "rulesTicks", "]"}]}], "}"}]}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "legendSpecies"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "0.012", "]"}]}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Changes\>\"", ",", "Bold"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Edits\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Left", ",", " ", "Bottom"}], "}"}], ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]], "Code",
 CellLabel->
  "In[260]:=",ExpressionUUID->"dbc72170-77af-41b6-8e07-8e3acbdf1db5"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           PointSize[0.012]], 
          PointBox[CompressedData["
1:eJxdlE0oRFEYhk9WlhbIYhbjNkmSWJkkpvxtiPyESZJio7C0UA4blBFJZoNM
/k3M+EuymGzMYrYjNiJLlJUsMef51LlKr8dc93zvcz+3cHCsfShLKTX0+/2X
mS89EjA/fNZm4nkQVmQdmW1Sy+c5JgO9cC5ZSxaQDaSH67thr8lEF+yQA6SP
HCaLOL8PLubve+ASso0s5fomuMw1Z3kmdUcKpn/yGqZ/6tKeN3Zhz/N2ap2X
uH6BK0zeyeeOyasIjJ/3E3v+5k0Y3zdRGB/xM7tHdBfGx4rMx/OpXobpHw7B
PA9VSRofamAUxocOwvjQLr//vplft9rzqhq7j6oiZT/k+eBXy77gV9WTDtlC
0r98HMa3CpD4UI1kjj3nf385R/ZD9h4f/gSMj7W4fZ3/yJ7fE4bpG96zz5kU
Nn0C/Wl7/tttGL++FRhf+RG7x4TsC7475f74OT6A6Z+S+4mfGZL+3ilY/Dgk
/y+vLh+7Lh9fh7DxofPuYfotyL7iI7oK08+3Y/d7Fx/MMenysyR98D0XgfHR
5vLxsA7Tf1vmxc/4HIyP5DQsPmR/2I/HJIyPe9f7o+UcZj9K5X1g+uv5Zxg/
m+LTMRncsvuFYjD9kxsw/h7kfcGc+fswPtJyf3x8yPuE/k9yHn4KFmF8fM/C
Hvv3vz5+ACP2qGw=
           "]]}, {}}, {{
          StyleBox[{
            PointBox[{{220., 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{151., 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{38., 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{148., 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{101., 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{31., 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{42., 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{93., 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{87., 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{128., 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{176., 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{114., 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{99., 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{64., 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{47., 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{5., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
           False]}, {
          StyleBox[{
            PointBox[{{14503., 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{6856., 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{5836., 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{5552., 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4843., 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{36310., 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4807., 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2396., 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4086., 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2003., 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3678., 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{5041., 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2902., 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{5523., 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1103., 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{947., 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{23., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{243., 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{106., 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{66., 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{64., 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{63., 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{30., 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{26., 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{46., 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{43., 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{40., 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{58., 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{259., 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{32., 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{44., 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{13., 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{11., 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{8304., 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4503., 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3484., 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1543., 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3020., 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3006., 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{21881., 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2657., 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1225., 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2315., 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2014., 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2986., 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3287., 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1267., 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{576., 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{498., 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{9., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{8647., 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4518., 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3451., 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{22614., 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2886., 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1387., 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2706., 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2678., 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2622., 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1252., 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2372., 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2984., 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1910., 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3410., 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{782., 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{569., 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{13., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{12722., 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{6870., 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{5197., 8.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4652., 11.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{33868., 17.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4511., 9.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2221., 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4237., 14.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{1970., 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3692., 13.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{3083., 10.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{4565., 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{5101., 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{2287., 12.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{963., 15.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{767., 7.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{15., 16.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[0.34, 0.78, 1]]}, StripOnInput -> 
           False]}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 11948.5}, {0, 17.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 11948.5}, {0, 17.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
           FormBox["\"KR\"", TraditionalForm]}, {2, 
           FormBox["\"SG\"", TraditionalForm]}, {3, 
           FormBox["\"IM\"", TraditionalForm]}, {4, 
           FormBox["\"TA\"", TraditionalForm]}, {5, 
           FormBox["\"IV\"", TraditionalForm]}, {6, 
           FormBox["\"MV\"", TraditionalForm]}, {7, 
           FormBox["\"HR\"", TraditionalForm]}, {8, 
           FormBox["\"NS\"", TraditionalForm]}, {9, 
           FormBox["\"ND\"", TraditionalForm]}, {10, 
           FormBox["\"QR\"", TraditionalForm]}, {11, 
           FormBox["\"KE\"", TraditionalForm]}, {12, 
           FormBox["\"EG\"", TraditionalForm]}, {13, 
           FormBox["\"RG\"", TraditionalForm]}, {14, 
           FormBox["\"YC\"", TraditionalForm]}, {15, 
           FormBox["\"DG\"", TraditionalForm]}, {16, 
           FormBox["\"stop-W\"", TraditionalForm]}, {17, 
           FormBox["\"syn\"", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"human\"", "\"specific_oct_bim\"", "\"conserved_cephalopods\"", 
         "\"specific_sepia\"", "\"specific_squid\"", "\"specific_oct_vul\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          FrameBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"Species\"", {FontFamily -> "Arial"}, Background -> 
                   Automatic, StripOnInput -> False]}, {
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6900000000000001, 0.49, 0.31]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.6, 0.04]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.34, 0.78, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], RoundingRadius -> 5, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6900000000000001, 0.49, 0.31], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4600000000000001, 0.32666666666666666`, 
                    0.20666666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6900000000000001`", ",", "0.49`", ",", "0.31`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6900000000000001, 0.49, 0.31]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.6900000000000001, 0.49, 0.31], Editable -> False,
                   Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6, 0.04], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4, 0.02666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6`", ",", "0.04`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6, 0.04]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0., 0.6, 0.04], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6136465327512035, 0.008313512355942947, 0.26], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.39`"}], "]"}], NumberMarks -> False]], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.9204697991268052, 0.01247026853391442, 0.39], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.3066666666666667, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.46`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2073047547900564, 0.46, 0.7900750170440545], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4266666666666667, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.64`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.64, 0.09809664422436004, 0.7443255369657586], 
                  Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.34, 0.78, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.22666666666666668`, 0.52, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.34`", ",", "0.78`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.34, 0.78, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.34, 0.78, 1], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", 
               RowBox[{"(", 
                 RowBox[{
                   FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False],
                    "&"}], ")"}]}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Species\""}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   StyleBox["\"Changes\"", Bold, StripOnInput -> False],StyleBox[
   "\"Edits\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[260]=",ExpressionUUID->"7eef4348-6b94-43b7-b127-9ef2b87d2227"]
}, {2}]],

Cell["\<\
Observation:
Squid and sepia have more similar number of edits compared to oct_bim and \
oct_vul because they are just different kinds of octopus.\
\>", "Text",ExpressionUUID->"359d82da-f182-437b-b3b5-02b6a8b46061"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", "\n", 
         RowBox[{
          RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#2", ",", "#1"}], "}"}], ",", "#3"}], "]"}], "&"}],
               ",", 
              RowBox[{
               RowBox[{"Transpose", "@", 
                RowBox[{"Values", "[", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"datagrouped", "[", 
                   RowBox[{"species", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Change\>\"", ",", "\"\<Edits\>\"", ",", 
                    "\"\<Species\>\""}], "}"}]}], "]"}], "]"}], "]"}]}], " ", 
               "/.", " ", "rules"}]}], "]"}], ",", "\n", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "15000"}], "}"}], ",", "Automatic"}], 
              "}"}]}], ",", "\n", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"StringForm", "[", "species", "]"}]}], ",", "\n", 
            RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", 
               RowBox[{"Transpose", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Values", "[", "rulesTicks", "]"}], ",", 
                  RowBox[{"Keys", "[", "rulesTicks", "]"}]}], "}"}]}]}], 
              "}"}]}], ",", "\n", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"PointSize", "[", "Medium", "]"}]}]}], "]"}], ",", "\n", 
          RowBox[{"{", 
           RowBox[{"species", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<human\>\"", ",", "\"\<specific_sepia\>\"", ",", 
              "\"\<conserved_cephalopods\>\"", ",", 
              "\"\<specific_oct_bim\>\"", ",", "\"\<specific_squid\>\"", ",", 
              "\"\<specific_oct_vul\>\""}], "}"}]}], "}"}]}], "]"}]}], ",", 
       "\n", "3"}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"ImageSize", "->", "Full"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Changes\>\"", ",", "Bold"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Edits\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Left", ",", " ", "Bottom"}], "}"}], ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]], "Code",
 CellLabel->
  "In[262]:=",ExpressionUUID->"eb451716-1e8f-46b2-bdde-ae05a376ebdf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{220., 1.}, {151., 2.}, {38., 3.}, {148., 4.}, {101., 
              5.}, {31., 6.}, {42., 7.}, {93., 8.}, {87., 9.}, {128., 10.}, {
              176., 11.}, {114., 12.}, {99., 13.}, {64., 14.}, {47., 15.}, {
              5., 16.}}]}, {}}, {{
             StyleBox[{
               PointBox[{{220., 1.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{151., 2.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{38., 3.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{148., 4.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{101., 5.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{31., 6.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{42., 7.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{93., 8.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{87., 9.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{128., 10.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{176., 11.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{114., 12.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{99., 13.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{64., 14.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{47., 15.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}, {
             StyleBox[{
               PointBox[{{5., 16.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
              False]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{0, 15000}, {0, 16.}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"human\"", 
             StringForm["human"], Editable -> False], TraditionalForm], 
          PlotRange -> {{0, 15000}, {0, 16.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        309.6, -189.86004134396768`}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{14503., 1.}, {6856., 2.}, {5836., 8.}, {5552., 11.}, {
              4843., 14.}, {36310., 17.}, {4807., 9.}, {2396., 6.}, {4086., 
              13.}, {2003., 3.}, {3678., 10.}, {5041., 5.}, {2902., 12.}, {
              5523., 4.}, {1103., 15.}, {947., 7.}, {23., 16.}}]}, {}}, {{
             StyleBox[{
               PointBox[{{14503., 1.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{6856., 2.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{5836., 8.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{5552., 11.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4843., 14.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{36310., 17.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4807., 9.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2396., 6.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4086., 13.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2003., 3.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3678., 10.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{5041., 5.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2902., 12.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{5523., 4.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1103., 15.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{947., 7.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{23., 16.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
              StripOnInput -> False]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{0, 15000}, {0, 17.}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_sepia\"", 
             StringForm["specific_sepia"], Editable -> False], 
            TraditionalForm], PlotRange -> {{0, 15000}, {0, 17.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        928.8000000000002, -189.86004134396768`}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{243., 1.}, {106., 2.}, {66., 14.}, {64., 13.}, {63., 
              10.}, {30., 3.}, {26., 6.}, {46., 8.}, {43., 11.}, {40., 9.}, {
              58., 5.}, {259., 17.}, {32., 12.}, {44., 4.}, {13., 7.}, {11., 
              15.}, {2., 16.}}]}, {}}, {{
             StyleBox[{
               PointBox[{{243., 1.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{106., 2.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{66., 14.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{64., 13.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{63., 10.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{30., 3.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{26., 6.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{46., 8.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{43., 11.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{40., 9.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{58., 5.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{259., 17.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{32., 12.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{44., 4.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{13., 7.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{11., 15.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2., 16.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
              StripOnInput -> False]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{0, 15000}, {0, 17.}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"conserved_cephalopods\"", 
             StringForm["conserved_cephalopods"], Editable -> False], 
            TraditionalForm], PlotRange -> {{0, 15000}, {0, 17.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        1548., -189.86004134396768`}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{8304., 1.}, {4503., 2.}, {3484., 8.}, {1543., 3.}, {
              3020., 11.}, {3006., 9.}, {21881., 17.}, {2657., 14.}, {1225., 
              6.}, {2315., 13.}, {2014., 10.}, {2986., 5.}, {3287., 4.}, {
              1267., 12.}, {576., 15.}, {498., 7.}, {9., 16.}}]}, {}}, {{
             StyleBox[{
               PointBox[{{8304., 1.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4503., 2.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3484., 8.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1543., 3.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3020., 11.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3006., 9.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{21881., 17.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2657., 14.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1225., 6.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2315., 13.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2014., 10.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2986., 5.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3287., 4.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1267., 12.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{576., 15.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{498., 7.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{9., 16.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0., 0.6, 0.04]]}, StripOnInput -> 
              False]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{0, 15000}, {0, 17.}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_oct_bim\"", 
             StringForm["specific_oct_bim"], Editable -> False], 
            TraditionalForm], PlotRange -> {{0, 15000}, {0, 17.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        309.6, -569.5801240319031}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{8647., 1.}, {4518., 2.}, {3451., 8.}, {22614., 17.}, {
              2886., 11.}, {1387., 6.}, {2706., 13.}, {2678., 9.}, {2622., 
              14.}, {1252., 3.}, {2372., 10.}, {2984., 5.}, {1910., 12.}, {
              3410., 4.}, {782., 15.}, {569., 7.}, {13., 16.}}]}, {}}, {{
             StyleBox[{
               PointBox[{{8647., 1.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4518., 2.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3451., 8.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{22614., 17.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2886., 11.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1387., 6.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2706., 13.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2678., 9.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2622., 14.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1252., 3.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2372., 10.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2984., 5.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1910., 12.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3410., 4.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{782., 15.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{569., 7.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{13., 16.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
              StripOnInput -> False]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{0, 15000}, {0, 17.}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_squid\"", 
             StringForm["specific_squid"], Editable -> False], 
            TraditionalForm], PlotRange -> {{0, 15000}, {0, 17.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        928.8000000000002, -569.5801240319031}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{12722., 1.}, {6870., 2.}, {5197., 8.}, {4652., 11.}, {
              33868., 17.}, {4511., 9.}, {2221., 3.}, {4237., 14.}, {1970., 
              6.}, {3692., 13.}, {3083., 10.}, {4565., 5.}, {5101., 4.}, {
              2287., 12.}, {963., 15.}, {767., 7.}, {15., 16.}}]}, {}}, {{
             StyleBox[{
               PointBox[{{12722., 1.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{6870., 2.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{5197., 8.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4652., 11.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{33868., 17.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4511., 9.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2221., 3.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4237., 14.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{1970., 6.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3692., 13.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{3083., 10.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{4565., 5.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{5101., 4.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{2287., 12.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{963., 15.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{767., 7.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
             StyleBox[{
               PointBox[{{15., 16.}}]}, {
               Directive[
                AbsoluteThickness[1.6], 
                PointSize[Medium], 
                RGBColor[0.34, 0.78, 1]]}, StripOnInput -> 
              False]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{0, 15000}, {0, 17.}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_oct_vul\"", 
             StringForm["specific_oct_vul"], Editable -> False], 
            TraditionalForm], PlotRange -> {{0, 15000}, {0, 17.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        1548., -569.5801240319031}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}}, {
      Directive[Antialiasing -> False], {}, {{
        LineBox[{{0, 0}, {0, -379.72008268793536`}}]}, {
        LineBox[{{0, -379.72008268793536`}, {0, -759.4401653758707}}]}, {
        LineBox[{{619.2, 0}, {619.2, -379.72008268793536`}}]}, {
        LineBox[{{619.2, -379.72008268793536`}, {
         619.2, -759.4401653758707}}]}, {
        LineBox[{{1238.4, 0}, {1238.4, -379.72008268793536`}}]}, {
        LineBox[{{1238.4, -379.72008268793536`}, {
         1238.4, -759.4401653758707}}]}, {
        LineBox[{{1857.6000000000001`, 0}, {
          1857.6000000000001`, -379.72008268793536`}}]}, {
        LineBox[{{1857.6000000000001`, -379.72008268793536`}, {
         1857.6000000000001`, -759.4401653758707}}]}, {
        LineBox[{{0, 0}, {619.2, 0}}]}, {
        LineBox[{{619.2, 0}, {1238.4, 0}}]}, {
        LineBox[{{1238.4, 0}, {1857.6000000000001`, 0}}]}, {
        LineBox[{{0, -379.72008268793536`}, {619.2, -379.72008268793536`}}]}, {
        LineBox[{{619.2, -379.72008268793536`}, {
         1238.4, -379.72008268793536`}}]}, {
        LineBox[{{1238.4, -379.72008268793536`}, {
         1857.6000000000001`, -379.72008268793536`}}]}, {
        LineBox[{{0, -759.4401653758707}, {619.2, -759.4401653758707}}]}, {
        LineBox[{{619.2, -759.4401653758707}, {
         1238.4, -759.4401653758707}}]}, {
        LineBox[{{1238.4, -759.4401653758707}, {
         1857.6000000000001`, -759.4401653758707}}]}}}}, ImageSize -> Full, 
    PlotRangePadding -> {6, 5}, ContentSelectable -> True, ImageSize -> Full],
   StyleBox["\"Changes\"", Bold, StripOnInput -> False],StyleBox[
   "\"Edits\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[262]=",ExpressionUUID->"39450cd6-ab8a-4ca7-b006-cdc182bf2bd0"]
}, {2}]],

Cell["\<\
By applying Logarithmic function we can clearly see the pattern of amino acid \
changes in each species is very similar and different from human\
\>", "Text",ExpressionUUID->"546a1cf6-3f5c-47d1-b9b7-80da479f1513"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", "\n", 
          RowBox[{
           RowBox[{"ListLogLinearPlot", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#2", ",", "#1"}], "}"}], ",", "#3"}], "]"}], 
                "&"}], ",", 
               RowBox[{
                RowBox[{"Transpose", "@", 
                 RowBox[{"Values", "[", 
                  RowBox[{"Normal", "[", 
                   RowBox[{"datagrouped", "[", 
                    RowBox[{"species", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Change\>\"", ",", "\"\<Edits\>\"", ",", 
                    "\"\<Species\>\""}], "}"}]}], "]"}], "]"}], "]"}]}], " ", 
                "/.", " ", "rules"}]}], "]"}], ",", "\n", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "15000"}], "}"}], ",", "Automatic"}], 
               "}"}]}], ",", "\n", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"StringForm", "[", "species", "]"}]}], ",", "\n", 
             RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Automatic", ",", 
                RowBox[{"Transpose", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Values", "[", "rulesTicks", "]"}], ",", 
                   RowBox[{"Keys", "[", "rulesTicks", "]"}]}], "}"}]}]}], 
               "}"}]}], ",", "\n", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"PointSize", "[", "Medium", "]"}]}]}], "]"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{"species", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<human\>\"", ",", "\"\<specific_sepia\>\"", ",", 
               "\"\<conserved_cephalopods\>\"", ",", 
               "\"\<specific_oct_bim\>\"", ",", "\"\<specific_squid\>\"", 
               ",", "\"\<specific_oct_vul\>\""}], "}"}]}], "}"}]}], "]"}]}], 
        ",", "\n", "3"}], "]"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"ImageSize", "->", "Full"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Changes\>\"", ",", "Bold"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Edits\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Left", ",", " ", "Bottom"}], "}"}], ",", " ", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Code",
 CellLabel->
  "In[229]:=",ExpressionUUID->"74ff91dc-c825-4846-b940-134b6df62ba6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               PointSize[Medium]], 
              
              PointBox[{{5.393627546352362, 1.}, {5.017279836814924, 2.}, {
               3.6375861597263857`, 3.}, {4.997212273764115, 4.}, {
               4.61512051684126, 5.}, {3.4339872044851463`, 6.}, {
               3.7376696182833684`, 7.}, {4.532599493153256, 8.}, {
               4.465908118654584, 9.}, {4.852030263919617, 10.}, {
               5.170483995038151, 11.}, {4.736198448394496, 12.}, {
               4.59511985013459, 13.}, {4.1588830833596715`, 14.}, {
               3.8501476017100584`, 15.}, {1.6094379124341003`, 
               16.}}]}, {}}, {{
              StyleBox[{
                PointBox[{{5.393627546352362, 1.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{5.017279836814924, 2.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{3.6375861597263857`, 3.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.997212273764115, 4.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.61512051684126, 5.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{3.4339872044851463`, 6.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{3.7376696182833684`, 7.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.532599493153256, 8.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.465908118654584, 9.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.852030263919617, 10.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{5.170483995038151, 11.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.736198448394496, 12.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.59511985013459, 13.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{4.1588830833596715`, 14.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{3.8501476017100584`, 15.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}, {
              StyleBox[{
                PointBox[{{1.6094379124341003`, 16.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.6900000000000001, 0.49, 0.31]]}, StripOnInput -> 
               False]}}}, {}, {}, {}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {2.7189910335128915`, 0}, 
          PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 16.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 16.}}], PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {2.7189910335128915`, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"human\"", 
             StringForm["human"], Editable -> False], TraditionalForm], 
          PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 16.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 16.}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        309.6, -189.86004134396768`}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               PointSize[Medium]], 
              
              PointBox[{{9.58211080356025, 1.}, {8.832879460277615, 2.}, {
               8.671800909642677, 8.}, {8.62191350218664, 11.}, {
               8.48528964240323, 14.}, {10.499848464408382`, 17.}, {
               8.47782846789396, 9.}, {7.78155595923534, 6.}, {
               8.315321775377567, 13.}, {7.602401335665818, 3.}, {
               8.210124405164267, 10.}, {8.525359754082631, 5.}, {
               7.973155433444133, 12.}, {8.616676469901188, 4.}, {
               7.005789019253503, 15.}, {6.853299093186078, 7.}, {
               3.1354942159291497`, 16.}}]}, {}}, {{
              StyleBox[{
                PointBox[{{9.58211080356025, 1.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.832879460277615, 2.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.671800909642677, 8.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.62191350218664, 11.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.48528964240323, 14.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{10.499848464408382`, 17.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.47782846789396, 9.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.78155595923534, 6.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.315321775377567, 13.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.602401335665818, 3.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.210124405164267, 10.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.525359754082631, 5.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.973155433444133, 12.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.616676469901188, 4.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.005789019253503, 15.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{6.853299093186078, 7.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.1354942159291497`, 16.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.2073047547900564, 0.46, 0.7900750170440545]]}, 
               StripOnInput -> False]}}}, {}, {}, {}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {2.7189910335128915`, 0}, 
          PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {2.7189910335128915`, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_sepia\"", 
             StringForm["specific_sepia"], Editable -> False], 
            TraditionalForm], PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        928.8000000000002, -189.86004134396768`}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               PointSize[Medium]], 
              
              PointBox[{{5.493061443340548, 1.}, {4.663439094112067, 2.}, {
               4.189654742026425, 14.}, {4.1588830833596715`, 13.}, {
               4.143134726391533, 10.}, {3.4011973816621555`, 3.}, {
               3.258096538021482, 6.}, {3.828641396489095, 8.}, {
               3.7612001156935624`, 11.}, {3.6888794541139363`, 9.}, {
               4.060443010546419, 5.}, {5.556828061699537, 17.}, {
               3.4657359027997265`, 12.}, {3.784189633918261, 4.}, {
               2.5649493574615367`, 7.}, {2.3978952727983707`, 15.}, {
               0.6931471805599453, 16.}}]}, {}}, {{
              StyleBox[{
                PointBox[{{5.493061443340548, 1.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{4.663439094112067, 2.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{4.189654742026425, 14.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{4.1588830833596715`, 13.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{4.143134726391533, 10.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.4011973816621555`, 3.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.258096538021482, 6.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.828641396489095, 8.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.7612001156935624`, 11.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.6888794541139363`, 9.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{4.060443010546419, 5.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{5.556828061699537, 17.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.4657359027997265`, 12.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{3.784189633918261, 4.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{2.5649493574615367`, 7.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{2.3978952727983707`, 15.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{0.6931471805599453, 16.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.9204697991268052, 0.01247026853391442, 0.39]]}, 
               StripOnInput -> False]}}}, {}, {}, {}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {2.7189910335128915`, 0}, 
          PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {2.7189910335128915`, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"conserved_cephalopods\"", 
             StringForm["conserved_cephalopods"], Editable -> False], 
            TraditionalForm], PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        1548., -189.86004134396768`}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               PointSize[Medium]], 
              
              PointBox[{{9.024492605405669, 1.}, {8.412499120301572, 2.}, {
               8.155936337972394, 8.}, {7.341483852363161, 3.}, {
               8.013012110368916, 11.}, {8.00836557031292, 9.}, {
               9.99337395933065, 17.}, {7.884952945759814, 14.}, {
               7.110696122978827, 6.}, {7.747164966520335, 13.}, {
               7.607878073278507, 10.}, {8.001689978099135, 5.}, {
               8.097730573664219, 4.}, {7.144407180321139, 12.}, {
               6.3561076606958915`, 15.}, {6.210600077024653, 7.}, {
               2.1972245773362196`, 16.}}]}, {}}, {{
              StyleBox[{
                PointBox[{{9.024492605405669, 1.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.412499120301572, 2.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.155936337972394, 8.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.341483852363161, 3.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.013012110368916, 11.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.00836557031292, 9.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{9.99337395933065, 17.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.884952945759814, 14.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.110696122978827, 6.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.747164966520335, 13.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.607878073278507, 10.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.001689978099135, 5.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.097730573664219, 4.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.144407180321139, 12.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{6.3561076606958915`, 15.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{6.210600077024653, 7.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{2.1972245773362196`, 16.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0., 0.6, 0.04]]}, StripOnInput -> 
               False]}}}, {}, {}, {}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {2.7189910335128915`, 0}, 
          PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {2.7189910335128915`, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_oct_bim\"", 
             StringForm["specific_oct_bim"], Editable -> False], 
            TraditionalForm], PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        309.6, -569.5801240319031}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               PointSize[Medium]], 
              
              PointBox[{{9.06496771896043, 1.}, {8.415824697027949, 2.}, {
               8.146419323098003, 8.}, {10.026324462495191`, 17.}, {
               7.9676267393338165`, 11.}, {7.234898420314831, 6.}, {
               7.903226808730733, 13.}, {7.8928255262511176`, 9.}, {
               7.871692664323645, 14.}, {7.132497551660044, 3.}, {
               7.771488760117616, 10.}, {8.001019961323651, 5.}, {
               7.554858521040676, 12.}, {8.134467570277563, 4.}, {
               6.661854740545311, 15.}, {6.343880434126331, 7.}, {
               2.5649493574615367`, 16.}}]}, {}}, {{
              StyleBox[{
                PointBox[{{9.06496771896043, 1.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.415824697027949, 2.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.146419323098003, 8.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{10.026324462495191`, 17.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.9676267393338165`, 11.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.234898420314831, 6.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.903226808730733, 13.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.8928255262511176`, 9.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.871692664323645, 14.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.132497551660044, 3.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.771488760117616, 10.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.001019961323651, 5.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.554858521040676, 12.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.134467570277563, 4.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{6.661854740545311, 15.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{6.343880434126331, 7.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{2.5649493574615367`, 16.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.64, 0.09809664422436004, 0.7443255369657586]]}, 
               StripOnInput -> False]}}}, {}, {}, {}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {2.7189910335128915`, 0}, 
          PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {2.7189910335128915`, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_squid\"", 
             StringForm["specific_squid"], Editable -> False], 
            TraditionalForm], PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        928.8000000000002, -569.5801240319031}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], 
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               PointSize[Medium]], 
              
              PointBox[{{9.45108805723875, 1.}, {8.834919385216395, 2.}, {
               8.555836815008442, 8.}, {8.445052513638554, 11.}, {
               10.430225894762168`, 17.}, {8.414274137408396, 9.}, {
               7.7057128238944275`, 3.}, {8.351610750626559, 14.}, {
               7.585788821732034, 6.}, {8.213923595622743, 13.}, {
               8.03365842788615, 10.}, {8.426173793029069, 5.}, {
               8.537191877922927, 4.}, {7.734996194022781, 12.}, {
               6.870053411798126, 15.}, {6.642486801367256, 7.}, {
               2.70805020110221, 16.}}]}, {}}, {{
              StyleBox[{
                PointBox[{{9.45108805723875, 1.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.834919385216395, 2.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.555836815008442, 8.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.445052513638554, 11.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{10.430225894762168`, 17.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.414274137408396, 9.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.7057128238944275`, 3.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.351610750626559, 14.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.585788821732034, 6.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.213923595622743, 13.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.03365842788615, 10.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.426173793029069, 5.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{8.537191877922927, 4.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{7.734996194022781, 12.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{6.870053411798126, 15.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{6.642486801367256, 7.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> False]}, {
              StyleBox[{
                PointBox[{{2.70805020110221, 16.}}]}, {
                Directive[
                 AbsoluteThickness[1.6], 
                 PointSize[Medium], 
                 RGBColor[0.34, 0.78, 1]]}, StripOnInput -> 
               False]}}}, {}, {}, {}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {None, None}, 
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {2.7189910335128915`, 0}, 
          PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {2.7189910335128915`, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Exp[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> FormBox[
            InterpretationBox["\"specific_oct_vul\"", 
             StringForm["specific_oct_vul"], Editable -> False], 
            TraditionalForm], PlotRange -> NCache[{{
              Log[
               Rational[1875, 128]], 
              Log[15000]}, {0, 17.}}, {{2.6843336744848942`, 
             9.615805480084347}, {0, 17.}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], {{1, 
              FormBox["\"KR\"", TraditionalForm]}, {2, 
              FormBox["\"SG\"", TraditionalForm]}, {3, 
              FormBox["\"IM\"", TraditionalForm]}, {4, 
              FormBox["\"TA\"", TraditionalForm]}, {5, 
              FormBox["\"IV\"", TraditionalForm]}, {6, 
              FormBox["\"MV\"", TraditionalForm]}, {7, 
              FormBox["\"HR\"", TraditionalForm]}, {8, 
              FormBox["\"NS\"", TraditionalForm]}, {9, 
              FormBox["\"ND\"", TraditionalForm]}, {10, 
              FormBox["\"QR\"", TraditionalForm]}, {11, 
              FormBox["\"KE\"", TraditionalForm]}, {12, 
              FormBox["\"EG\"", TraditionalForm]}, {13, 
              FormBox["\"RG\"", TraditionalForm]}, {14, 
              FormBox["\"YC\"", TraditionalForm]}, {15, 
              FormBox["\"DG\"", TraditionalForm]}, {16, 
              FormBox["\"stop-W\"", TraditionalForm]}, {17, 
              FormBox["\"syn\"", TraditionalForm]}}}}], {
        1548., -569.5801240319031}, 
        ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}}, {
      Directive[Antialiasing -> False], {}, {{
        LineBox[{{0, 0}, {0, -379.72008268793536`}}]}, {
        LineBox[{{0, -379.72008268793536`}, {0, -759.4401653758707}}]}, {
        LineBox[{{619.2, 0}, {619.2, -379.72008268793536`}}]}, {
        LineBox[{{619.2, -379.72008268793536`}, {
         619.2, -759.4401653758707}}]}, {
        LineBox[{{1238.4, 0}, {1238.4, -379.72008268793536`}}]}, {
        LineBox[{{1238.4, -379.72008268793536`}, {
         1238.4, -759.4401653758707}}]}, {
        LineBox[{{1857.6000000000001`, 0}, {
          1857.6000000000001`, -379.72008268793536`}}]}, {
        LineBox[{{1857.6000000000001`, -379.72008268793536`}, {
         1857.6000000000001`, -759.4401653758707}}]}, {
        LineBox[{{0, 0}, {619.2, 0}}]}, {
        LineBox[{{619.2, 0}, {1238.4, 0}}]}, {
        LineBox[{{1238.4, 0}, {1857.6000000000001`, 0}}]}, {
        LineBox[{{0, -379.72008268793536`}, {619.2, -379.72008268793536`}}]}, {
        LineBox[{{619.2, -379.72008268793536`}, {
         1238.4, -379.72008268793536`}}]}, {
        LineBox[{{1238.4, -379.72008268793536`}, {
         1857.6000000000001`, -379.72008268793536`}}]}, {
        LineBox[{{0, -759.4401653758707}, {619.2, -759.4401653758707}}]}, {
        LineBox[{{619.2, -759.4401653758707}, {
         1238.4, -759.4401653758707}}]}, {
        LineBox[{{1238.4, -759.4401653758707}, {
         1857.6000000000001`, -759.4401653758707}}]}}}}, ImageSize -> Full, 
    PlotRangePadding -> {6, 5}, ContentSelectable -> True, ImageSize -> Full],
   StyleBox["\"Changes\"", Bold, StripOnInput -> False],StyleBox[
   "\"Edits\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[229]=",ExpressionUUID->"b5fe8ca8-57e4-4f25-8031-a9240dd77a56"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Frequencies in different species", "Subsubsection",ExpressionUUID->"75a23c89-3c0b-4141-9728-8c294dbbfc9b"],

Cell["\<\
How are the distribution different/similar between different species?\
\>", "Text",ExpressionUUID->"b703d608-6d9c-49e5-9ca4-f2ef23ffdb78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rulesColorsAmino", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<KR\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.010563313554859288`, 0.842598209242611, 0.28387676305890275`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.007042209036572859, 0.5617321394950741, 0.18925117537260183`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.010563313554859288`", ",", "0.842598209242611`", ",", 
               "0.28387676305890275`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.010563313554859288`, 0.842598209242611, 0.28387676305890275`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.010563313554859288`, 0.842598209242611, 0.28387676305890275`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<SG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.18635688096651823`, 0.3224290263670765, 0.2859539040028191],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.27953532144977733`", ",", "0.4836435395506147`", ",", 
               "0.42893085600422864`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<IM\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.366965033412802, 0.09179214474236168, 0.06944724310909416],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.550447550119203`", ",", "0.1376882171135425`", ",", 
               "0.10417086466364123`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.550447550119203, 0.1376882171135425, 0.10417086466364123`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.550447550119203, 0.1376882171135425, 0.10417086466364123`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<TA\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3338264776165977, 0.5226988244157552, 0.4697312374111381],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5007397164248966`", ",", "0.7840482366236328`", ",", 
               "0.7045968561167071`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5007397164248966, 0.7840482366236328, 0.7045968561167071]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5007397164248966, 0.7840482366236328, 0.7045968561167071],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<IV\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1382031698600376, 0.06511078869478142, 0.5267166780293697],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.2073047547900564`", ",", "0.09766618304217212`", ",", 
               "0.7900750170440545`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2073047547900564, 0.09766618304217212, 0.7900750170440545]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.2073047547900564, 0.09766618304217212, 0.7900750170440545],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<syn\>\"", "\[Rule]", " ", "Black"}], ",", 
      RowBox[{"\"\<MV\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.491241834453361, 0.6569873685929809, 0.11251071343904404`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7368627516800415`", ",", "0.9854810528894713`", ",", 
               "0.16876607015856604`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7368627516800415, 0.9854810528894713, 0.16876607015856604`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<HR\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4171657502429042, 0.12388898401688739`, 0.05546062254821823],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.6257486253643563`", ",", "0.18583347602533107`", ",", 
               "0.08319093382232734`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.6257486253643563, 0.18583347602533107`, 0.08319093382232734],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<NS\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6413031829165032, 0.3827441860362894, 0.12658819586771902`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9619547743747547`", ",", "0.5741162790544341`", ",", 
               "0.1898822938015785`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9619547743747547, 0.5741162790544341, 0.1898822938015785]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9619547743747547, 0.5741162790544341, 0.1898822938015785],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<ND\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.18578759068160194`, 0.5630940905675623, 0.3788541431764876],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.2786813860224029`", ",", "0.8446411358513435`", ",", 
               "0.5682812147647314`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2786813860224029, 0.8446411358513435, 0.5682812147647314]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.2786813860224029, 0.8446411358513435, 0.5682812147647314],
        Editable->False,
        Selectable->False]}], ",", "\n", 
      RowBox[{"\"\<QR\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.47745187012305124`, 0.4719413373193821, 0.5698362673588642],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7161778051845769`", ",", "0.7079120059790731`", ",", 
               "0.8547544010382961`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7161778051845769, 0.7079120059790731, 0.8547544010382961]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7161778051845769, 0.7079120059790731, 0.8547544010382961],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<KE\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6136465327512035, 0.008313512355942947, 0.3923650721640207],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9204697991268052`", ",", "0.01247026853391442`", ",", 
               "0.588547608246031`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9204697991268052, 0.01247026853391442, 0.588547608246031]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9204697991268052, 0.01247026853391442, 0.588547608246031],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<EG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3662735949793764, 0.18919067467597817`, 0.6236281218709374],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5494103924690645`", ",", "0.28378601201396725`", ",", 
               "0.9354421828064061`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5494103924690645, 0.28378601201396725`, 0.9354421828064061],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<RG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.46930287876834764`, 0.3110075035776889, 0.6554234951573257],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7039543181525214`", ",", "0.4665112553665334`", ",", 
               "0.9831352427359885`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7039543181525214, 0.4665112553665334, 0.9831352427359885]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7039543181525214, 0.4665112553665334, 0.9831352427359885],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<YC\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3457297625530133, 0.2615915274273023, 0.13892562021358432`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5185946438295199`", ",", "0.3923872911409534`", ",", 
               "0.20838843032037646`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5185946438295199, 0.3923872911409534, 0.20838843032037646`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<DG\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6434952799047426, 0.4395167617268121, 0.03472350407165159],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.965242919857114`", ",", "0.6592751425902181`", ",", 
               "0.052085256107477385`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.965242919857114, 0.6592751425902181, 0.052085256107477385`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.965242919857114, 0.6592751425902181, 0.052085256107477385`],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"\"\<stop-W\>\"", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33563795010534647`, 0.06539776281624003, 0.4962170246438391],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{
              "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
               "0.7443255369657586`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5034569251580197, 0.09809664422436004, 0.7443255369657586]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5034569251580197, 0.09809664422436004, 0.7443255369657586],
        Editable->False,
        Selectable->False]}]}], "}"}]}], ";"}], " "}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.755112610096793*^9},
 CellLabel->
  "In[242]:=",ExpressionUUID->"f60909b6-d71c-4512-a5b0-8da3e6b8d295"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rulesTicksSpecies", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[Rule]", 
         RowBox[{"First", "[", "#2", "]"}]}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<human\>\"", ",", "\"\<specific_sepia\>\"", ",", 
         "\"\<conserved_cephalopods\>\"", ",", "\n", 
         "\"\<specific_oct_bim\>\"", ",", "\"\<specific_squid\>\"", ",", 
         "\"\<specific_oct_vul\>\""}], "}"}]}], "]"}], ",", 
     "rulesColorsAmino"}], "]"}]}], ";"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.755112610097073*^9},
 CellLabel->
  "In[250]:=",ExpressionUUID->"fdbde4af-ceb5-465b-92c0-0241cf098313"],

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#2", ",", "#1"}], "}"}], ",", "#3"}], "]"}], "&"}], ",", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Values", "[", 
          RowBox[{"Normal", "[", 
           RowBox[{"data", "[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Species\>\"", ",", "\"\<Frequency\>\"", ",", 
               "\"\<Change\>\""}], "}"}]}], "]"}], "]"}], "]"}]}], "/.", 
        "rulesTicksSpecies"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Values", "[", "rulesTicksSpecies", "]"}], ",", 
           RowBox[{"Keys", "[", "rulesTicksSpecies", "]"}]}], "}"}]}]}], 
       "}"}]}], ",", " ", "\n", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", 
     RowBox[{"PlotLegends", "\[Rule]", "legendAmino"}], ",", "\n", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "0.012", "]"}]}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Species\>\"", ",", "Bold"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Frequency\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Left", ",", " ", "Bottom"}], "}"}], ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.755112610097217*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"e1a43cf5-ff5d-4ca4-bc08-6931a13884a2"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           PointSize[0.012]], 
          PointBox[CompressedData["
1:eJx10g1MzGEcB/D/MZSo6GYkJrpmySUvWU7616SUSlSjeS2RnJAjyvXqnJaX
5n+66tJdr3fXXTnnpUiKZvS6NG67vC0vpeamy5I58pJ8b9r6bc+effbs+T6/
59ljG35oU+Q4giAif48/M2VIMIx3e+BODFef++G39H4f09twaajHpOplOXDt
Rfvq/vQqeIJ7RjCtVgX7frQxkBcFsGescuWLDhEcEeWZ0qmpgCus+vPOapWw
8/WV3qauN+H5cT8fsJk18A/iiFdzlxq+9JzLnBOtGrW/BG4LECkeLhLDnHfH
xX78aNg08+gim9j7IyZI+RR5/ZlEFXxhrzaomK6ERZmqoCe3ymAabxmD6y+F
2UzznCrNMzi69qYVw9a4fjDlx2SFuRDOmje320ReBDuzOuwS11Ew37Um/IS6
AB5icMJ2e8jgiU+zsl11IvhNISd7JmXsT222n5a9igd/FnQsHnRNhScszBeq
gh1hf94dcold04hNSL8pfd5N5ZVwveHK0tJT5fCnHYu/dgmVcBJF7uQzjPZh
bEiLas2FO2sqyw6whHCY7vt45vlieAZPvMTCpQhut/Hc3veqAI66EBsk75HD
3HiHqxW65lH95MFnNp5riJEZ8xoa3lcfYPHh+NAF7TGyNPhErlVAt3AbLLF2
emk38d//sCRZrwPPC2PU8Mkee2cTpRLOzRku+Fti9F0OJRvTe4dLA8/+c1xK
CZxAr/DujBfAGexug1xfCH+X69v9wyVj5qd77HrfNl8xZt7f+6SOykuGif/K
kiyMyP2aTv/3HnTS/dWH22u012Dx5fqp69cq4N5B7TNxiAYm98Xp4lpK4e1k
JE/XexlOLk4Whe8ugR9Zn6LVLTQ6dNLRlvjKYjiQyuS2PKbgkC6tvrWmEF63
nm9yjZLC/T8/DUqZ+bCbTPQlTF8GKxNn+Q7cOgtLm+cmFRhS4Dp5xAKunwN8
P0bGna6pG/FMckUjRzDAVMMzSEngvVQFTNxg05wkMrhtnJfl1P0a+Nhdp02z
O6Xwjohv7TlpQrjVt9Gr6WApzK6tpG98LoCr7mUNsjKK4Lxph5v0QRKYPNk8
5ONgPJ8yixoqIYz9We9zWZ3gkg0vt97qZLHnNOzIz5ue75YM22zJojVutoN/
AfEMr30=
           "]]}, {}}, {{
          StyleBox[{
            PointBox[{{0.142487047, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.010563313554859288`, 0.842598209242611, 
              0.28387676305890275`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.097797927, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.27953532144977733`, 0.4836435395506147, 
              0.42893085600422864`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.024611399, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.095854922, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.065414508, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02007772, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.027202073, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]]},
            StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.060233161, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.05634715, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.082901554, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.113989637, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.073834197, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.064119171, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.041450777, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.030440415, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.003238342, 1.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.136294862, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.010563313554859288`, 0.842598209242611, 
              0.28387676305890275`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.06443064, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.27953532144977733`, 0.4836435395506147, 
              0.42893085600422864`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.054844985, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052176038, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.045513068, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.341230535, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             GrayLevel[0]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04517475, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022516892, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038399008, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.018823596, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.034564745, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.047373812, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.027272129, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.051903504, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.010365665, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008899623, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]]},
            StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000216147, 2.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.212041885, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.010563313554859288`, 0.842598209242611, 
              0.28387676305890275`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.092495637, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.27953532144977733`, 0.4836435395506147, 
              0.42893085600422864`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.057591623, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.055846422, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.054973822, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02617801, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022687609, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.040139616, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.037521815, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.034904014, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.05061082, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.22600349, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             GrayLevel[0]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.027923211, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038394415, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.011343805, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]]},
            StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009598604, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.001745201, 3.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.133, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.010563313554859288`, 0.842598209242611, 
              0.28387676305890275`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.072, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.27953532144977733`, 0.4836435395506147, 
              0.42893085600422864`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.056, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.025, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.35, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             GrayLevel[0]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.042, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.037, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.032, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008, 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]]},
            StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0., 4.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.133439299, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.010563313554859288`, 0.842598209242611, 
              0.28387676305890275`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.069721146, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.27953532144977733`, 0.4836435395506147, 
              0.42893085600422864`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053255351, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.348976096, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             GrayLevel[0]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04453635, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.021403991, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.041758615, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.041326523, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.040462339, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.019320689, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.036604373, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.046048672, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.029474854, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052622645, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.012067715, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.008780729, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]]},
            StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000200614, 5.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.131532966, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.010563313554859288`, 0.842598209242611, 
              0.28387676305890275`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.071029042, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.27953532144977733`, 0.4836435395506147, 
              0.42893085600422864`]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.053731868, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9619547743747547, 0.5741162790544341, 0.1898822938015785]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.048097104, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.9204697991268052, 0.01247026853391442, 0.588547608246031]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.350161806, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             GrayLevel[0]]}, StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.046639303, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2786813860224029, 0.8446411358513435, 0.5682812147647314]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.022962955, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.550447550119203, 0.1376882171135425, 0.10417086466364123`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.043806412, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.020367862, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.038171648, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7039543181525214, 0.4665112553665334, 0.9831352427359885]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.031875187, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.7161778051845769, 0.7079120059790731, 0.8547544010382961]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.04719761, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.2073047547900564, 0.09766618304217212, 0.7900750170440545]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.052739322, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5007397164248966, 0.7840482366236328, 0.7045968561167071]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.02364533, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.009956473, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.965242919857114, 0.6592751425902181, 0.052085256107477385`]]}, 
           StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.007930026, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]]},
            StripOnInput -> False]}, {
          StyleBox[{
            PointBox[{{0.000155085, 6.}}]}, {
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[0.012], 
             RGBColor[
             0.5034569251580197, 0.09809664422436004, 0.7443255369657586]]}, 
           StripOnInput -> False]}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.15101896649999996`}, {0, 6.}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 0.15101896649999996`}, {0, 6.}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, {{1, 
           FormBox["\"human\"", TraditionalForm]}, {2, 
           FormBox["\"specific_sepia\"", TraditionalForm]}, {3, 
           FormBox["\"conserved_cephalopods\"", TraditionalForm]}, {4, 
           FormBox["\"specific_oct_bim\"", TraditionalForm]}, {5, 
           FormBox["\"specific_squid\"", TraditionalForm]}, {6, 
           FormBox["\"specific_oct_vul\"", TraditionalForm]}, {
           RGBColor[
           0.010563313554859288`, 0.842598209242611, 0.28387676305890275`], 
           FormBox["\"KR\"", TraditionalForm]}, {
           RGBColor[
           0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`], 
           FormBox["\"SG\"", TraditionalForm]}, {
           RGBColor[
           0.550447550119203, 0.1376882171135425, 0.10417086466364123`], 
           FormBox["\"IM\"", TraditionalForm]}, {
           RGBColor[
           0.5007397164248966, 0.7840482366236328, 0.7045968561167071], 
           FormBox["\"TA\"", TraditionalForm]}, {
           RGBColor[
           0.2073047547900564, 0.09766618304217212, 0.7900750170440545], 
           FormBox["\"IV\"", TraditionalForm]}, {
           GrayLevel[0], 
           FormBox["\"syn\"", TraditionalForm]}, {
           RGBColor[
           0.7368627516800415, 0.9854810528894713, 0.16876607015856604`], 
           FormBox["\"MV\"", TraditionalForm]}, {
           RGBColor[
           0.6257486253643563, 0.18583347602533107`, 0.08319093382232734], 
           FormBox["\"HR\"", TraditionalForm]}, {
           RGBColor[
           0.9619547743747547, 0.5741162790544341, 0.1898822938015785], 
           FormBox["\"NS\"", TraditionalForm]}, {
           RGBColor[
           0.2786813860224029, 0.8446411358513435, 0.5682812147647314], 
           FormBox["\"ND\"", TraditionalForm]}, {
           RGBColor[
           0.7161778051845769, 0.7079120059790731, 0.8547544010382961], 
           FormBox["\"QR\"", TraditionalForm]}, {
           RGBColor[
           0.9204697991268052, 0.01247026853391442, 0.588547608246031], 
           FormBox["\"KE\"", TraditionalForm]}, {
           RGBColor[
           0.5494103924690645, 0.28378601201396725`, 0.9354421828064061], 
           FormBox["\"EG\"", TraditionalForm]}, {
           RGBColor[
           0.7039543181525214, 0.4665112553665334, 0.9831352427359885], 
           FormBox["\"RG\"", TraditionalForm]}, {
           RGBColor[
           0.5185946438295199, 0.3923872911409534, 0.20838843032037646`], 
           FormBox["\"YC\"", TraditionalForm]}, {
           RGBColor[
           0.965242919857114, 0.6592751425902181, 0.052085256107477385`], 
           FormBox["\"DG\"", TraditionalForm]}, {
           RGBColor[
           0.5034569251580197, 0.09809664422436004, 0.7443255369657586], 
           FormBox["\"stop-W\"", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"KR\"", "\"SG\"", "\"IM\"", "\"TA\"", "\"IV\"", "\"syn\"", "\"MV\"",
          "\"HR\"", "\"NS\"", "\"ND\"", "\"QR\"", "\"KE\"", "\"EG\"", 
         "\"RG\"", "\"YC\"", "\"DG\"", "\"stop-W\""}, "SwatchLegend", 
        DisplayFunction -> (FormBox[
          FrameBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"Aminoacids changes\"", {FontFamily -> "Arial"}, 
                   Background -> Automatic, StripOnInput -> False]}, {
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], RoundingRadius -> 5, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.007042209036572859, 0.5617321394950741, 
                    0.18925117537260183`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.010563313554859288`", ",", "0.842598209242611`", ",", 
                    "0.28387676305890275`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.010563313554859288`, 0.842598209242611, 
                    0.28387676305890275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.010563313554859288`, 0.842598209242611, 
                   0.28387676305890275`], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18635688096651823`, 0.3224290263670765, 
                    0.2859539040028191], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27953532144977733`", ",", "0.4836435395506147`", ",", 
                    "0.42893085600422864`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27953532144977733`, 0.4836435395506147, 
                    0.42893085600422864`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.27953532144977733`, 0.4836435395506147, 
                   0.42893085600422864`], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.366965033412802, 0.09179214474236168, 
                    0.06944724310909416], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.550447550119203`", ",", "0.1376882171135425`", ",", 
                    "0.10417086466364123`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.550447550119203, 0.1376882171135425, 
                    0.10417086466364123`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.550447550119203, 0.1376882171135425, 
                   0.10417086466364123`], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3338264776165977, 0.5226988244157552, 
                    0.4697312374111381], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5007397164248966`", ",", "0.7840482366236328`", ",", 
                    "0.7045968561167071`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5007397164248966, 0.7840482366236328, 
                    0.7045968561167071]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.5007397164248966, 0.7840482366236328, 0.7045968561167071],
                   Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1382031698600376, 0.06511078869478142, 
                    0.5267166780293697], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2073047547900564`", ",", "0.09766618304217212`", ",", 
                    "0.7900750170440545`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2073047547900564, 0.09766618304217212, 
                    0.7900750170440545]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.2073047547900564, 0.09766618304217212, 
                   0.7900750170440545], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.491241834453361, 0.6569873685929809, 
                    0.11251071343904404`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.7368627516800415`", ",", "0.9854810528894713`", ",", 
                    "0.16876607015856604`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7368627516800415, 0.9854810528894713, 
                    0.16876607015856604`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.7368627516800415, 0.9854810528894713, 
                   0.16876607015856604`], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4171657502429042, 0.12388898401688739`, 
                    0.05546062254821823], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6257486253643563`", ",", "0.18583347602533107`", ",", 
                    "0.08319093382232734`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6257486253643563, 0.18583347602533107`, 
                    0.08319093382232734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.6257486253643563, 0.18583347602533107`, 
                   0.08319093382232734], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6413031829165032, 0.3827441860362894, 
                    0.12658819586771902`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9619547743747547`", ",", "0.5741162790544341`", ",", 
                    "0.1898822938015785`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9619547743747547, 0.5741162790544341, 
                    0.1898822938015785]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.9619547743747547, 0.5741162790544341, 0.1898822938015785],
                   Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18578759068160194`, 0.5630940905675623, 
                    0.3788541431764876], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2786813860224029`", ",", "0.8446411358513435`", ",", 
                    "0.5682812147647314`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2786813860224029, 0.8446411358513435, 
                    0.5682812147647314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.2786813860224029, 0.8446411358513435, 0.5682812147647314],
                   Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47745187012305124`, 0.4719413373193821, 
                    0.5698362673588642], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7161778051845769`", ",", "0.7079120059790731`", ",", 
                    "0.8547544010382961`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7161778051845769, 0.7079120059790731, 
                    0.8547544010382961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.7161778051845769, 0.7079120059790731, 0.8547544010382961],
                   Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6136465327512035, 0.008313512355942947, 
                    0.3923650721640207], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9204697991268052`", ",", "0.01247026853391442`", ",", 
                    "0.588547608246031`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9204697991268052, 0.01247026853391442, 
                    0.588547608246031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.9204697991268052, 0.01247026853391442, 0.588547608246031],
                   Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3662735949793764, 0.18919067467597817`, 
                    0.6236281218709374], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5494103924690645`", ",", "0.28378601201396725`", ",", 
                    "0.9354421828064061`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5494103924690645, 0.28378601201396725`, 
                    0.9354421828064061]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.5494103924690645, 0.28378601201396725`, 
                   0.9354421828064061], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46930287876834764`, 0.3110075035776889, 
                    0.6554234951573257], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7039543181525214`", ",", "0.4665112553665334`", ",", 
                    "0.9831352427359885`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7039543181525214, 0.4665112553665334, 
                    0.9831352427359885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.7039543181525214, 0.4665112553665334, 0.9831352427359885],
                   Editable -> False, Selectable -> False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3457297625530133, 0.2615915274273023, 
                    0.13892562021358432`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5185946438295199`", ",", "0.3923872911409534`", ",", 
                    "0.20838843032037646`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5185946438295199, 0.3923872911409534, 
                    0.20838843032037646`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.5185946438295199, 0.3923872911409534, 
                   0.20838843032037646`], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6434952799047426, 0.4395167617268121, 
                    0.03472350407165159], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.965242919857114`", ",", "0.6592751425902181`", ",", 
                    "0.052085256107477385`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.965242919857114, 0.6592751425902181, 
                    0.052085256107477385`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.965242919857114, 0.6592751425902181, 
                   0.052085256107477385`], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33563795010534647`, 0.06539776281624003, 
                    0.4962170246438391], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5034569251580197`", ",", "0.09809664422436004`", ",", 
                    "0.7443255369657586`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5034569251580197, 0.09809664422436004, 
                    0.7443255369657586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.5034569251580197, 0.09809664422436004, 
                   0.7443255369657586], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                 ",", #13, ",", #14, ",", #15, ",", #16, ",", #17}], "}"}], 
             ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", 
               RowBox[{"(", 
                 RowBox[{
                   FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False],
                    "&"}], ")"}]}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"Aminoacids changes\""}], 
             ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   StyleBox["\"Species\"", Bold, StripOnInput -> False],StyleBox[
   "\"Frequency\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#2, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.755112610097357*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"9512b36b-2add-4cae-a789-2048a7b3028a"]
}, {4}]],

Cell["\t", "Text",ExpressionUUID->"1c5660bd-c5a8-4d0f-b729-30b34f60828a"],

Cell["\<\
First, we notice that KR and synonymous are conserved. We can observe that \
they have higher frequency in cephalopod species which means that the ratio \
of radical to conserved in cephalopod species is less than this ratio in \
humans and conserved_cephalopods. Which is exactly the difference in ratios \
of radical to conserved in all the species from the research.\
\>", "Text",ExpressionUUID->"b908b622-41d7-4717-9f3a-41071d6369b4"],

Cell[TextData[StyleBox["Ratio of radical to conserved:  ", "Code",
 FontWeight->"Plain"]], "CodeText",ExpressionUUID->"f7431ea0-d863-4838-8346-\
448cffe3b092"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"radcon", "=", 
  RowBox[{"Dataset", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List",TagBox["List", "IconizedNameLight"],GridBox[{{
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["6", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["1872", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {
     Association["Average" -> "squid", "R/C" -> "0.57"], 
     Association["Average" -> "sepia", "R/C" -> "0.59"], 
     Association["Average" -> "oct_bim", "R/C" -> "0.55"], 
     Association["Average" -> "oct_vul", "R/C" -> "0.56"], 
     Association["Average" -> "conserved", "R/C" -> "0.53"], 
     Association["Average" -> "human", "R/C" -> "0.78"]},
    SelectWithContents->True,
    Selectable->False], "]"}]}]], "Code",
 CellChangeTimes->{{3.739793894608924*^9, 3.7397939543356943`*^9}, {
   3.7397940594979553`*^9, 3.7397941967165728`*^9}, {3.739794231847679*^9, 
   3.739794246764681*^9}, 
   3.74146352446732*^9},ExpressionUUID->"c89c6eb6-66a5-42ba-9fdd-\
a6ee5cecfcfc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 6, "Length" -> 6, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Average", "R/C"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 6], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "Average"} -> 1, {All, "R/C"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Average" -> TypeSystem`PackageScope`AtomShape[86.4], "R/C" -> 
              TypeSystem`PackageScope`AtomShape[38.400000000000006`]]]], 
           6, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1616325353], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Average", "R/C"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 6], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1616325353]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Average\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Average\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1979080650][{All, "Average"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[All, "Average"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"R/C\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"R/C\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1979080650][{All, "R/C"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[All, "R/C"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["squid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[1, 
                   Key["Average"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.57", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[1, 
                   Key["R/C"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[2, 
                   Key["Average"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.59", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[2, 
                   Key["R/C"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["oct_bim", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[3, 
                   Key["Average"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.55", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[3, 
                   Key["R/C"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["oct_vul", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[4, 
                   Key["Average"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.56", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[4, 
                   Key["R/C"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["conserved", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[5, 
                   Key["Average"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.53", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[5, 
                   Key["R/C"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[6, 
                   Key["Average"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.78", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
                  GeneralUtilities`Slice[6, 
                   Key["R/C"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1979080650][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1979080650]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1979080650][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {146., {92.134033203125, 97.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.739794247356516*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"708a031d-9732-43fb-8289-8a2e82a83930"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further explorations", "Section",ExpressionUUID->"9da19663-7179-45c9-8160-ad35832309c2"],

Cell[TextData[{
 "Trade-off between Transcriptome Plasticity and Genome Evolution in \
Cephalopods, Cell ",
 StyleBox["169",
  FontWeight->"Bold"],
 ", 191\[Dash]202 (2017)."
}], "Text",ExpressionUUID->"45c45f6e-321c-4ce7-9657-950c1134d308"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author contact information", "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],

Cell["zhamilya.bilyalova@prismsus.org", "Text",ExpressionUUID->"1fee1280-53c6-4307-aa00-579c0a0de28f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1341, 855},
WindowMargins->{{Automatic, 27}, {Automatic, 0}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], PageWidth -> WindowWidth, ShowCellBracket -> False, 
    CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellElementSpacings -> {"ClosedGroupTopMargin" -> 150}, 
    CellGroupingRules -> {"TitleGrouping", 0}, PageBreakAbove -> True, 
    CellFrameMargins -> {{20, 50}, {6, 78}}, TextAlignment -> Left, 
    LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
    CounterIncrements -> {"Title"}, 
    CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
      "Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {"Subitem", 0}, {
      "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
      "SubsubitemNumbered", 0}}, MenuSortingValue -> 1100, MenuCommandKey -> 
    "1", FontFamily -> "Source Sans Pro", FontSize -> 44, 
    FontTracking -> -0.8, FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["Abstract"], PageWidth -> WindowWidth, ShowCellBracket -> False,
     ShowSelection -> True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {24, 2}}, TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 16, FontSlant -> "Italic", 
    FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorInfo"], PageWidth -> WindowWidth, 
    CellFrame -> {{0, 0}, {8, 0}}, ShowCellBracket -> True, ShowSelection -> 
    True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {10, 4}}, CellFrameColor -> 
    RGBColor[0.988235, 0.403922, 0.0313725], TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 17, FontWeight -> "SemiBold",
     FontSlant -> "Plain", FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Chapter"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {10, 45}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subchapter", "Backspace" -> 
         "Title", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> "Title"}, 
       CellGroupingRules -> {"SectionGrouping", 10}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Chapter", 
       CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
         "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1150, MenuCommandKey -> "2", FontFamily -> "Source Sans Pro", FontSize -> 
       34, FontTracking -> -0.5, FontColor -> 
       RGBColor[
        0.21176470588235294`, 0.21176470588235294`, 0.21176470588235294`]], 
      Cell[
       StyleData["Chapter", "Presentation"], 
       CellMargins -> {{67, Inherited}, {10, 15}}, LineSpacing -> {1, 16}, 
       FontSize -> 48], 
      Cell[
       StyleData["Chapter", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
       LineSpacing -> {1, 2}, FontSize -> 48], 
      Cell[
       StyleData["Chapter", "Condensed"], CellMargins -> {{18, 10}, {5, 7}}, 
       FontSize -> 14], 
      Cell[
       StyleData["Chapter", "Printout"], 
       CellMargins -> {{10, Inherited}, {10, 15}}], 
      Cell[
       StyleData["Chapter", "PrintoutGray"], 
       CellMargins -> {{10, Inherited}, {10, 15}}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> False, ShowCellBracket -> True, 
       CellMargins -> {{20, 30}, {10, 25}}, Evaluatable -> False, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       CellChangeTimes -> {3.716825484342502*^9}, Hyphenation -> False, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "ItemNumbered", 0}}, AspectRatioFixed -> True, FontFamily -> 
       "Source Sans Pro", FontSize -> 28, FontTracking -> -0.5, FontColor -> 
       RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Section", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "Printout", StyleDefinitions -> None]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {6, 12}}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}, {"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 23, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Subsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowCellBracket -> False, 
       CellMargins -> {{21, 21}, {2, 8}}, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsubsection", CounterAssignments -> {{"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.9254901960784314, 0.49019607843137253`, 0.2]], 
      Cell[
       StyleData["Subsubsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    StyleData["FurtherExplorationSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
    ShowCellBracket -> False, CellMargins -> {{20, 30}, {4, 24}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, 
    CellFrameMargins -> {{0, 0}, {0, 22}}, CellFrameColor -> GrayLevel[0.8], 
    DefaultNewCellStyle -> "FurtherExploration", FontFamily -> 
    "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["FurtherExploration", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorshipSection"], ShowCellBracket -> False, 
    CellMargins -> {{20, Inherited}, {4, 22}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["Authorship", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> 
    RGBColor[0.4392156862745098, 0.4392156862745098, 0.4392156862745098]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], ShowCellBracket -> True, 
          CellMargins -> {{20, 10}, {6, 8}}, ReturnCreatesNewCell -> True, 
          DefaultNewCellStyle -> "Direction", FontSize -> 
          15, $CellContext`DefaultReturnCreatedCellStyle -> "Direction"], 
         Cell[
          StyleData["Text", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "Printout", StyleDefinitions -> None], 
          TextJustification -> 1.]}, Open]], 
      Cell[
       StyleData["CodeText", StyleDefinitions -> StyleData["Text"]], 
       CellMargins -> {{23, 10}, {3, 8}}, CellFrameLabelMargins -> 4, 
       MenuSortingValue -> 10000, MenuCommandKey -> "8", FontSize -> 15, 
       FontWeight -> "Plain", FontColor -> 
       GrayLevel[0.45], $CellContext`DefaultReturnCreatedCellStyle -> 
       "Input"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Input, Output and Graphics", "Section", 
       CellChangeTimes -> {3.7168930720372066`*^9}], 
      Cell[
       StyleData["Input"], CellMargins -> {{82, 10}, {5, 6}}, 
       StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
       AutoNumberFormatting -> False, FontSize -> 13], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{82, 10}, {7, 7}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "Condensed"], 
          CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}], 
         Cell[
          StyleData["InputOnly", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Code", "Condensed"], CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["Code", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Code", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{82, 10}, {10, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{100, 10}, {15, 8}}], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Output", "Condensed"], 
          CellMargins -> {{50, Inherited}, {3, 2}}], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{49, Inherited}, {9, 3}}], 
         Cell[
          StyleData["Output", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {9, 3}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PlacedGraphics"], CellFrame -> False, ShowCellBracket -> 
          False, CellMargins -> {{82, 21}, {8, 10}}, CellGroupingRules -> 
          "GraphicsGrouping", CellHorizontalScrolling -> True, ShowCellLabel -> 
          False, TextAlignment -> Left, LineSpacing -> {1, 1}, 
          InsetBoxOptions -> {
           BaseStyle -> {CellFrame -> None, Background -> None}}], 
         Cell[
          StyleData[
          "PlacedGraphics", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "Printout", StyleDefinitions -> None]]},
         Closed]], 
      Cell[
       StyleData["CellLabel"], LineSpacing -> {1, 1}, AutoNumberFormatting -> 
       False, FontSize -> 9, FontSlant -> "Oblique"]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 131, 0, 141, "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],
Cell[714, 24, 187, 3, 47, "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],
Cell[904, 29, 111, 0, 44, "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],
Cell[CellGroupData[{
Cell[1040, 33, 108, 0, 71, "Section",ExpressionUUID->"fed208f3-5704-4898-81e2-a7b831d0b28a"],
Cell[1151, 35, 451, 6, 57, "Text",ExpressionUUID->"7966c5db-10b8-455f-985c-96961bb670f6"],
Cell[1605, 43, 186, 4, 31, "CodeText",ExpressionUUID->"723c9d9e-b820-43df-a4bd-008182b248fb"],
Cell[CellGroupData[{
Cell[1816, 51, 558, 16, 52, "Code",ExpressionUUID->"f02e312f-652f-4ed7-b8ec-ab33496c74a9"],
Cell[2377, 69, 39691, 852, 295, "Output",ExpressionUUID->"43fb48fc-ec60-4708-be4e-e5c2bf14d347"]
}, Open  ]],
Cell[42083, 924, 325, 5, 57, "Text",ExpressionUUID->"5991366a-5c2f-4e10-beb0-8470bd4bf06f"],
Cell[42411, 931, 237, 3, 34, "Text",ExpressionUUID->"4cb7b510-e17f-47cc-9dbd-82c72dfc83fe"],
Cell[CellGroupData[{
Cell[42673, 938, 517, 12, 61, "Code",ExpressionUUID->"2efab65a-03c3-4064-a772-146cdb95e39d"],
Cell[43193, 952, 216, 4, 32, "Output",ExpressionUUID->"d0ad85e1-68d6-4b8d-a632-d6aaa5704adc"]
}, Open  ]],
Cell[43424, 959, 111, 0, 31, "CodeText",ExpressionUUID->"132d2c22-d0a3-41aa-9e89-8910b6b8f167"],
Cell[43538, 961, 362, 7, 61, "Code",ExpressionUUID->"ef0cef5a-e820-4dcc-80be-10d30c7e6b1f"],
Cell[43903, 970, 152, 2, 34, "Text",ExpressionUUID->"55ac4139-02e0-4599-980a-dc7538769124"],
Cell[CellGroupData[{
Cell[44080, 976, 1176, 27, 129, "Code",ExpressionUUID->"458ba820-325a-4c33-bc24-14bf8a89b87a"],
Cell[45259, 1005, 6417, 145, 591, "Output",ExpressionUUID->"2ffd5abb-8896-4a34-b9da-7a9e74856d74"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51725, 1156, 120, 0, 71, "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],
Cell[51848, 1158, 359, 5, 57, "Text",ExpressionUUID->"65ae3372-3440-4e21-ba0f-ab65baa15046"],
Cell[52210, 1165, 591, 8, 80, "Text",ExpressionUUID->"d1591981-85cd-4756-82fd-f49c33d435d5"],
Cell[CellGroupData[{
Cell[52826, 1177, 81, 0, 48, "Subsection",ExpressionUUID->"69c2789e-757d-42de-8e7a-aa67a7c35b9d"],
Cell[52910, 1179, 423, 10, 52, "Code",ExpressionUUID->"7979d311-061d-491d-ba38-03cf71348bd0"],
Cell[CellGroupData[{
Cell[53358, 1193, 260, 5, 52, "Code",ExpressionUUID->"66758ac8-66ec-46d6-84b1-d412ee794bf0"],
Cell[53621, 1200, 140013, 2813, 703, "Output",ExpressionUUID->"921b9f1b-32a1-4d50-87e5-7e1b1a5a3634"]
}, {2}]],
Cell[193646, 4016, 397, 6, 57, "Text",ExpressionUUID->"d63468b7-e454-4dd6-a6c9-2231339756f4"],
Cell[CellGroupData[{
Cell[194068, 4026, 2243, 41, 60, "Code",ExpressionUUID->"b454897a-69b0-4b54-9e05-2c91e16ad928"],
Cell[196314, 4069, 38017, 770, 483, "Output",ExpressionUUID->"0480a6c5-77fa-41f2-a58b-41d771a64179"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234377, 4845, 88, 0, 48, "Subsection",ExpressionUUID->"461816e4-f49b-44a1-a013-5660517d53ad"],
Cell[234468, 4847, 652, 9, 80, "Text",ExpressionUUID->"a7c49d0a-85c6-4955-86df-ed08b188880a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235169, 4862, 103, 0, 71, "Section",ExpressionUUID->"363992ed-65d6-4a46-9388-9c42d41918e4"],
Cell[CellGroupData[{
Cell[235297, 4866, 146, 3, 57, "Subsubsection",ExpressionUUID->"9459be29-4cf5-41f2-96e9-a8f4c74657c9"],
Cell[CellGroupData[{
Cell[235468, 4873, 35622, 878, 72, "Code",ExpressionUUID->"89d08979-12f3-4c2f-9c78-50efc2d457b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[271093, 5753, 823, 20, 72, "Code",ExpressionUUID->"f7705db8-6123-49c3-a8d9-0920f8dd8b72",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[271919, 5775, 2456, 57, 148, "Code",ExpressionUUID->"6495591e-c276-4b2c-b3f7-1b18b96a7ca5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[274378, 5834, 418222, 8537, 431, "Output",ExpressionUUID->"f7f738b8-a187-4d4a-bae4-a3aecc413208",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, {4}]],
Cell[692612, 14374, 249, 4, 34, "Text",ExpressionUUID->"aa42f1a2-644f-4115-8cf8-1d26ffaa0e4b"],
Cell[CellGroupData[{
Cell[692886, 14382, 118, 1, 41, "WolframAlphaLong",ExpressionUUID->"dff664c5-1e89-4e2c-a474-4708e38748f5"],
Cell[693007, 14385, 35704, 631, 318, "Print",ExpressionUUID->"d66c0e4f-fba9-498b-a707-4a8231a09a43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[728748, 15021, 544, 11, 61, "Code",ExpressionUUID->"f6128f93-30ad-46f7-947f-1a386237fa85"],
Cell[729295, 15034, 25009, 416, 115, "Output",ExpressionUUID->"d9dca569-74b1-4785-8b05-a6c403d48ba1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[754353, 15456, 145, 4, 81, "Subsubsection",ExpressionUUID->"dfedf0e6-f4f5-40ad-aa08-e64823e57432"],
Cell[754501, 15462, 151, 2, 34, "Text",ExpressionUUID->"76ead7ce-925d-4c38-8de9-8d0ca2222a6b"],
Cell[754655, 15466, 192, 5, 34, "Text",ExpressionUUID->"c6fa0419-e412-4b01-8a9b-25783a36d304"],
Cell[754850, 15473, 163, 3, 34, "Text",ExpressionUUID->"e0f6c08c-2ff9-4a39-b2d9-debc852ac8bf"],
Cell[755016, 15478, 106, 0, 34, "Text",ExpressionUUID->"e160525e-037f-4278-9866-d25e0304fb7e"],
Cell[CellGroupData[{
Cell[755147, 15482, 13347, 337, 110, "Code",ExpressionUUID->"3a569cee-d381-486a-9307-73df112c35d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[768497, 15821, 963, 24, 72, "Code",ExpressionUUID->"4e07d666-dc6e-49df-a7fb-8473104aef4e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[769463, 15847, 1863, 48, 129, "Code",ExpressionUUID->"9b7e35f5-7a0f-4241-a0ca-e5348fef0c6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[771329, 15897, 52602, 1207, 384, "Output",ExpressionUUID->"a216680a-3a0e-4bdf-81cc-47eaaedf61ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, {4}]],
Cell[823943, 17107, 81, 0, 28, "Input",ExpressionUUID->"a12667cb-1910-444b-83d8-0d2892686eff"],
Cell[824027, 17109, 319, 5, 80, "Text",ExpressionUUID->"23bcec35-c0bf-482f-a612-9ae88406850a"],
Cell[CellGroupData[{
Cell[824371, 17118, 1810, 47, 129, "Code",ExpressionUUID->"9fe0e80e-33c0-4d23-b929-d5adca72c47e"],
Cell[826184, 17167, 52505, 1205, 384, "Output",ExpressionUUID->"462ac5cd-8807-4ac1-9e87-239cee27e894"]
}, {2}]],
Cell[878701, 18375, 416, 7, 80, "Text",ExpressionUUID->"c842159c-a0dd-4342-9eee-26c8930424de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[879154, 18387, 139, 1, 33, "Subsubsection",ExpressionUUID->"0e9e68ab-c5a4-4cc2-9777-3d370938801c"],
Cell[CellGroupData[{
Cell[879318, 18392, 1758, 46, 129, "Code",ExpressionUUID->"dbc72170-77af-41b6-8e07-8e3acbdf1db5"],
Cell[881079, 18440, 51175, 1188, 380, "Output",ExpressionUUID->"7eef4348-6b94-43b7-b127-9ef2b87d2227"]
}, {2}]],
Cell[932266, 19631, 225, 4, 57, "Text",ExpressionUUID->"359d82da-f182-437b-b3b5-02b6a8b46061"],
Cell[CellGroupData[{
Cell[932516, 19639, 2997, 72, 205, "Code",ExpressionUUID->"eb451716-1e8f-46b2-bdde-ae05a376ebdf"],
Cell[935516, 19713, 48673, 1078, 521, "Output",ExpressionUUID->"39450cd6-ab8a-4ca7-b006-cdc182bf2bd0"]
}, {2}]],
Cell[984201, 20794, 223, 3, 34, "Text",ExpressionUUID->"546a1cf6-3f5c-47d1-b9b7-80da479f1513"],
Cell[CellGroupData[{
Cell[984449, 20801, 3111, 74, 224, "Code",ExpressionUUID->"74ff91dc-c825-4846-b940-134b6df62ba6"],
Cell[987563, 20877, 56056, 1192, 521, "Output",ExpressionUUID->"b5fe8ca8-57e4-4f25-8031-a9240dd77a56"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043665, 22075, 112, 0, 33, "Subsubsection",ExpressionUUID->"75a23c89-3c0b-4141-9728-8c294dbbfc9b"],
Cell[1043780, 22077, 148, 2, 34, "Text",ExpressionUUID->"b703d608-6d9c-49e5-9ca4-f2ef23ffdb78"],
Cell[CellGroupData[{
Cell[1043953, 22083, 35543, 877, 72, "Code",ExpressionUUID->"f60909b6-d71c-4512-a5b0-8da3e6b8d295",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1079499, 22962, 776, 20, 72, "Code",ExpressionUUID->"fdbde4af-ceb5-465b-92c0-0241cf098313",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1080278, 22984, 1889, 48, 167, "Code",ExpressionUUID->"e1a43cf5-ff5d-4ca4-bc08-6931a13884a2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1082170, 23034, 97677, 2168, 338, "Output",ExpressionUUID->"9512b36b-2add-4cae-a789-2048a7b3028a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, {4}]],
Cell[1179859, 25205, 73, 0, 34, "Text",ExpressionUUID->"1c5660bd-c5a8-4d0f-b729-30b34f60828a"],
Cell[1179935, 25207, 448, 6, 57, "Text",ExpressionUUID->"b908b622-41d7-4717-9f3a-41071d6369b4"],
Cell[1180386, 25215, 159, 2, 31, "CodeText",ExpressionUUID->"f7431ea0-d863-4838-8346-448cffe3b092"],
Cell[CellGroupData[{
Cell[1180570, 25221, 1423, 31, 60, "Code",ExpressionUUID->"c89c6eb6-66a5-42ba-9fdd-a6ee5cecfcfc"],
Cell[1181996, 25254, 16200, 307, 207, "Output",ExpressionUUID->"708a031d-9732-43fb-8289-8a2e82a83930"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1198254, 25568, 94, 0, 71, "Section",ExpressionUUID->"9da19663-7179-45c9-8160-ad35832309c2"],
Cell[1198351, 25570, 241, 6, 34, "Text",ExpressionUUID->"45c45f6e-321c-4ce7-9657-950c1134d308"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1198629, 25581, 100, 0, 71, "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],
Cell[1198732, 25583, 102, 0, 34, "Text",ExpressionUUID->"1fee1280-53c6-4307-aa00-579c0a0de28f"]
}, Open  ]]
}, Open  ]]
}
]
*)

