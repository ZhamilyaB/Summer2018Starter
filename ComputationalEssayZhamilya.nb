(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    657076,      12767]
NotebookOptionsPosition[    635609,      12351]
NotebookOutlinePosition[    649059,      12645]
CellTagsIndexPosition[    649016,      12642]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The distribution of amino acid changes in different species", "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],

Cell["One sentence description of topic.", "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],

Cell["Zhamilya Bilyalova, Jun. 24,  2018", "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],

Cell[TextData[{
 "\n\tRNA editing is a process that changes a RNA transcript such that it \
would no longer correspond to a sequence of DNA in a genome. A-to-I RNA \
editing is widespread in animals and results in the modification of a \
adenosine to inosine which will be read as a guanine. A-to-I editing in \
messenger RNA (mRNA) can cause changes in the amino acid sequence of a \
protein (amino acid recoding). It was recently discovered that RNA editing \
and amino acid changes are widespread in cephalopods (octopus and squid). \n\n\
\t(RNA is a copy of one specific part of DNA, but after being created it can \
still be changed in a way that the DNA did not program it. There can be many \
types of changes. We are looking at the one where nucleotide A changes to \
nucleotide G, which changes the codon. Codons (64 combinations in total) are \
codes for specific amino acids. (one amino acids can relate to more than one \
codon). Nucleotides are being changed by enzymes that catalyze the editing.)\n\
\nCodons:          ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXtwnNWVL9rdnkxRplR2pZKCCmUKcpIzcQExzg3hOBSYZEIelQxkiElm
JkOCbZjUBCPZZu7kgbHJi6fBNo8JELCBEMs25pGxJRkyWEL6WjL3JMGQ1A0Y
kLpb578ZEs69/11m+O73W3uvtdfe3epuWbK729q7aqvV3V9/j732Wuu3Hnvt
M1f1XP4PhVwud/1J2Z/LV37nU+vXr/zeVxZmb67ovv4fv9V9zdVf6P6na751
zfr/sWpe9uFr+VzuI9nxf5aLLbbYjld799130+l8fjyu3epr4Vh9fDO/rXcM
fzfT88zG8bHFFltsscXWSe1Y4ZTpnjf8vNnrz5bur3XMdPDFbFz3aDFKxCqx
xRZbbLGdCG02dP/R4IyZYqHZwFLbt29Pb7rppnTTpk11fzMxMZFu3LiRjhsc
HJw1n0qj4+uN19HQI7bYYostttg6pbEug/5dsmQJ/qeez+epX3rppenQ0FBD
LDATnXis9elUun358uXyrPV+f/DgQT6mLpap9xzj4+MetuH2pz/9iT7H61Tn
mk3/UWyxxRZbbLF1SrvssssEl6BfdNFF6emnn651d03dijZbOnEmvpWjuQf8
hvGJ7VXn41f77FPik2auf8YZZ8h19PHf/OY3647vdK8TW2yxxRZbbJ3eoO9e
eukl0b3QlVoHar0MDNNMjGG24hmz2aa6RohPprp+I3zSqPEYA+uF11iwYEHT
+KRei9gltthiiy22E6HV8g3U0pE7duxIn3766arv8D7Q7+lVV11VFadAg05f
uHCh6Gj4ZkI9j/splUop+3LYb8PHap8Gckb4mrheT0+PvMfxuF/9jG+//bZ3
DDABnuviiy+u6T8J74vHCPeEOFg4PuxrQsdz8jHso+Fn0d0+v/es6Igl8T3j
mK6urprPxo1pgFd8x3hnqueJLbbYYosttnZvof8E+Sf2fd2mMQ30IvQo62ir
L6Vx/IK/0zkuFjNQw3VZt+I1PBbYh4+1+l/OgeP1sejIaeXjr7zySsEAOA7x
K/wGul9hg6aeV+Mq/M+/x3PiXhhP8HH4TOMXPBc6cI2+Z76vw4cP0+8Yd+A+
cQ49jhoranyir1OXgLHFFltsscXWAS3wI5BOhB9j69athFfC2AHrQfs7atZv
Qp1tfOsLoL5ly5aqnIucwhGsZ6Hff/vb34r/Qfs9WC9rfAK9jmvjWO2T4OvZ
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
vQAbLmd1GvBJ734XF+fXxWedT9+jU2y1/9WW3vts9E7BJ0QrG8sx/mOjG65d
d0cmN/NGjmYy9LxllxAtv/DlVSRDCaNkn3/hsqssRimJHtnbAfbdiYBP9qhc
IP78jA9+xGITo+/OPOMjksMguUZtcP/NPJ957Ux8wj5i8i8OGL/VY70vpaed
+SGhzftPOY34B/6u887/jKFb3tDuK3//j+nefQ6XwFfJz9kOz9f4+SM+mUut
0/AJy8+vfr3H2t+F9Mabf25kpI0l9Nr5u/isZWkh+76Qy0sMttX3P9PeCfjE
+bLM/fTaOM8ju36dnnRyF8nLk7oWpnfc+6/W32WOx/cf/x+XWPuvkP704UGx
3zshd0/ToFPxic5V2GPzXu97eEiwyZVXbyB8ifeIJej8r86ID3Q2PmEcKDmu
+18lvwjoATl34V9+lfiIvkcsdeCNdPPdT2Z8t4COWXjKIpcThjjRvjckztMO
z9eYfhGfzKXWafiE5SZsg5z1NW+69RdV8t/gk/PlmE7RD416J+AT7pxDwnoO
+UDwm8Dv/I1rvivylWXuE5mOgy6EP+WHP9kleZnsDyN52wbPVa93Oj7huJr4
/jP9hZwTYJI/n99Fx7z3lA8QTxkf16uWzp2BHzsdn3AcxqwBeJ2e533v/4DE
cB7e82uJzZEPDHkp+95MN/24N/3nDf+SPrXP8RL5nFWsp9XP1hz9Ij6ZS60T
8QlkIvK+chZ7/CDDJzqnj/nvrLOXmRhQJlu1bOrk3u74RPQUrxew94V1jRd8
5q/F1/zTDIcIvfaVM3od8XIY8L43k610vn1/EL9Zq5+vUe98fGJ4Z4+y09//
foNHPvXpK+izL/3VavKlnPK+02TdPtOv1fff+Pk6HZ+4+4ff476HX5DYzcV/
eYVZX2VjqjqP1q3fcdjT1GN4o6PqLkR8MrdaJ+ITdOM/gS2eS2/KbG220Z2v
eSJd/NHzJOeyU+IDjXq74xO9HtXIE14D4vuz8B1oAtuu1lodXQ/F9Fc7wkbv
dHzCPiqT73Mkve3eX0oe8+337CM63n7PL03+JWKrtz4u60JAy1bff6Pe6fjk
CbHDXiff1sZbdtnYTo78juATloNYYwW/ycZbf050Qp4e+t07hoTOen1dJ/SI
T+ZW6zR8wnMTMde8tRs23b4z++wPEnNlnjvro58Qe53zM1t97zPtnYBPoNc0
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
yy6iG2hx/T/dQLrrsZ/3pgMDz6Z9fX30eiw76en+50h/Hug7kL7+2omd+wKf
CZ77uut6rK11vPpaIzu7r/euDf6MvX070enadfTak+m97u5uoSfyUlp9f7Gv
JZtuTfd1librDK+tMTil5fc2x/t18n+3yECiTfb/mkwOXmvlYE/POuGr6t/G
3jr6rSc6QW/h/bWWpziOesz1JulK1p1rCaO0GkMcq4ZcELwSPsmeFf4qxvfH
tGf4c/Pdj5NdQD6yjNbbbrs57et9MB2Iva37jRu+T/rvkfu3EL36dt2fvT5k
vt/5UMvvb653oklGj32999P/rOMG7Oetvr+53vf3PmBoset+S6sH0/5f/Iw+
v/uOnxC98Lq/96dp/67s812GbjgmysfW9wM7zStosemG76dr1q5PH3tgi9Dy
mF9/1wN0na2330xzBX4U1ucnWoyHn6evb4Bs383bHj9uOdB4RVwVPkzgTvDr
f1aS2Nu8kwzNMPwfik+n70xkn5WKtifmfRvc49zulh5lQ5vuNT1kZ9FnLb+3
2Jln8OrzTzHTP/cTvZ7t/Zn9fkyOo2PLrb//ud413e65/SfEW69nspC+V7Q8
Zn1iJLvWIWt7rKVYT6jPT5TGa43hPyF8kmGF44NPTC4lcsXuuNvEyIEN35k4
DvSNfUb9ntt/mH77uuvT14pPpu+Mjxh+0XKzDe5xLncjOy0tMrrAvoMP2si1
SJ+Wd6aBpc9/lodNz97vz3AJaGVstWGH90E7/dvY26APkQ8D8bjx5Cmfrse0
j9J8gB8FdiLyUZAzW2tdz4nSpEba3b84LvgE6z3Yh4L8L/Y/g75iU1j7z7Mx
Avxq+Nsd52wMHO9+9874cHAuI8PlvYePx9wxLEPC15LSAyz3w/udLHp6u9a1
OrFvu/3HRK/Xkqfd+Gq/SUk9N8nVgF61xrTEY6fGvqzOJ+M2HBxfY46o+/HG
PLsX73PSC/h+zJsrfM9MT+/6pWTWxvGYdrnfosSq9WfEH/Z5NE+EvMd8UnPe
loMxLgfX1uMXvg/HVeijji37vga51sSI6Gt5L/OlQ/hLP7caX8jANdetM7Kw
1vzTv68nK2ksRh0NGd+wvOQxU3LTjeXM+NfNpzHBXXzPJ4R/VWSFlYVr1qdH
EuU/acAfMs7BmIQyrC5/ZJ9z7Ba6Gzr8RPOd6NZO+MTpjQBPeHpDzxMlR+13
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
4pNGLeKTWcQnUvPS5HI7uTlMsXnY/UO925xMCfywLee/Bv14xHcWdC0gH7TL
IXlRydTArhb5x3ScIT6RmiBGJ8K3nWN53wH0CeXYrOMTb9xNjgL8GN2rrqBj
kSOCY8eH9zgalNh/sqSJ+E7O+KsmR71rSZ6lqinwp8MDLkcorKfezv0Y4hPQ
KM+0zI55eWA70Wflis/7srU0UrU2xM9NKhr+zfDJJssvXn70VPhE8s75uCHv
dWHXfMpLEXkn8qNTsL97/ohPjk+L+GR280+MnBx28tXakBTPzZv783m9c2oD
HGt8grwPyFfk7cl40u9sbh7/NlgbDvmXmw184smYMUNn+E90fbB278cSn/Ca
qopZk43xQX6VyUkHXnmSjmW8otcENRXfyZk8BY8WHN/T/hObp0n4ZN3Vbn1E
q8d+OvQJ6DAr+ScZtoNPiX971w3daSGjD3KKnQwsqrwt68fw1jGacw7vMnKQ
YtLB9Rrmn0wW/TwTsisOEkbFPHJrKq3MH28DujRFO/f8EZ8cnxbxySznn8ga
V62/oR+3kTw9uOduX/7qmhOt5r8G/Vjjk1/Rbwr2N4c8W13rTO2/5v9nJb7D
dp3IlVXk8/Lsx3bvxxCfhOtYETtYbvEEfwcd1NV1sj+/s9fl53+8ufgOeFHX
dtM5L8FzUE7XulUGv3RA/lb1nHPvZwWffHIpjQnTzcipeenzJBPNWPLafcdH
7jrvTLr9Mh2/rPLmQl18wvfk1b5xdgXyhQzOTRwuUfOt7XvEJ8e9RXwym/jE
+jPLQe3AivGX5vk3JV1PJfpPWL69sHObsdnWrXI4QeysMWcn61oNdvxmY/2O
1HQoG1pyXl+V7GnnfgzxiatxMkR535jPD8M2V+O5ffP36PNH7viemx9lfZ3g
XtW9AWNSzquqBWbuQcUNlG7Os31fax62az+G+AT5J3nOj4X/r+cq+s0IYspl
jRdcLAjfY9zJF9Xz9ynXpD+4W/lPKs3iEzV3uN6zrP8eSy/MMCrWNvs1NpPO
WcMT8clxbxGfzGb+iZpTJb9elVmvV0if770vFZ81yYI24Lsm+zGP74w8QWN0
2WcvFJkmuKGk7L0S7zfi7PPcrMR3VO3LjD4b113j4vknQv3YmeITlf8BGoFW
WOuNcTf9XJujWVDrnhKLT5qL75g8F1Wfj/eLod8o32TZ4hOqb5TE/JOSomXF
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
tnnh36skvUGegKO7w5lu/kR80sL8k0qQDyeyTetDS3vO//Dqhww7HtW5fpIP
Mpw67J7INWQ/HM4JkbUKY3aNjfIdVg45GT+RpOKz4fvVGNreM8cgaa1faVCe
zz2P+d/U3MiRb8PNUWcHQt7DfmK5jLzYfIZnFp48n2QWxUOy8wFL5ZA3sPHb
Mp6wkfAZdP5EcU/6/5WNX4f89YtOMzaLHi+dJ9OE/8TEXhU/ldgP7tsyDvOM
2f1znJ+1ygdVYlzBfG9kZhUWlPwHvp/R1POlaV+J+IqCvLo5gE/E52z1t9Sg
oHylMTfXbN07D8eJn4njRGPqemrOVyyNKqoObIXnQugTLPq0FB4qOryifiMY
KONvyo+l9cVDTo6LDa3kvfW1QJ8bGeCe5xsrPkt6C74CTefDfY+RH47zYaDL
oNPOXfxByskR+0FkQpM+lCbwifPxOf+BuxbG+JDikzGDS3ROeBBzM7aJugeJ
aQ6lHIt9R/OwGnPHO0MeHWryb4O+3NqULraidHjF7A9J649LSq6qmg1eTfzs
c/hZYYshDiU2yrjR7cCckGu4x6et3Nt649qU8RT8ejnOCa5YX9qM8Uk4v5PU
s38n2c42z+b0XNE/pjykrlWsokvEJ63EJ4knh5wOGVV6L1G6s+h/LvnP2uYa
c7aBxTuSDytrZIYUTh1z16ioGEJJyz8lwy2vV9lv4g9KCG/kKHa8wckHj9/M
POS1fsO7fur4WHB1Ytd15siOwG84boQYJusEHEv1v7E26byPy9w+M7P/4FuU
Z7NxfOQPs4/RG1cvrlxsIr7D4+n2vXf2gPKpKNmnbW4eUw+jaHk4oX3/4TzQ
ek3LC5cj5O1zFOrTGvHnEw6feOt1FS4g3TrmaKXtSc8OdDT1/Oh8nF6LJnb1
UOrNJb1WuDQSfD7m7k3Op23IojefoJso57Ci/GhaT1TcPCPdd97HnawvsV/T
1E3cwntRWuyKdSv4/C27XxbHd2H/hvZT6Ac4anxSay2j5hNrv0nu8LjKIZbz
MS8qeSZyL3HHM56X3JtRxfdDnt9UbLZG/Nvg2eEvI3+U2IqjIjeA9wo2Xkf+
OpYngk8SkivveM9ZJD8Q9hPVNucf7VowWoNZKhKGBf29+Vo2MZfDAw97fqaZ
4BOfLxIlY3i++zwl/p4JRdMquzlRdkES8UmL8094rug5I/NVMIGjoZZX3m8r
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
fBLkTzJ2RAz7M8vOlvUJ4AXt+wKNYHu9N8MoyOGVXAKJaWosHfFJ6/HJiw5H
ZK+cuyF78pWCWjjZZyaWWDDxBEt7rlkga1Mrdp2q4n2c91PLzhFeAd9B/2F/
M8x5mW9iJ43RPg7gTarpVBVDTPz7s3PMyAnsv7PVyRed66J1YJntH1V/U9sb
jPfBA4Gd5fCMyqXTcSuuy6n9JJOKt7Stqmt4NYFP9LPwWuqb2H8i/I3/jW5E
/n4u59f8B47I5/z9XfTYMH687HMXGF62axFOt3YI1zwwYzfk7il7JtTLMHuI
Ov0paznmQnxH7FQXRxMMX1JyUOS64ZVCTu3HqOYZjkUdfOSpYq4spL2qznX+
bcYH2XFXX3EJXcfUQSum3vyzcwnzAXG5UrLXn196v1D1rDjfj7pXBccWPeyj
5YW2uT07pWTyJeHToT1l1Pp3HjOt1yUmWPLPOVN8cm3POnp1fOp+s8nuiwlZ
qGUj1zHC+4vs/mSCn0pFs6do9tnLfQ+7PB3b+bmA2eGHekt8CQepXr6Rg6ca
HwPXkywPSvwHx6MuJPFqE/EdYJPlag8k8+yqxqVXE1CPNc83VbNEr02ouLqW
Zl8dlZfmjfOwkgtjUmO8Sv4eNT7h/SOUPC1xjZYCyR+HWXwZjPwE+KdYf/l+
aZ+vIz6p3QlX9Je898AbGnf0Zn1P34T9/s10b/+EHNNUfix3tufLBp9wLpyz
7dRrKXH8a/eFAH0vEtmLcx0M1icMi4zj+A6uhxrI+GzHXa7ej3df5YPB/CsG
8oLnkaqrWSpKfXvx71ifSNO80Qa9Kf9JxYztCzvvcf53kcsqDlbmek0Wn1hZ
AjsCMlHXs5YaDbIuOFF0HKO9g3JcS3QK3ccy39ubpGY+oOtV+CSYc749p+dI
Qv5uh6HdfDvmvQ4+cXUOE8GgZv/GnMPSYo+7nFl8T3kD2r62NjT4kup0Zp+h
poRZ58lrfF3+LLALfNkOO6r7lfvRtW2SKv0UjqOJH15j5kez46vXpWf38XLf
jvSpB261eZfzrY5OHL7RubuzSZ9A7+j9i2XeKGxl9mAuOHwS1rHOxopq3OZz
cm7UmMZvvvHVL6rxG/XnvF6XT/PW5HOirj/2Xt2x+Ubjc5L5naS+3k/cbwO5
6P2fXcPkrpyXsh/KzTF+hibGTsX3YD8O7t6W3rj2alt7dmUKX4WrZ+Zqu3nj
ftS0c/N1yvonFufrcUHOD3hIrz8QH4+Vl25Nj/pcnnXUG4OIT+r3PX1ZHziS
YZE3CH8Ah+A9vnuyP8Mi+/5A73Hcrr4S4RX83xCfKHtBy0HW7YJPAt0D3mR8
wvvHQQ8Zfi2446p8EWbfMMTB+dqo24prYd95f/0O85xdt+6tM3J7jHr+6IrT
X5wfK/t2TAY83YT90ereOP/E6WPkAdF66nWrU7dPvY4zs8x1OcOuDsWXPD+u
yK9JM/ZOpg2SLxv7peXtXrk+3rO5iwrPOv03bPfDULI0eN4qfKKxSSWpIafd
Z3Id5Uc4LnSq5z8JnhP3SHuAyzM6HWRyGAx9c4zhS4n4nPA5/B0FlrvZ7xD7
BO+skRrFRcID9HnGh1eu+KIdd+2XU/aC2iNCsKieVzzm9nc5yo+9yv++0diI
DDA5ExfbHDXkJyDvSe/FwDpuVm2IJvCJzsfga5uYc87Y13rtjtp7zNCykHL9
6Ls3XEd4kfL/PbtJYRMvnzgRnoYczItOZX8Sr6XjeINeW67WC3u5646/aN9k
W49Jy9SmfU8Vvtchql3zXO/9dI+waWgdROVFh320Xg/XVBw17fi+m6h/onTU
6R84RbC53JNXB12NxfiwfObpOLUmLuKT2n1vfyndu8/4RPbsM/4RYA32o5j3
bxImQcdxe7Pvnuwzxzb2nySqlo3z7WI9fN7iYzeXRz0e5rqrQ3vuEz3iZK+a
O5VE5gnLXrYNMScQZzd1mPzYgH512MnygvLleWsXlL+G6zeL/ROusZwN/jnG
vXl8UqTcllzO1XvRspaP4bXUJuetaHNqCyoPmo/XNe9VvWeLM9gPw2MrvhIr
LzW9OTdU5JeVnU37T6iPBOss+V4SH8OE6yyOB53q+U/GFaa2tOP8YUefol2T
ote+GHziMIIZvw8sOsXGfRyuAM91LehSesHVBuR1Qhxjchiu1lxSexXqZ1N8
ZvLUVzY/vtqXL9f1bXiJrShenp7+bJI+Wt9VgvXFihZmLeoQ1aLjOa73rXFr
qxPZI4jPu2m9mb8v9G5115W1Rrq+YeLR282Lgnp2Yw/46yv5XMruC9boueuZ
ePunP7HUnU9ffzr1Y6gH+Ef8FkP+9bVMnjHtErnWVPjEm9uWjtgz+aLzz1bz
TN2frr+gam95Mkz77iI+mbr3v+rFatB7VdyGfSv4X7/2quMbrt+pKJlk8+s4
l4H9J1rG8P/kP+H8E8uH4LE8+67ZZuM6DRb75yj/ZKmcR+T15CFnY8jeTozJ
dZzInIuxlC93HW9wfizrYj3fPR92G/dm68dijIb33C3+d2OnKbqWmWbXGJ+S
zckB7WBnbyQ/rR4fVUelom1Lk0excZ09D9WWSYyM4lp2E4PuN+zH0HuOaRoE
z1sTn1R4DimZof2ykzXsnmbt+9nUf1P4T0Lf3fJPLCHfk+ffKut13nZvPVqb
y1hujNZw4ndmbX5R6ET7wubNPnomnubW38laf9aFvB5IyX0fKxb9+2L9Z31A
vI+383U06FxDx57H8d2Ie17xc+k4Xm3/2ozoo/VdpRqf6Ngj7pXzKzDHfX/O
qIyP2GNWT2O8cyp+qnUmrfXJuX0uQv80sESB670on4DnM2H6kE8srPemZJx9
XrN/8VLBI1VyvOHY6ZxDzlsJ7UWWE76P7rjgEzsm3vOXDf9g3ZKWM95zsL2l
7a5wTBQPR3xSJ//E4hTyofxrKX1ioETvjR/lzXRvhkf29rljd/UfSXcPZLhl
30QT/pMxz7fAMsroLVuLScdO7Vp2shVU/hivP+N8Mak/LzVTHd1z5D9ZKvOL
1nkU8ulLfTsC2egwrc6v9bE75PGgp5NcfOdemqfaP6v12HHTXzPoTeefCB6z
mNLLa7DHZP/fZGk2uOenNB7IiwS9Lv3chYrO/t6Cen0S3wN0Ia6FtT2e/SEy
Yjit8mWUVf3oKeyrmvgk1FM6xiNrqUZ9zFJpD3xSRatSYHN79qw7xtX5czbz
X33W1AjHGjfU3Vpua2Pgf/AP8ZTF6uMju+gaqA/q5kyA5TnOIHrP5DE6HkkU
z5j747qEXm543bEZ859NzytPr6r6sBX/mrNGH63vKv7+xd7ctTRhLC/14PX+
SFZ2Lre5RHwd1EMpyHop7Y90tVLAn7S2QOw/M4d5vdtL/Q+5WrE6J2eSc34Y
63GORHAcY4WSyY+hdWB6baFee9D0GHJOGtdVs2sJKmO+n3Sy6Pzxs0I7Nxdr
558M+3xunwv5dF22NrFbn87nUvG2itIZSn74eC/ik6nxyZuqv07YZFff/025
JhT76XN+lic4vkOxoCP02nz+SaLk5ZjdAy9HdW08/znLsux13eoriJ9GOL+D
1hebeKyufeN8MyO0DieXU/tylIpkD+YKBbMPn/J5Ooyb0DzE2jfPB8tyLKhH
xfep80/CdQGdgE3Qm6l/wrL8oMVj1678qmfzmjE0MZq1oFne5eRAtpx+2vsp
niw1bnleBBjD1OEzvwEtTH2EpWo8x3xez36PPVNRK9ejZQ3dzT3EJy6+oeVP
0adh6I8p2XykZv3Xs6X/pvCfyHPY54dOg9+ReCT00WfjhP16iUeWLZExnUh6
ibaoRQx9Q7Ucln2M4qT4fxHtATeP6huaOvdGRmNPG4y/4w2XQ873NFHcq3IX
BoOxVHleZcYnq6fElzXHRudbsP2qcxP1elMlg5reX6dZ+mh9V5mqfqzL1eG1
brR+m8/DOn3C1FrGnngmNo37fZFyR/Dex/t63auzCXl9JOtzyuniNZPK38z3
zjQxa+hGFLb1cZW23zAHJE6obYVm12er34Q+Gm99M+MwlSswO7Rz4z51fqzj
MZ7TlNMI3z7VtBrx13upmrEmj4vly1igEx2vRHwyxdrgfucb6UWOSf8RyY/l
HBT6vq+ksIjxreC3Ta0vrprbReK1P7P1n1w8zl97i3pctH+G1X2sX8BjsBWq
1sxk9H/ozg1UM2PLhh6ZU5DTps7PyUaXsT6ddDIUx1Cdo0xmy35ZXr6s9l2a
PHWsY/kzXv8Wxmj1PGzj3kz+CdtyeMXYn77oVHk+Wdtta0qcltEMY63tQLbl
TC4+20dFhSVGyR7EMb9CrlHF2NnLbZ0xqfVWY08DrElGbgRhn7KK+1Rq17eu
9p8oeavWhutzvPX7A4RFkX+DvCkPGx8POtXFJ3ycxQYqRxk1OT17vOLsbKpZ
tqlHfIRrV3/N1RDkc1KdQRfLxNot2Ax8PtavTFfZV0bs+iLRFTjz33Y/4GMJ
WR/v4k57H7qd4vpPoWZtpUn+YZxb5T/XGFXpM29vjFmmj+aXiqt/0t/7U5nn
Lh9m1OxjkY3pNy/n9fHqmSoJyRWML+qRujyoosS4Dyq+8GWssQEovrPOxMqM
HDxAvIk112///lmnH5WPDXgf/L38E+co3i862qn7nEiecvT3sEmixr5+r6rR
XTWnEx9ryjVGHeadEe0Sefap999JfF9txdZmyjn7qZY/+bcDO4i+NyHfm/x2
bv2zt79RxCdT9sVnn08xZ6rDtA95sH9In9xfSffufy3t7TdYBHYT9PB/P+fj
lCMLX8qT+0su3tMgP7YqJ83mO2FNQHa76ZUZFtV2K2oMXUlrbmx8W3gDfuW9
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
N8InU/oaPN2v+Sj0mzB99V7qnBtbVHNN+76T1K2rd+vX3L4V/Luh1O3fYs/v
YdzEj4vaz6bC1CcMPuEuuILllF3n5/khfDujihd5rD1sk4id4cVcPKyjZLOq
YxXSwOyzm1Q/g5pXf/x9v81fWkBrjYAdEAtxayLNtUZ23Sf7qMFO9GSMlkvq
WvDvdnWdlD7z0K103P9++QDtd5/XeQDlUak/j/2ekHdAOcElPc5j/jPUwyfe
3Et8HFKx85jHTvslwnU9SlaHz+r5UpTtEK7NEz4M1vA72iVObyq9bHKsR319
XEk8+72t+0zxSZW+47Hj/c1VTi/nWQaY3OAEWwtWyUInNwMZJb4pxqfDCs/W
iEGWnf0mclXveRdikw6QfR69msAntfWXrrebKH5iHaLGUV9Xr7+O+KRh/gkw
CteL9WuzTTj/icUn2ncy3fyTEId6MebAvtb1EwTrhzaFqhHs++oT77uaOlTF
/OW4MF9LrqPnclHJ22q/ie+3aQMerNObwifKb+uNMT2fW49A+EDnpk+OqnMp
34bNvfcwix5bWePB80DV7NYyk+WsF9OpIbe1vM/OhThRgfd4zzrtv2p/r2WP
Wd9uY8uLP5Ret/KK9OkHbzM5R7ouaXb9Rzb/M/llHr7z+/41KwntS4n1uTyH
uI6niREWlc8oEfwQ+rD4tdb+xU4nabyh8LrI4UR0ieY/lrm17F7tl672Uen5
ovZ583gnoDGtYVD8XVa/qcqNbD1/NKfjZoJP1Bp7/n0wn315qGip+UIdK7Kt
EvCr/a1vP+hag6EPeUh9p/jOrpML5Zuvt5POoF+T+GRK/VUZTkNcLZ/x+bVO
03WqIz6Zlv8E73VNEz4mF+THhvVmG9aPncK/EMpFjUe9Y2vZ4MKjwd4HnrwM
7ICKjQ1VLE8HOsyTN6w3tMzVMlrlvdfF163mvwZ9Ovknnh4RmRnU1lXrPc1Y
qBqzPE4SU1PyTeHCmr4ojm8zr/N1eG6MD1fdu8Mkbl6ZmjWF9KqvXJLhjOfk
Gdx6nzHBMfg98qKvXPF5yl0kPrG4htbv9O+Qe/7GCrOn/du8Jsbeo8E5K+g7
yieYGCF8Anzk1qno8R1T4xzogVr4RI+7PD/7kored+69qm9VDvhP2wuePaB1
VdHTc56fcio+5XOpe6b1EKxftXz3/DEd0GeAT9zeU0l1/lvNPXFc3IZ/58WU
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
pTbz57u/63yURfYMUVfUzY/dyPGdlI8u/ZfG41owzoC/AP0QxC+K84NfUy+L
caXtRqNhPiGXo3Ie+klD//pZX4eBT6I9YNeBDoCvFGufZn19zXqlqt/MzWln
vkZ+0H2bPkP2E3IT4XdJey2/aZfd4lGSSRpDEn+X78HFz/bc7vtp5ozhjU7c
p3mOT6w36DNG25rjlOZIgDeAKSErEfNP62PxQ9ihT1Y0jDVHfzYvj31uO/zY
WGv4LJD3DP8ZzSSiHm/tiOeFh3rpHvC9X+6632IpPft8uiP1enX2efUbzJ4E
zaG/LfwN0Lcb1n4y5R4EPWF+WuQCoAaU8LP7DPd+9YqPcB+v91Edq9i68j3y
n7CNjusiLxX+IvAp6P/F555Mz6xzBItS6ne0/4n0xg+xbuMvPBN0HXwA6EGj
MQyvy7xNMpVmIcGOQd8W3Ad4Cjns4EONzzG2Qw8RnBOfk9+g5/23iYYo1t1+
2O1xDXziMFPwSdN97yPagb14301foP72F5xzFuWlrl3+N7QXae7DeNgTzIOF
Pw8+EMg98q30Et3g2UDPmNuFvcd+SC6+2Lypbussxc74G74u0AliMo/edUuw
BafFJwdyW6tQfKh9rxyOifZRognQf5qXyt/THG+b/z7EJ7OYf0J7YjlxwjNe
73k5GGSc4gKv95zvoVeYH9LFB5X+BvBOXy2AfK4ytcP+jba7/ivHJ5Ljj7qB
ZPu3g53lfSnwwcNGeOzOL5HcgO6gPOFKNoLH5P6bik9iTCP1e2hMq6MPBZ/0
yUXBBt0BzyvzC7qy9q6emnDZmH5mNOD2Wms1itRndjLeh+1RThdF3E8/N3S+
4xPJy8HaSo60w9a6ZtoT1OFu9bkJnQ/2aSRafqa0fi0uVuH5WHvX8XeE17rZ
s2gOUo35uN221qaZnTKgZ567pvkUR9I9T/rniH51z9v9sifR5FPchwT2Qpy5
2P87vR+ncxSf+PUMef2eh/x+F3Yvcs/Ce86nIj7YaJ/H5xN/kp3TzeOYkNwu
H58pSs0VmYk2fd6b2n2diBm6ba3fstyzQvfV6DSupdRO273n9NnuWw/8fT73
P9H84NBXaaS0/EK73kB8EmjXauD65GBuC4Y+DyYDA4+5dRvik9nDJwkfuz4X
wT4zezfVhRsmSD03O0keuXiMfkfoq2c5Xp7Ple7zujfld8ktjfPLAq/03O9C
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
V8yAT16LexjikyE+GR6DjiE+OQqOIT6Z28cQnxy9xxCfvOb/hvhkeNQ9hvjk
KDiG+GRuH0N8cvQeQ3zymv8b4pPhUfcY4pOj4Bjik7l9DPHJ0XsM8clr/m+I
T4ZH3WOIT46CY4hP5vYxxCdH7zHEJ6/5vyE+GR51jyE+OQqOIT6Z28cQnxy9
xxCfvOb/hvhkeNQ9hvjkKDiG+GRuH0N8cvQeQ3zymv8b4pPhUfcY4pOj4Bji
k7l9DPHJ0XsM8clr8k+e549lWe7e9RNa5+s+e315w8ZbXtVjw4ab+f+byus3
bCo/8/c30LU3fOHztN/DY24ff/+Z68tVq1aVX//yxvK2m79Wbv2HL+pnt958
46zf37F+bL35S7Qv6f9fLT917dpy1eq15Zabbixvv+mrs35/x/qxhY4baW9u
+4f0Cr7ZetPXyi/ecD3JwnU3rKPvfeMfwF9fps+23Pz1Wb/34WEH9uwzn/kc
4f+vf3lD9d4Xle9ezQP0gOusX/eF8urVawifQIdDn88njOLxyZ49Pya+uHrV
31W6Z82re6z+NM3ohMwE/sN7n6qOa9ZcR3ov2XvDY64e2KNrqj1ctSrZ5XKs
WvXpcvW1s39/w6Pai2tWE58lnvt0eq/6Gzw++/d3bB/YE5J/+Pua69zfn67k
4GfoO9dcu7pcvXYNYctr1qzl99YO928OHJBx1yhv8d6tTjy2+jXZn+o6qxP9
XF39/8e7f1yp8j+qLp9dVHHk/v3xj//b/CcVBsMaf+Vr3yjv/M7oq37c9d2x
6nUfHV+98du03t/79ubyN+3HKG4wPObuAb8JeGPk0fvIr5mOR/SY7fs71o9f
8+tv2o/SfpAcrfDKv4z9QD8bHrO5P4/o66/bxjuQfd+74xbCIA/csbn8f4tH
ac9kT3/TfmzIX3PgEL7C3vzDFzcSXkmy8LWRf78dTTTxYEUj0JsS3/ljpcjn
Cz75/8o/hufYvXs34cBNt333Vc892fmj35YP7z5g+SfVNYELU8w1my89PObc
Ad8iMDxkZpy7OD6r9zU85ECM2ubNXL062d9xxtTwmLVD5utRLgG/8myWPdu/
TXIYuQVp1k07zIOSmezDY/YOm+fdLjff9DWy6/vnA77Kh8tV+tGeHzM++eO8
iO/gOTzOwt/AJ1jnTVu2v/r4ZM+v6fX7j/+O8mRv2ryj1JlYr+UeD49XdCDf
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
9+LynlvX9WNSxi0H2g+XV17+3vKkE9+a9rn63cknvbX82LL3kayLPpeiOt9Z
5ZoVlzu9WZi8rnTaL3bfQ7Rw36bPOH1pdHbhue/UPcO1TjnxLeUvd92Tnu0o
wY8qJ/m1P//E29CjDquPlBPFI+XffsjWG2txyklvKZcvu6j87fijjnecf4x5
aPOGNRU/LK7ofoVhwuDf7pRrq73Bnue2vfJN9Yo9WLN8WdDLOMfE2MMV1r+q
vP+W65nnMp8P1U8fBfrN70/PnhH/rxvfwXq8+OwThKPPWvSnylMLF7yh/OuL
lpZ7H/oGx1O8rqxep8bKpx66rfzgJeeTPGry77DfV1z+vgpPPOh0ZfKRgD8v
PPfsig/uZT7gQ+qPqvdWr/gIfcdoKd3zH57dbfzeSHx1xbL3li89v8dsCcVT
zm86l48Z8Ulhh3y/kvmiLyCDNK9A81ESD62pwR9ynSE+mUX/idCC+tcTL7z4
3JMkAyE3Tz7pRMIeGyocsHb53ySZ2mrS52ZTtdP3q+1T3upl9eQVnwDfnH/u
mUoz+yr+xm++eO1y58t2NkX1nQ2rVxLuGNl+W5n7ln389qVnf1w+fNfXWI60
WH4XhkeU5o6O+EGd/BOTiSPli5UsElxySrVH1y6/nPTMmuWX0Z61GFvm+vO+
Wz5fydvjCYP+1cXn03pjrz9w8Xm0/wsqWYx1Tb6udA+4BvG3j9E4fbrvoa1p
DyqbznS0s8X5e7D7cK0FC04o31jdw89239OvV+byMRM+UfqzPYP8PKF6VuzH
By86j2xe7NMHsd7Vmr1xwcLysTu+lsUSksz8/QtP0H40WEe+/PwTzp9o8bbz
z3kX7V2U85EH0h4uiTH66l6FJw07vrXcsmG14+M5sO6Huj9+HXo18Um1HrCf
TqqwM+TdktNPJVrduPrKCmNcSjxDsmvtCvNfTSRaX1Xpv1ajSd8BHtlQfQf+
DZJNLby/gPC4/x3kFdb76YduizJK8GHFexeccwbLWNDUXuUpnxsEvXzlsovp
e7hny8HOfHGzvTcz7p3ty+D8k5hXI/4nrCN4CzIo0H6PeaRaswtZt03HH3Kd
IT6ZzfhO4fYFtnTKNb3sovNp/8BbSS8KPSRaADbH5+A78UNfUOH6FnjH07/3
l1XXAv8tffdZmR5rkH0SeKhrfPelVVfR7yA3+/16jo+nxvW6wEonLDze5T10
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
L+PaK+eUk95KcR5gDvQyybER+u0vfbf1FrZa8nQ/T3H9js6O7BXkm0lzZQrN
37jn5hvKs04/JdXMNJuEVZCjGmRF3f1RHjkEfOKfP4+z8PoHOTdwXe2c/f7K
AXYZPfuYxrTi3hSul009fNaYx/ikDv2GZxVdM/SfHPTf0YRPwl7nnx0YwEO5
rM10YsT+7f7fet5j3Kt86eWCn+F0DOOTPr+V/9z3yei5tZfPevF3/XJ0gC0y
AGNG336/3+BQjvmHT3CMx7/zPK3svb594ZhO3/f99eX3oa4m+gD65Xj+9/Sy
He+jnwr6gNAswm52746XsYfnv+dd7t6E9hLfjvFcyo1upgVqcWm+Za47ugX1
ckENzJncb/6Xu+6tTyOHg0/yvFVd5yI8b1yviDP75OfBbAH3/Zzfwu9y+TnD
0Zjn+ORgGCXi98zP7/e4Bv0M8cks4ZOA37Ne1JnsRb3qyIP/WD6FOrdeEeeo
uPP0xWq4v4nyqtQTCMZweX1yoJ4SNtZTD91mcsLLh4CDsle+32MDn3j95ebH
dmUNttKcMtRzJh+//K4T1iP1lkifoffTvmrd0dtzYtzVT6o8TdeiPhVd862i
75Rc66Xnd/P5RzNZ62oaBjzvfMMn5ue3OEy0r1O/NNA61pv6cck+hvgP803X
6a5uNnPV0Uf0qSV+QS0srgF+QO1qxP3yHJ1S88Zyn0630D6pnhaiby7dU6sh
c5HlGZ4JOBayBFgE82bkfZmdZzOY5b7kWiNU6953D3X3x69Hr37/E59HjNpm
3PveHVtSjbbUTHl+msr3qU2xKaw9ZlLJbIkQg/X3ptinQ/0WUFeMPcMcEM1Z
mqhv/zfmPT4RGu6Uua9S4tvYt7Ed3yTZhFr7xDe53ev5yNUfDvHJ7OETnzek
NNtR2YCaf9T3+V5BLe4jdcWy97IdJXzSof5fyH/zvTLNHhih95qc22+yb4xi
8i//6sflxz50CfcwamqMm3ogXXZp6sOhdQqelor4ys9zTOATwXc9yxP6/fM/
KT9+2ft07ay/U6rVfIn6R3jeT2uHuWannHSi+/5x9H/YzD/Y9vUyzETReoOC
+muiL63046Mefo0W7fHP9zyg14l+Fqaz7HnnGz4Jvv+u0S7WAL1OZB6B9P3C
s2O+yg+33Rj3eyqeT+YNYMZAiun5WOiIrV/1ih42J538Vu2h1+BecPCDPPLt
m/W7wQbNc6r5XI0B2KAvZjFZEO2cj/4nfg2c7n+q0hXokwXaSb8Z0f636M2P
Gc2o3yHedTnCE6MP0zPctv6aQ8of6NN3vZr4hGUYsMiFfH9pPmParwUL38D9
6QurAZC5OZW+RK4N+mw3mZ9EjhJPUd/YrPa4l/Rmut5Z9JuW2zfk/qxfy+tf
8/kb8xmf+FomR7eC32Az0WyqpslArKX0RNfaMLaXDVNGvh7ik1nCJy6vxPwe
4yQP0XtywQmJtyAPIecgLyA78Df2HPyCORIy0+Mvz/bzi6X+x/lGqvdxPut9
nWgK82JS3l3qx4i+9rBTHrvjH8rll1+qNEX98jWm5GXKMYpPJObNcu7ZXfeV
C99wvPa1xF5hZs7D224qP/7hhP2AJZJ/AxhjH+lMwqCt15G+RB8v6A+sP/qi
Q5Yi9r9+9YogA4BNl9BswWa1n0uof+nIjlvpelcv/zDNZsK+0YwVwcF9tQnx
mHf4JKdTjrtcSfN1WoQRtmy4mnpGgU6x9lhv4HPrDVKUvoYF/has+ckVlsQ5
qNd58IUVavMv/3Dqvw7Mc+v6VbQ38KltXv8pyiH5kwbP55F4UBYrnAmfxNwM
y0FsNFKvaPEdxbwb9D/5Bs/pWqFx3QvOPTvln0ymPo3oe4v+75gbiu+tWflf
Kef2rDPebn1vD2V//F706vtP0CMO93pCJX8wcwA2OO4f/dkQk0pzIZy9VWGt
Pzz/OM3xEFts2y03ED9hj1ev+Iji+Xuqc5u/K+W/PsB9gPHs6OlMvuTt36S+
iTaHYnFt+mzMa3xinyuOZ1q8Z9Nnaa2wjqAdrCH2gNbx3CWpxzHm80x6fCj9
uCLuGeKT2cInsr8i/8ZVhixelOZH3H3zOvLb+hxpvKK3IXgM+EFwDvadZEzI
D2nrOZOMa2nvaznX4kUnlzZv0mRl6pnJvbubTZ5/VmiMYYhPXH5ktYenYzZu
q5Vm38p3XC4m1he+jY8v+4CuxaPfvrHSU02Sp4T/urHv08vPPq5xf++bXrvy
crLvgG1MV1nM4bld95INDH2b/F7VedEjX2vM9/U977zDJ7Jf+swF9Q/FM2K9
oYeDb6my+1564Ym03g3MlN5u9M4yE7oaewG/P9XArDUco7H2yeSDAN7H/Crr
Y89xlqn9Fb7cQ/eA66R4j8iAImCOaf0nXrY7WYJewvdt+pzLN3NYp/oe4lh4
DmAloc37N32e+/qn5wUt3rZudXn+OWdT/1joEvSPhe6v3VvL749/tl49fDI5
9n3ykcB2gk/DfEyGFyGTCGtgxjGvwbVXXU7vrcGMh1B7lV4R71nI9ljiuRRX
QwwO+hTXg+1vPYfs/mVW5P03XV/r+RvzGZ/kuU8s6zBXZyGvo/ZKlvVnmXkl
9/sDHvT6Se1fl1s5xCezlX/SVhtH5Vs3+Z7FBtd6jSkvg9IrZC3FC3h+uPZY
OjAaZJO3ozDL54Jzluj7dK0m5mi9P/mpQ02e0SlmvZCc7R0ElxyD+CRhxjbt
DdYHsRXMIzOfPWI/Y6G/BfxgmA1Ccf5qf8464x20ZwfaO/n8Wc+23jjNKkB/
fLGPaYZ8E37qEwbm99FrdU3o0AnkVHjez+Ps7phv+CTkn3A+yRLGHpgvJ/vp
bWh8BzKV9JPrYZM+Hye/h/gfEXOAvyzIcvZVnbXo7TQHCfU1dJ0JqQsx2tfr
0L484/al4/hsGnzSjfgk3SN8N/ujbaLnbZfa40x6tulMhsLV5ew3vexrqA8U
0VY6lP3xa9Srh0/WrPgwycEHbr4++P7lPvA9zBMDFpTnhYxqcI2T2XPj4bw4
flvsZJlofmzCNWKnef6Q3K3qFXHuR1HDVNN/1JjP+MTLG0eHVJvePI4wcqJ3
ySexHBWsI+2b+ky477XUwTm+HuKT2cEnfbnlLJsQ44SdTb55ied5bOL+7/P1
LjjnjDQj3fN5FoNXvxpfF/Ku2apwxINb+7CMnp/y0EaJdvro8RjGJ34Pya5G
PGX71lJ9S77PjPxf4+TpFdiQ8oFc/3OrwSuy/ihJjsLuxbVSzMf1LZ3Y637T
Vrs/5jUPxiY45hs+yTED9ir5/JcEnpAcZ58D4v2VQt+orcV+kX+seg/yt9F8
Xblt02dDrIXsAJejGvzXPvdV9iOv2/f9yKbDJ6GW3PvEYy+zWIfScTLD7teu
z7qC6TPSvPv+oe6P349ePXwiOSf6W+qTPE73p33ZmK/E14tcrUYj1ialdXf2
RJbLKbOsllL8plH6eWb5Obwfqs7zN+YzPsn6mQj9gO4p15poR+jN9yhnH1jI
jcprGc1HNsQns+s/iTb5uMbn6DOVEx2jC+2RNOJoqJ34mXpUd5zcKQIvwj7A
DA357HzOXzK+s36ZsUaorTPGYpy8iK98nWMDn9jMVPjAG7KOYo/6GpDQWy3l
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
30/znuS5xrimoJX6/8k8vWpN4K/E9xHH8r4iqRuk+jKP6Wrc/+HhE7dH0r/R
9zav+fvD9Z/kuGQu45RDwicspxf9p7MTzvjRr1Pc5kf/I/WJ3ZV6ohBW+b+t
h6z4U2r5T+hwdZPOf6F6zsmvPntLazragSaj71roaVxlrvn7hV/HS8E2Kscd
nZh8zXoGybm8v4N+06EegvDno4YPsYB9eb5Ct625CuKf1HsPNRyd8gMXn0ff
gy0+unMr1+ClmlbkEGOvqO/LVFvjP0ln2rVgPzQajaiXpjnq+E9sXRhPTTlb
Gbw4Nab6yOcN9O2T1z3y24E5oW7+B8+Ft/W3vdAYzrSHs2+qQ3q4o67hh9tu
pJgx1TdMFHpuHFK/A1x4XmXvQe6h7ktmOSFWIzLV41TpKy99Y+CfxvvI7Zfv
ylzavZy/tMHndHdzPe91yaD+9qORD3puzX2fKr8Hk4XLKZJ1Zpys1+vonge/
TOBdxyOsV+x87QH738nux91/z2FYYHffs3CuH4eBT3I/ltLIhMRIra9dkFld
h+u7Tj513Tp6XpPzh3hefh9F6WOtdfxXxCtrV2o9JeQV4na9YqfiKvELoV/O
G9Djb8p8RXhdUNldf3HumfyM484n01IcIjLhQq7n8/IT7//+hd1UW7b03UvK
Q4oNHi4+0fX2vazapfbMq0k/RyK+I5hkLmMT/DsUfHL88W+gWPkpp/wZ5ZwM
6m0idT74v/SRFb9KLXzSK6zvlOyJ8tJ+x7f99cjKk4pDpO9g0d+Dx9uPSl/t
UvMm6R72Kh4INt1UJlP9/yfjPckBrNCQ/keS/4nzyxw8PjZwfiz1wZfeQioX
xHYZSbzHNRCaw984TnPCmxQj2kr3g8/SzDaRPcnWobma6P/fO0L4JOCJwmSX
00/qe8jXTNbA+z01f2RE10nkqe31WP8ehL11WKeu7tD8kxUUz6baYJXb3m+W
DpKPqK0/4zTKzwcWvKDaH6w54uXkc+4ZNuibM8T3LP1WkJ9i/ohU/yz16WlG
s8NuPp/EP8MgfKJxe6dTRAeyHRkwgeQi+JmBbOda3VTbeMzNgAi8GWonbP+C
LR8wk8xKc3w6TZzV7remjJ/N4zDwSaK/EfP3+n7GyPkW3u6676pvBN/fH/Sg
X1ft36u82w57Iuus+x5oAvw583wM3ANq8qgHUeYTt6NDNeyQZaec9FaSh+CL
DWuXE78g/km+yDGrxVu/5kqK11D+l/TPOpDmrxE+6Xlsl9Yy1YydXWpuYa29
s315JfjE21N+rQNmqUE/R9p/Mpf/HQo+OfvPL9G4xNa7Ryi2k3rXd1Osp8Ie
37z76fKKT3yuvG/Hz6h+J/Vy+zX1wK+FTw4WVw56b1DfDa+fhHeeiTZDH/7n
OjUfF5g0GtJzTfXbFuG8vfH+82e1ROAd4IYUtxG9yd+dknmDI5zL0ErzvETu
d50s5xr+C8Q28Pq4W8Tzst+3xT1jgvzpcf4J6mclLjYDb9Sq3zlYfhDLJ82j
oz0ad/LP2RCCAft8KVm8O8+xlPd8PJ7XrA7+srzbhEG+tGoFr488i9O9zj9m
+bG3mwzXe3K9TVmfw2YELaQ+ECavMEcYeyW1uxbHGk/0U13ji+gNnmMvLx+n
9Z84Ws17FLs5O+rzcnrD1s/qflVPZrUe/XZ+lsPi9zLLqwoYSWen7bff55iq
l9PYHD8OB5/oXhiNRozqsfsY1TnqzKIeyxC1AzIZluNc5SN/Xbfufh/EB1Dj
2YHjgTniPMiYO7Oe/SGwDWw2UJyhkPJk031vWPtJ7sngethWz6jzYdnutN5y
Bcd3FrMvdLwe/Ry2/8T7mcbVH6jrX5N+jlR+7NHgQzkUfHI19z7BsfS/XMZ9
Yhlv7J4gH8m7/vwvU8+Jav/vf+jn9DlqkOvUF+f608s228PEK/u45jdhZstj
pbkOvvek8rbRh9neXGfKvYSJf6fkffn+SBlmVni7wsegetk9ejnbK3QWm+gw
77M2W7HSdauuIluA8Inao5zXITRe/VbmxKZa3cxnmM0Zlf4SKss4hwB5YmJf
HJH5O5q/IWs8avdcHahJQiyKem8Hfm/32d5yoJc96six1+LHCDE+H/uS1158
zvD+tLw/ovuY4jYp1mb2jdlfXs8KjtG9VTk0ajTo/PFSa57m+ZqeQB0x9hT9
s2TdBJfeuuGa0vp0mo0YMLGXk4PwidaRFua/97TYK6h3K/ZnbMft5jfyPkHJ
sfTYUXPQn4l7mtkUwoeJR931/fd67j2HOb1Pps/mOFb8J+H9EcqLp5r9ip7Q
EyXMX55wdKh7kXwuqKsd45kE6MGc5NY+5cG+awt/UnzWbKRgE9Thr8lUS7jO
z0ySemZ5vur/6I9LueAaw4y5fsiDRf8qka9fXLXS8Il7ZtShI44zqfV3oJPR
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
x1dwDdNj/hrVNmHqXDj+pj4OA2vMNRh5UUvUPrDj64MaZ0b13LReB9sEUH+0
j+qL/l76//3sZcU6YrNVzGJj63HdEqse23niOOdIFtTtd7W8+IT/R+3YOLaV
as9n9Nu9/ctGX8K1AtudoNfbMiwHLF+IYoCor8HmDd5unc2l2MzY3pj4vbcm
c8AxW1tdD03YUvKsz0IP4xPBrQEezeYTOW5SY1n5L8jx4NdkO+5zsUKS11Bz
WL1N+TtRvCvhBukPaP0ysJksXLiQjmnUPzDOL0a9Wft/HjtMHj9PJ+ETr3vb
2IDExB/4/UTiDID362RZbTRcUzWuKQK+xhpB/07fv9jLNj5+zJ9HewuXU+mF
JuvpNyKn1G4yh0/4HsLa2UrDbC8gmh14ND119AnWi2MZTN+3c/ga2WCkxwj5
3IRWVY4b4dqVDXL6zHry+7HUpYx6iGrMcXi/vYZP7F6v8QK2nnb2ujryLPl8
EGvwK1czJohxkL14PPG2Q6VdYmxX1tdvc4PEBi7rxX/m441K/nOTe6H/U/+J
hHKjt25ay/JiXPI6xMZSUvqjvsS8efPSX73x4yiGYVgxD/CZ9pdzsVHkx+or
6LXt3b6FcMHkyKFMl/lD7luTfQ4cvfvBzanFxTFfxP7oYL+r5ey/E61v6F6I
BcEg21Qwx+I/C+1a+Ax9xSQGCD6j8NzH3esR1duUrsorifJQwPM51mehl/GJ
e5aYE8ZwQ8Yml0S4PHof55i0ta5Yb1Jc7r7TrvziFStWqK7o8IXWuS847Nqo
vn0DGwrhEXnf4hw84OspTGGHmSo/qGPxiZWhQrea0W8tfqklqa2VSGtBecnX
cQ5l6GjEv2GMYuwX978Zyobg+qzt9rzGJ+VwvlxdgaD/lspnjwEDHZO+O2LW
gRxr8qODfF45z1CquZXau8ntk+M2PmHY1Mz0e8D54d+x67QU4DSti0Gfj6Ra
S1xrevp929eWtbWHhw2vGnoGtQLs+nBYx8jqYG8VO7n2fzTYpsprgPtgrk19
nTvROUeVTzlnvUB+QtV1jJ+Ink0eN98Lf19sFLKncE3kItngEC+M/R11QWB3
wXHSIyCQY+20n1hcafUxmadAR/O0juNw/P3LmuBYlIBOQdwo6/BBrEtkq8qb
f93T+ERlVimsDaBrwuq09bG6wT4g9Kz64+V32uXfqVQqmr/TaOCzkydPTnlu
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
71rz70yHK1qxqZyNPB7FPdmtHX3xZZrrL2a8ctZpe+8Ay0nQNXsecHzJtJ3j
v24YRL8N9wV73xztOmdYvI/XSqMNs3tdc0NoMKh7mWLHeze614NuvxskPtu4
cY7HOms4emy4j+gEHRvvI+/qXPz+gFs/A47HJb9Y9vJW9/+2YIg24hPNRXJY
C94e+LBwr9t3PnMO8nc4Rvbg0Qny8fj6J4/N+Qe6YMC/g7Xyz6Mv+PyC8RHn
Vxid1WubG0ngI8e41+15tpb43OgQGklfPOfzOeJyMo5NF4s329d+vg9T/3uX
1IJCroB771ytHfYFDrbs38mDJ1qJn82DTWaKX+bqs7V5/VTKPl8iqGnf/ffX
E/XZolqkDfvL2f8d/brmPg1G6bb6bOfFCNZZYvacHqjP1uvD0KUb67O1+pjO
j3Om+T+t2l3m8Embh+0X3mO5gV2PTyw2EVrVEv+ewZJar7Rm3p/t688z5vBJ
Z485fNK9o8vxye7duzWXBrk3cQ7OVK/z4pKpHq3mCNnHHD5p//qxfVy6qrdc
k9H1+ETl/Qj3l8N71s5eKdfbUyxGme3rz3WPc/iko8ccPune0eX4BHXXCg1q
xMYjqh2bqy7tnj176o4T3IHPXM2Ulh9z+KS9w9eFHNZ6Pl21h08zegKf4Jl6
35p8QLGrqH2lHOKRbsEmtWQOn3T6mMMn3Tu6HJ9IXbWpcEmjsWjRojznJnvL
VB+ibyCOQQ/BRp/P2U/O1fptEMvWQ/FtPYFPYqxRbfAZnv91NIw96Rb6zeGT
zh5z+KR7R5fjk/jx+uuvp/PmzUt37twZYAe8xnv4DMc0whLoSSw18QuuV7H8
DzuN1MYfHBxUrIP6+nlxyRw+af/QetW6jsuql3fVPj7F6HZ8otcaxZU09MM1
qonbAffQdMzhk84ec/ike0cP4RNgA2AKiS9phBVg91i4cGHaKKbVYY2WhmCg
VmJY5vBJe9eO7Q3PfoLhVOsfz/b1zXB0Oz6JMSPeU2yCXofS71CP78L4oTl8
0tljDp907+ghfOIeU9adB4ZYs2YN4YpTp041PAZxJZ/+9KenjF+RATuMxKe0
Gl87h0/av36G9j+cbhtcTwOve+Xeegqf2PziDJe8cfTJdPiZHfRa40+6Mf9q
Dp909pjDJ907egSfGIxA+AG+mEb+HcEaJ0+ebHb+XP11priGaR8dhU/MCGzu
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
+mJedm4dpDnFgO1RfDzgRTvHsJWBRz1PWxoxLYGF2JbpZXaQw2PzWt3/BcEn
QdxD+Fr1i3HzmZ6vHNLd2inssbJHBLpsuDZ9LL35jqwbzWlJot/z/ws+OeLw
icXNHpeV01+98WOyWy3+0Ac49iRb/4g/gTwUHwHhFvf7kG+Y21+dOpqKrYT1
szLZW0CvQp/fizSXOPttxPYwPnlYZaedP7y2eSe51qaz6RAWVV+w2aurft6t
D9zb0ozdQY8p6efBGovXQm04pM+E62M+aWg17fX7dTt1fTZPe8FnkvOJ/YXr
KI2F10r7lcvn0JoTSYhNjJ59LvBJVANWH43iY12ciX5n/vz56fj4OH0uNVYk
drbVR2fhk5AXbfyG1MPAflcQnuq7gPkrG8ix43XKOH3Z0o+k78r47zeCz1V2
vKbrXvN33HomG0exj2VeLM/x3cmy7llDkssue3Psaz0f8YnhN9wP/OOQgVL3
jGnH9TWwlolmIqMcXkSMrPeBe3kSx4iBFnivdIB9chIfy/td4s+RyTLJk0T8
vJf7RkbVIjuQGz2HT6xe6+xRwBRcB8PXmfF7Fr8HX4/YNHCuDyx4rz+uweif
dxH7R93vLb96kY9RENkb8I3EnywOdIEgRsLsD/R+Rn+KO5K8cnuPbn0Ev+W+
B77FPv7pm5b5XOhgjYW+CN0LdT/k+G+JwxEbH1/ra2btjnmZYOuztIpPrN0o
ex/0EvnXV3i3o4GlRTHdtXlDKthO4uUOP/nNVPU/wfuUp8ayEThHcuwkLkvs
Jxwfa+wmgkWyNYF9tUg8ki8+C+cFnYF9ef79HNg4C9hW71p1K8XV4L6KWIsZ
zgLttH5KpRStIy+TwjVkaSw5FMZGN4V+Us9b/lyN7SfGvqfXNEZrVPcMrVs5
6nFRlXFkIYiXNOu/GsrWduET6eeHPn7S00/+t89y/HRxKcAoqHUPHGL9ODgv
8nmmyhFq9ugofGJt9ybWH/GvkEWD61Y5Xe1RovVIhieG9/9lpnOvJB1h947N
qdRfW7vyZuLZN1DDycR6yHpEPaPs9qnOg8iaX5Sfp+/At658KPq6W5+oQ4Vj
cKyXHcN1fHA+4hM7Z7CRQLZtXH8H6Xm4b9AOOgT09HvX3k7z8cMHfWzzp268
lr5DtimVhz7fBjyN2ilrbr8hHR99gd5Drg9oj9pdVk7pdWU0+uRNH+OcZPgd
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
BX9Jzg3lypq4EY53LhLeRkyz9D3ZdPcfcZ2QVZ/U/evNo7s5NhYxY6a2kKwd
8tdLjqnYvhr5d+LY3kqJruGrm/5LFG/U4WOG9hPEnAHvwVbFMnB9unngblqr
8CP0FaQvMMtC4o9in/Y3tLZIsWNgSL0QqYeLOX1PJkfYNj3m+c5iea0ZOdqQ
f+qGs8Oh/gnZrQN/Xw/gE7NXWBslfGSwK6ocmhT928l96+cK7PVexrbDv+Me
ih/iPoAt5uI0xSe9Fh+re7mRRRiIueMcOK6BUSj6/d0OxOzJGlju7P7B/hbY
38boXB+jOC3WDdDHA+d9cvtm5cHQFp74vSzQNUP7st9LTS+oTFYDVyAG9Bfl
51Kbs8O8njTFJ4hhwZrWHmcO62i/M5kL6EvWblgL/SVnOnL5d5z9iONiL9Rr
9fQqmnisYvqrN19UHpX58fuQt5PodVRNn6XsuO3bBunc8EcE/G1j3uv6uDqc
YujbSP/rNXyi/fgMPwBXgB52Hfm6MwXKwUdME9fQGqYYV/jSlY7FYrD2sHfC
b0ox644OiHm+dMH7db8N/DtOFus+F/l56vynbs2hVgrwLNU/mcL+1ZFjBvgE
9/31jZ8P6pbZIbVNNlEMGs+b2Cr3bt/ifrdssITvZ4RaKvg+91dk28uKT1zr
8Y5eU8nzlzuf2rOb3jv/5rWof3K11wsDu04nj2b4RI6JsAVi6sBTWmvf5qVr
/frhQGaFPNKe+BP3aGrfyNm/mOPNdu5UnxGGq/eW7tixI3jf5vm08ugkfKL8
KPR2OIB5rJDufvB+5S27r6DmBdek3qDfl5w7qjMV2x+zfe9Hj3+DPr9n7R0p
90MbIx2jz+mS4pu3/hOpRQvbJPIw/Trz9Rz5+KjfVPbeq89w3etDruem3ION
h2qGT2A3x3vI0eX60PXyy8s0Pz9BvOgMRt74WOjCIhdBm5B/+Xq43mOR8upk
DikfK8Oeu3ds9tdeKQU2MNiJbP1I0f9Re0rppPLO56jCzn3e5xfL3qSxsRl2
mHeR05FlDXEPGpGJqFMIe5z4W3bev4n4BnEOfFwYf40YFnwOv6vEEUlcFNXX
kOuw+mKF90dch/a+0fy5crjW3He2DqzhuOhjrmbhbM97q/SJeDev/aQ/w4aI
31LZEcXnoBYKcL7mISfPU94q1UW0MiGo7ziscgc2Wjk35SM4m7X3WZdSq5Oh
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
PQtr5X1R+h1HI+H5JFO/iaG9xW9kx3u7pAn3NOxspbBua9eE3m+oiwyYN8bx
CnpDdW+/5r+uWBR8QfUYm4x6IHw+xcxbTjLu347vIb+X/Qoh17fX7zveC6ny
RNn64qbYmMkTEnxuaOPkoqWv7EWu90/c+gqGbiSG5mY/WvpYjFLEm4aPLL5p
6Wc9FPIXLH2svktLxHca/hpWZvzWXNfuRd2fNZFl1i+me6mAOeuxJwn/XtG+
GeHc3aKN5Hm8SEexG5totX/mqx942uk+Hz0/turoxeut61qQT/G6XMvn5CP5
OTl3QGm/j/Gdvfp3MLBIq3/j9Z+g5wn6t1ZiPuwJJ5yWzZx5cvaB/3FarJvo
zU4+9c+p1odzajdt/ddy+Sft9ofNsZLYpYn9GHvb+h6adVGSSQ+1erX53NTa
EWZfxX3T7GOtGj9+4l/jvZXNj53IRzl8khSex2NA4UeO6diYUAsZLN8z69nK
p2IxqtsDHGPYi/Udd382+Ec23RPjO4t0H5gY11ifh7rQWfL8p58yO/7+UCZY
ou09jOU/SUx+7IDITG8XKPZXfGJ1TBL5cLva09aOcDSqNh3yW63iby5WmRSw
i9FrIqv1vkOvuM7zSGn6yJ71+GTs+TtmHYTO/Y4uig1M/p3M3ulXfMqYQ3zJ
hT4JDg/b+xly/CW/O2xkpcQ7OeYW5SPdV4v9Yfl+Ih/t/Cdtvu/ja6b2z9Kz
xP7pBD7p1L/x+U9+nF3wl4sIg4S6T+5Xrr2w0d8afpT7NvTT+dyvbb/hE5Zx
I4U8PuvXxCvnKFieLc4Bt7UmDmuwTViQB84/kXgfi+PhwxWf2Oc39oH4uPr9
mrrv2XUu5ip4/rY980RuWL9/o795ffeif+7e9I8N/dem0HfDPvV7YazPpedY
fB6aIdVT0XUtKb/4tfX8nSQr4kDJGWdfTpOfg/16zHs7fB60xTI2b7WoY61O
K+pCwaM1ldt8XVdDx/qM76UWbPkJwB/jog/TYjz4xGC21vkjNqfexhE47mJ8
my4uk2Q2tmBp6XxoNr/CyjDn29b3m3zPLCtjTVjwC8RasElQX9z+Gq1yw8Ne
Lu3/6+KTMfDJT7N3HDmV6g+On3lqtvorj2fXf+Wb+es3sxu+8q3s2pX3x/4u
leyyy78Q+8lyzU/7+E5Z+qDmHnI+TZ5Uu6DA99/f+gjVenpeTlQWN0KtJ+Yi
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
0fl1BEumYWai4pMo2xthFmmFMNGJsi7l8J0+717jE7eftHfceGR4F59MUHxS
8AkXfWWWxjpHoyZyUf0WvM9sHnWtoMe0/6D7rREbQyrgbpOT57HHgP8dnv/R
5PdJog8lyQRDSM8sI7NSfQbZ52XsVydXEhdLLsMbpfJPWvqzzL07mVvwH0v9
ePzM5gKLLyva+EWMYvdAkxzYUZ7/zXHY4ZMG7+HCfDzxoRjfisMqSVbOP274
xcrkejXTXhVjH6QHY4xz6rSj4hxcvv+aXo/3Sb2qtRrW5jB7hG0O1FdAzyFX
DLUiy2P9KWPq3W9so3P4mblHLevHcdGH+XGv/CfGj0U880o5Grfjj7b86+tm
nAwYKbnH6qGvG+oo9/zoxYIcHyBsiLVcvOA89c0U/G4LP3aW9I3De+DTXu5T
IDZXwK/o9xjiPgOyhx+8fRX9RtgTpg9KiXvfN3yitVAOq5f138Rzu/hkguIT
K0db/O3sohZ4n3v66Tn8ua35MnxsbTy8P6L2k/tc8kJeDfWWLWP0NbVLozy0
MSbhU5tjYs8r5uiyfZsWfDLt1q143jhyM0rFd4p2qdAo9p82vxm+a2ZKWx+Y
xS2ia17NJMdyNN4ezacz3lzM9DDEJ9aOtJhQ+hFVI97nubED4/OhuPyRJMT9
G8wXZb6fqN7cFeZTUO8RE3sJOTNDirVi/xPY6lwTjONl+vsuekWciK/LOQsV
0n9PBF6P+R2I48CnEnoDsj3TTzEh9AwcF32ED8aDTyx/DDmMPh79NiZ/jMW/
thda3WC7sv6HeC3kpVJsZRfPOdLfRL0OYjWhJ1JNnlVybKi/0l0U56G+R8g/
IZ/KFKKltdle3rg29Jg7e65cB7mys2LMnWJ5HA9qlIhP7Yf8E9nvIzrLdlzy
qYtPJi4+ief86pu5TFn5GTrwt3wmPspa9usdz2V71nw223Ndfs4zDzrcwrl8
v3rmgfzza7I9qz6Xn/+Mj6Hk5/3m9S3ZL752c37OP8jv/fzmNdmvh54WufBb
+9syI4tnjtu6HN6DLEu1T5nq2NxGO+eCbPfZJ8rxu3S7XiPq8V987ab4+Wx6
/Y9nvy62XLuD+DzKmV/v+MfsV09vMDJo7KN0/omxScM9D2UDj99BfTSo3xP3
ILG4jP0pcT2/cfu11KsAvl74YZGL/61bPkMYpcmGizLyp9WnsxuXLSYdA98u
+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
ezHHl+Xj1UsW0DNcdfnFcW70E+r/j8dUmWecyPOyv6OpJjraT5Cp4H2af2Jk
hMYJgg6UmE5D83BFnqWHyfwd449Q/BB0duj53Zu9/aOXYv1lJbvskvPCs8f+
eEG2Bv4EXSvRJ4VzaLZZJc4DFzwf7kNmi9eVh5x+NzaIYJHGdqGxq4sbC5+k
ievl1xQfkH6dO+T58Uqxj5iXgv3p6lzoXl7JytYXlaaP1Xdp2f72/Rn3QP2b
S86l+4WPAH1Y8Tfs8KIvALOhJQbTjj9S89w5DYE/tYeryk8fH00Uj5Z89tH9
J4niDXMv7V5VJsR5seQf2k57GzFD2C7wT4DGkBXA1DIblvPZytY/joFP9L5q
8lzAJOAr2F7aq7Ym+TFsK8F2dNja7UH8vubgdPFJZ/CJk1v15r34i/u+IjoV
fov//j8vie3/i/u+6vwvv3q2GN8pgU9S5GScHH0npwZ50JQjX/A9ElbfPxgF
1yBcEv0je5b/veS68H3z/f7Xy48bHBXW7xf33aw5s99eLzJnz4orox/lI3Kf
yPnl75fp/YijtP8k8jLsHJb9XAtYrz4Ze1RfonIlX0fEnHlWu/RIGbb5mSZX
Isat8BlkaIVk6NOKPSxOEpuXdU1N5QTdK/eObF6DSYdPIhbzPq4qxf3R52zx
xbz2CeXt4dl5HqOlM/7mmXqER+phPif+f+WiSzLbu5tn6l26gPN/WIckouvc
vPCCjlQMWcJ/MhLl/Ugh/mJlS1Hn5+cODzxJNahhD5nfbtT8HuLv2D4sto5s
PPRJ/X2Uq9+JM4rf2EqY7zKiV3g24EvGK/a7F551Js39RW5sW/6w/QbqCcXk
jpkxXbGs0GxHprHXJNN69HLPPtZ8wCLdmuVMzeyJRPS7XIt7wlifSj3gBMRZ
XnnyrkxihqRrTG+rtvev1xvVf8L5QXE9YD/9AXJygYc451dqSw1fWh5t8HPy
/Xm+7uKTzuEToR/7oU2dLvJCoX/f+usFIife+sSCoGfPvyDU/7L/ZPMDoquR
O/K7ek32FtO5Ob4zpD4FXC/V/Yh9DxyAvJZfPf0g4Z//eO7B7L9e+lYmc0v2
g37Z/Rfnht//iwvy31mvsZf8Wf/zu9+KOOO0gGUsPmnA97O4dUzoGV2LX+/4
DtUcAbPJua1wRoujPT5RvMF+MPhDkKtvceYZp51EcR7Jh6Geu3eSnffFqxea
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
fwhO3TUouT6WRyQfQvyJNbP+A7pPzAwFjb2Z71pZccjQTukyZv5JXHOpibRY
T3wjykctn9/teR8v6uKTzuITS2uVQcaGdZ8xP5o9b/FEamSf8JrK5/CdGHcv
+vytDC3MerUywvV82h88YHsA4LXYc8r4fGXfFvs3yJ62ut/4Hvk7hXjxWEep
/icy46RK8Z6mmWUiZ21+ZKI6qdD7Qq5p+9Lb2mDp1WZpw/SrGTmpvx/wmakd
ye8Hvm3YkZjVTvOTK1PIh737zW2S59Zx+Vhq/4yBTxraz8Pa4NILq1hXYPwi
Ppc41inX/TVt/rPds2ofmL1sazyKPQUKNStEK9of7N/iOdyDBZvmEDhK4hO7
lzUuZ/5v83IsvmcaNfqb9GJb/oj0aeJtjn/zrDojN+25IT5Y87zo6iZN39a0
8HyTJL6jc8OqKgsbpg+2yfuWvU7/L+gXG/9ysrOLTzqXf5I4ngh/84x29Yc4
mSm8NVCQb/j7VR8T5D3m8g7ieyODjt9cv8gizhmJ14q9Cfdr7NvuxTTKANYJ
DV2L0JdlQOUC73Nnbyk/OVvVrLO3hcY+StXvGD7ydpWd92fWXeQp026gYH8Z
vErnDgi2cD4Nez+8N0aqzXahwaqhZifYhfB18/z5Y6e/h2qJEJ8K2LPwWxP5
GAOfODvb8orxBzbLYstP/V6mRn9+oLOZcWT2hfBGnWOVvB/8XnH/lzir9bGY
57P4Jd7HIaHfLH3sGqej+E9s3I33oMMlLegl8249Jmyy6Vryh8c4TXI2VZuA
aR5+3/CV8Bh/h2W3tR/V79k0d3EiH23wieOpXYPKL2nin79YB2XsRNn/9J0W
tO7ik47ik+4xcY9S+ScT+WiSnywvhrLXtz6YDW5cSzWciqtUfx8S8pOfMb62
rC/uHhODPvS3/r/c/J3u0VnaKV1G7c92EPZPF5908Un3aD4mFT4xMQXGKOLv
5vOtrdrFJ91jf9KH/k66+ORQOrr45KD/6+KT7lH2ONTxSTFXx+ZAuDhCIZen
Kfd2Ih9dfDKxjy4+OXSPLj456P+6+KR7lD0OdXzSMs7dGOMzer+QGzHRjy4+
mdhHF58cukcXnxz0f1180j3KHpMCn+CV8gVNPqXkfyYmJyVRX8qhEtuhZ+zi
kwl9dPHJoXt08clB/9fFJ92j7DEp8AkdhT6pFpe0eq4uPuke+5s+9HfSxSeH
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
dByfpEp/phEOoV3DxG5iPtWq5ZeTHkGMFHwEewoxA84Lh5zsYR1T4AfeA5UY
32GeBx9WbJ6C6ESVo2sk/+ROV3fS7E8IB+MT5z9JVe5OivhOXQ+u1/W2VpCF
sMfAs7AroF/wN3IgmSbInxN/lrU1ZE0NvxqZWuHYgKE11ejE8zSvaHGzL62I
Q0c0r+2Q8Z3wWsTX0ebv8LqiXpvWo2+hk4X4HPsacbBVfZdnNyzLeSw/UDfD
virIX8QCenPsD/8m6zIcyym3uJdqlYVmuwY1vlMv+DCb/CcntpTLUpcX7Xr8
BvnCJP+izdGUf1bApgeTPsIv48En96j/T+yy8Bl8gyQHiacWE+aEL4v7U4LP
YJ+HfDnbQ3l79vBtnw/fAS+uuJxeXxG7KyGfS6VnSnP+ST1p9o0JvUy81Mrb
karGdxoWb04A3mlLO6XLmPgk7jXekyRHxH9S3Hu1GBc1/ifzftd/MoHwCet/
zs8wvi/Iop/v3GZk24D4PqhetWeK1NgBA6C3KMfDyW/m4qL276jXTF2qwyfO
F5fIHnT4xPkyq17Wxf+zbCnGd/R5Jj6PlvKfxGdjebXnjRcES3KfrwrXQ/aE
o4dyK+8RvsR7lOfMPTDqZp3c31bO9vv4jqV19M1wjE3k+y47W4ltTq2HXbNi
sWLbCbD+5WToWPhE9z50/GCsU0OtUlh7ze1i/yDXhMvaporBb1i2OMcnU7I7
Vy+ltcUBzIO6EKxz38K/ysTPVfcxdosLLW9SrvqHZuv74hNNvL+gkUiNXagT
L0Ojqu6pYq+Kg0XjfcAnnN999ZIFuq+jvgOWZH7qjXX4H+acujToSKzts/fH
nC1ag9CPl+Vrpbcn1hsHv1S4h6Hsxr4l9L7UAtj+bYJPFHs25dUVdLfEd3g9
Jov/pIi7o7+I1z7UempPA3n2/D2xo9PEx/2LMz+6+KRz+IT3qeiNqvAW+Ad5
smLjDautx38D3/dyHlLECM6O5z1mc0oixsH+4N+mfguET64wsYJEZALprujz
LNbcOZ+0+Q223Qc33ev0ovPjdZr/2hzt8Il9Jo5ZP7P+JtePS2aG0ZoOxbXO
MeWmdfF6tVx2zaLvhh4X3k5UfKlxG8YplVb1O2ZdOUeZ8mM5D8PGggy98Lo6
l9GVSZQfa33z/ExY+1kz369y0+rsEf0edArF3GhdA+1R3xr6pMReRAZ3Ur3/
UdMy7YWZhJhfcT1tb4eUbYU5vu6DMYqdH5TG/BPy/aisGOvgmuciTzuf+8Gi
D/PDOPAJDqzrrJnv1WdJE9OvQOkHu4xyloeD/mP7CHlhNkZm6cm8hfOorj5e
cxXb/zE+Ifdm7DGtL7bPWXPn8Brb/Fg5Z+QQ4K8S+ER4bVhj2cDxWJuXo+wP
+9XM/sjPP+OUkwI+sb4mstEH3XldfNJJ/4nxVUjewED22pZHQ//Bs09voRf5
e/3EP5XcniNdF2l8aeznRr0VU3PtKCNf37qePr90wXnye8PJM/Tex846Te+L
8x/i//EZzsG5mmOW+GdIlSchH5ryY92+ngD81+YoE98JOQcDtN7QXeinpc8I
38SAw3Pk04Bt9qT6jtetuUpt46hL1JYekHwV9FIgv0u8j+nTp2fvmvr/OFvD
xuTuWvlposFD6A3rZtDpuRZjsQ+hqCMm9DGm/8SsR1xr0AfPiP6VDjPYuXwx
d0QwfCOhWA++dyX1prmL9jVo8UrOe+hDxTntqAXmvQ0ew3fAc8InBp/s3PoA
fefSiy9oxusmP4mfAfsGPi7ZF23WBrp6OHmKfAPrVi3PqC/twZ7PuQ/4BM+O
fB9ghde3POJlh/UFNoJdJj7h6BdEXhAw5VtvbjM+kP6me6MehvCfxGsyrdet
/nQmM7WE3xPaK++c+o5sxozp/loFnmrlP3E+zk7zTlvaKV3GxCeS9x/o8tQD
t9KarkBd90jN07eRUJ041nfW8e93OKSVz7+LTzqdf6Lx7WBrb6f3KF7Q84fZ
Q1HecSxTct4ojyv4IbcbnL/hts9RThn4WutsYHuE+NAFZ8+jOkXpsxb5dkbs
A/X6loc81sjPQa/RHmOrB1vG92spYhC2XySOYT6bNPknEssPuoJjPJS3YG0o
iU1XSb/gHPg2mK9373yRalTR/yTgyiEjT8N1oMPwPetTQw8xvHf79ctF7/Dv
wBeD2kr0e6N5CMMxf9nOdyk8r8MnE2D9y8nQMfCJyFH1GbBfDz4U8lcVZ87t
Cjodfb9sX5K5MSaA+J2bI0I6bYjex+fQk4xNQ4+iSo6JTlfZa+6Hde9LT9zj
cVRq9o55VlzrxmWLM6cbzLkuzzDunU8tmB97rlfouVyvT96jMm/oVad7ZCa2
87lA9rzSwm9qZMYuM59vn/wnwUeMez9x5vti7NScmwbsjv546JV3xmknObuK
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
1xgLr12hBtfRuXldm/wGDX+f3keZNPGq5sX4viOBF2vSWw61sc5PNmLpOkB+
ENTqoVYC9WDwb6BHMf7PGITyZC3vxjxR1Bs9evu12Qkz3699HvNzMJcI/6f5
Fs4HVc0+cjLPejNx5HqBPpZf0nHkn7Cukl66BZwXZZfG7Ar73PiVfCwiMXE7
9k0WrmXkov1djSNVC7LN0N3YAJMWn9hz6Hn7m21ka/cKTxRoIj7ERPaW8lYX
n3QyvlP0oSgPMM8MCY0tzYR/0ihb4mxjyc1Kjd+zUdhzxVrzWH8uOMnUhHDe
vNyr+HmK9r/ds4cJPon+ffeezbN061I1a8fvDfl1cH4Nk2/EdraZcSDXGjbr
T9/RXLWAe/r971o6Fp53suETxvmUi8X1O2bOashJNTa5yY/k/C0XYxFfCdsS
/V4+23sSmV31ctvEX4P+s/OuE40JSv6EzgatxDxU75+pOh2NHh2UR7ticYHe
QSegNgz+E9TqBhlh+TiR50HeSsjHvYK+xzM37li9TNaQ5czUaUdks44/Lv5f
c2McfawuS8viE50VoDYc97I0a2VmtijGLKxRPZ7bKObWsK/HYqCCrCK61PR8
tu2Jntsz7w8o2H/pJMcnvL9GjN6Qvc/X0nntQf9sV71GvLE9rvOQxsMNL3Xx
SQfzY1l+Nfkl1L+C+tQw93YRzdZELy+pj2uY7+1CTetjNJfc2m9F/flPT30t
+8G2DVmxHi+cF7BFmO+5mHQW9agX2ez9BIczPnFYknFfXHPUP2LtKE8g1xVP
P3BTrhu2OruO7Xbr04ReQH8J0Bq9Ltat6aM6ZbXjdxTWOqFrIOdxba47MGsH
30WvKsqNtLJGcmBq2eGBT/i5k0zyT0wtI/qEolcb+pBg3datWpq9hj7qsj42
5zFxe/+n1adob1Ndrei0FnHT+Bn91u1foPpdrDPqamjecV2xCOm6wrOpTOgn
vECzqE2uGs9XCLp6R3bB2WdSn5Th6ka/Dsb2uSzOwPj+lsey5/K9hl4sYRae
6vhdlKvSG/uDVGl9emNfHexjjonRbNGeXuq3pP59w9/7gE/Cd/qjDVCl9Xrk
1muzNVdfTn104UdC3wXFaIz3bK5KoBt6C4GXmCcRz6IZ4ub84twrfB89F8G7
PO943Zor6Vr2nuW7HPsZqbpnn8z4xPr3BKcZWxr7Y/niS+J8pFnUMxR0oz1E
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
OdYyIZ4Km2Bu5Kczkau75OPiB1lz9RKyw4QmpocTzgt0PknqXh+inPWAUyqS
nxe/J2vAdqGJhzG9rE/Z1smlY+ETg1lT4yNnurOfbFjj+i4PxuIY91r1v3OA
8Il+Puhyc7B+6Auoe5qvZfJKWuYJ9Ou53fqdEvjkx4RJ2F9COOM7/xxxyY+z
p77TED8JYxSLbdriExcnqQpNQvyuovnmUX6BtmecdjLxE/b77BPeH3s63i1+
SvBbT8Xa8f1OJuIc5FRS/kncF6EOrJIN155R2Si2ZL+fR0h2xg5vU+w1PrF7
0vZtZN5PMsHYZBtt97rQ8qX4Cvxsrib/Cs2fKsiJvcQnwkf5M1AdAfpO0Mx3
i+GGggw9LfTyRD4e1l96yuTXmTZ1WnbMe4429d5GLqZKezuDbO31V9H6PnL7
tYX7Cr0iwlpoDyRZFysP9gc+YRwVY/fhmXZkbl+PYiMdcHxi6Z+vC3A8no/m
z8SYJ/s20Jtk7odmB/yY0wo5KsQj4odOsssWnEP45FML5pMP5oZll2erV1xB
+o5m+C44O+P8zdeef4RwJ+WpGF+k0krnRaqt2K85rs4PHmRFT++UgE9Gqb86
EIfGfLR3jvDpAcYn6EVTifU1di0gf4BPYKOfcdpJJA9RS0A+yBgXYMz48O3X
mXsPa331or8SzIDvIuZHfq5IjyPza8FHxnjA+WniXgq4od+s0Q5vb6XKb6PH
d6qRn30+qPOJG/mvPuft/lzCQzUncw4uPgn7gXtdhxyvI5X37Iwko/OCv3DI
1P8nTsZ18UmZ/JF69sTWev76zwGLbPuJYJIntv44//+/CXYBZmFMsnlLCf8J
74Ndg8oHOQ3XrVpOvEW1w85/nkSsEfYz7Auch54bvA+I39iON7a42q21XMZO
kXgCjjtWr6BcS/C89NcwvZ6tD0J8Oa326DjxiWCRETtvzMySdVhE7Vin50YM
P9t9b3R70QcjMmUf8YnYZfn7kIdYww23Ms10np/6e4f8usQ1+Oifn0n6bRdh
m6JsqOqzGBsWtZXoI4DaBY4LKr4zPS5h33EOmonBu/qLvcQnTTGzRn/W5KsS
f80Og70sDttXGToGPjF2G/8e8gr+BFiw2JeQ1ycNtAt29YkZ291vvbmV6sal
d4Y5ergvRk7/kMMc4lzQmciRdf4ckdH2d19VPWNqsMTfRfcwGPwx0he22f+1
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
+GgVcUcyNzn5iUIczvWKkHiz9+8P8ckM/Pb7J2rM8Ux18Ts+YLmykee+WZ3x
utdX/3XrLdaDh/BIjVHA49YXPgk5JIWtHfgvkDeF/Y37qiWZxZpl/doku9zy
kEqJddSylPyVSc678Yn3Y/Df4KHAecGtj7WPmhrbgwXPdN/zkeET0wXiK+d9
7UTay6gPTfBDtqorL7uUdDzs94uJH7xR7altYNT16/yAT16vTbxtQc5cz/o+
dGtf+Semqzq0l2iOvvHEim8BfV9QGzMic0b70rjIZn2uCy94E/0WeafMF9O2
/RA5/MgBxtgo9rB9bZrHDb/dsO69FDfZ5nnY9V5Dbm1v3dKFT9y60N9Rb9f6
GYhPz569JXkCaT2hdlj7xWgfS4rn1OsH9u4aqRPCmLzx7NfRs/39vj3Vlg3r
LLfl0N5b0jmnvf7qEbfsiU+cfAkmgy1N/Vzq43bp5afPhwP+kwbtea9xfLHe
x9Ehnwlkk+s5m24/6VTJz9EyfzbmEvJ63uvPqtac/XrJRXAxJY8b6+d89vE9
kvd9omEa8Nr+UnuV5HlNi/lYoP/kpef/lvAFuOi595fzKU0W5FuE7INf23Mz
Y2zBC0J9Pmp9QX7csmUyBxlDrxv89hyrkfd6jc9B/VZHGla7C1mbT27nbPiE
/WNp/lFjw7UW2j+Fucuph1C9fp50fRNwb+jJZL28pP+errezBM8Ql5D3/YlO
6itGtWD/Cc+F+sOBs/B6z63XO9nskZOcyfUQn/Q+qPZ43wQd9z34bPWZm7Wu
eFP1l9d9rfofd/+Ycmo1f0Xre/S3ffUvtvXWNkzxc/EVQK5efvGA08fqs+/U
umo/+abhN0syNVrjk3N5j/E56jPhkymX6y7fe2+tB4FxcS8nrVqV8sXz+Oyr
4T9R2bS8lVHKQ8FviCdx0ufFcM7vI3ffQrY79hHeq9nmgY0JOQVWB1cRYgfj
kCXvK5jsIQcLwCe6b0Ln4VoNstFOY9tf/Rt0XdYd//LiftJzt+/YGubm7l3s
T8DerzEyu47E18FhDd8Z9XYJ++8YrQHsY88+fj9xHWDvfVl6POaxp7Du5sAn
Kdagc9AhrME1jg7ryefet4MYCe4VdQPQ6fgd4eyS7wU2FPQVMCT855SrQnm4
P6HcJcxfuL7V/RRd62kmfGI5By5GQ73fa/1Pe10Yh4TxcT+b6r3i2cfv7Vo7
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
R45wz94LL+D8As3rgm3MvM6qL1gm7tv1V8Sxht9BF8Nu0n0RnJTPA8+QrmmT
/sT7zFdVhPXDssnnvO26zfQ9sr1Ktm2WPT6xvQM4gm1JzpVsSizglOpttf5T
rlscv1vvC8/uu8fFbdhu/+WLB0TPnsD9DDBv9Z6yevXpNN+IK/zdgT10PeI3
oP3zQr4PV8vl97Vn9t9L9jnZKPncBl4TPpYcPsn2b332l1/YR1wWKkfgNESu
yRnSBxs+Se4VxD4G5eNn/tIi5TxZvQ3P/+6d10hM7bpq9Rmn0r4Y/QrJplYZ
OFlsgyAb0k86l8OG+k8878x4Xo9SsL+zwbjkR1o3JLgBewE4z7AuwOFL55HP
sF8AL+X+mLSu5DD+jOSXs/OY/yCbHz8fZb/xHZ2vJyzvg2PT50nvh9/g/tno
tyDzldvhqFEmTupark5esYJztOrfot6K9OHKk6rvfv3mSvs4aE4f55Elmbcx
kLGH7DXFP0DvT7cczo177VLFJ1GuCtFDbcHmDcbmlhdTVBpLZRuX+1+ZXFnu
le5/qfZyiE8GFd8p4n7h84REVsG/CWwPrA4uV+xZiOHRvq9rZML17hQMDw4T
cD/jd4iZIg6L/0PWGVvwdb93540UM6B8lcAbViQe5MkW2Zk7t13FXEXKO7vs
8UmSS8/jgZz/23Zg7N9Kcwa7FGNHtQS9ZLtsmd2HOMHWjetJh+J3yE0hbhPL
peNYz/atVxL+8DpP81Q9RkEcb9cO4d6cas86/ksNn6S8yOQPYD3J/WjRjxC9
AJDfulbGGvxRsNnTGHSqR79+C3F5IndL956QdyFyg3pJ5EJ/49ZP0X4JbnHr
d0K2h69L499+7+ufpdwHOrfPjfTxFNnvG5of63MwbF2kHibAJfgu8fxqHbvt
m+z73LrxT+hcwGq6ppFXrXWDOOC3RRxs/NDDwfeD3A6sFc9lnPCL8wv7+fH7
XTkffNKxc33nrs9WW69aTz18YacBS9x+3abqV8//wH6X75X4//+tx/b+L36i
+hD1gjyX7DXw1SCHNvip6t/svmEL7Zd57nfKy+F7g+yh5ou4Xd01Q73sEscn
AT9bzkiL7C+qI5J15+NeeQwMPiyqhVaORG9TyHWG+GQw+MT0i6yFNN+HXKxF
+HQmn4prpqsu2XNsaJ2q9gUXPBr8a4XDDVJDqTqudJ+XRVo3ea7dMscnliNS
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
+Z/aca06LO39HgkrjnbPO/02cRqqbCafZp5D6M7v9LPFBnO/DPlXXG45+nQd
N3vcwvwnnnsk2tZuDmye07yr7TSrfJR+L81iZi4G29UL1WxC8clpDHzyINVa
IlcPORZ8Ptcf1Pc0OB78X3PgE7+mc39J8F/59TzDtfxaD/6VIT5Z3PjE7V/R
Z1kkvOF92Jb/kMVPM19I0q/tuD8ZJiocfnHrzK234Mc2+W67/IWOywd1dpC/
xiI+5vaftLp1mH++XnYb+e5djCbE2LMejHYu/W4n6TzH9RVxY26Pp/yGpE/F
HocOn3a+1CmXF3S82Ohz+k+S7932LB0L3w9wMjumvO1XhPlK33d+ReHE4Llt
pbHOcsM9ZrFzuBzzgGG11sOexcUtjgP5CfOjzzQffFJmnGc6d+aLGnW+R78n
Ol/ULPJh82YYw8+7kzvxpwRfmMcneh19v/T9AcdEzrg/BZ3jeKm/6sN/MlMc
J9jE3qY2Ocp8KBmOH+KT4wCfhPnTw8XNfT5rHjfohWP1M5+f6WNCfr9Uu83r
Cf2+3pPG8l0cx+e0e3sz2RJOrgctf3McfeWf2BiPhvzKtOcXaX9zWEQ/7/Jp
Ovuq254bjXuTt13896adfLvvKZ4N9slUkfJty8Jw0KDHvn8dOjM+8bihK8c7
x/tdsZdWXKfiv4/n0Nzojs07908ai3Ma/GJ6dKJdYHtp4h2zfFyLQ0Q7fOBj
P5/5cfKCv/vCJz6WFmTI58710H89cl17y0ePPdPrTOefTriy+/zpOrKuxnMs
VCQ8pVh10PPS19yleek3vpPbuEHX+N+V3bqv6zzy/aWOT1555d8qfaYn9gk+
ueObhBuO5gFsAlyi/9+1+1t07X177x782hsecx5JJh+VeIfThceDf3Y5HG4P
27JpK81X2O+Hx2CPKd63zT7Be7LnbDZbrUg2dIibLIL7X86Hs2W//IWbab7M
VjsW8iXXOSBrBfgEe/mg8cTR/Hcs/ScPf78+9vEBrEL+k1p/Hnjg7jT+w2PR
Hnfc+vnqmk3bqn9qfTdi/uHcLY6D9Nhh29Mg173iO8NjkPPj82jSZ2oTP7H3
Hvp/jJkNj0VziBx96Qufp/ki/8kxmyfWtepr23/gCfMzLAUfin+GV155hf7e
v38/+YGBT4AZjuahfhPCKjVGwTWBT/bvvVPmfXgs5uNLt9xMawUyaTEcnx8w
PAZ7aCxKcjQYn2ztjqcNj8HNj8qKz7+p33/iwTurj9VzBZyiOEZ/0x3PGR4D
OdSPUc/JHbfcVF29ZRv5kq3G4ajfA18D+ATX3ref8Qn28qWGT/APT6X4BL6M
bz/+i6N6qB9FMQrwyeZ6nA/s/dpwjzsOji994cbqmq3b2KeZ16cugvsbHkWo
J9tM+Sdbq2T3DY+BH6HePXFEsk28tXoCulDmL/xOcz2Gx+AOVwfBuXjXsi60
+MvRPjq2Vq7Zyvkn1RKM76jvhPHJE+Sz33XHQ0c/N3Y/x3Ue2T9h8R1cO/UH
HB6L+UDM9WP1fP3jocck922WXLDhccwPXweM/CDoz6s3u/yTRXCPy/3oqq2R
msHH9+4h/wnHutshBpTX7AyPQc4f823t/sJNtHexLmwfEz2o8g0Me82mLZJ/
8sqSwyf675Xq36sDB35wzPJj2Xei/pR/InwC/8m+B78mc7AIMPLwmPG4o7YZ
ttS4/X8V33GcC1qDO5y/gR++l1B9XLN5E/m72Nc1Nrj7Gh50dPHIuBrqH+y9
s9q8eTPZalYb47nkh/6vwR9WKzjGunDLFpcfO3oM7qFFNXP7XH6s7uVLIb6j
/6pXKvGf/Ds946art1XX7biV4i1H89i1+5v0ekv9Cmxy3fZdhEGBRWE3QDaH
x+I9brj+BsLt37jzdpIRHMgdOkB/D+dv4EctQ088+HWbE9gdWhOCGOrA72+Z
H5AR2GL0KnOif3/p1s/QfCHHS7//BH1+F+XMDvreh8ddMme1zqtlDLoQ8Tjo
QsjdvmN0D48/iLXyObq21RcjELIE8Inl+np8su+HNQ7cRvk2mu9/1I5r9G/m
ZaD6R4mRw3Y46tcfHq/C/HHNKnClzqO+N/D7W+4H5qDGj5Bl4EiWq60U4xn4
vQ0Pnp8tSc/p3GzZ4mXpWtKFHxO9+DF5f7P7fHgM5tB8Ltjzpgs3qy48hteH
XG/5eAVuEN3PAVEGiS2O1r+f/eznhMMQ58Hr8Bgew2N4DI/hMTwW94G9+1hi
hf8POFKF9A==
     "], {{0, 473}, {552, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{313.83984375, Automatic},
   ImageSizeRaw->{552, 473},
   PlotRange->{{0, 552}, {0, 473}}]], "Input",ExpressionUUID->
  "94b3742b-57c1-4cd6-acc7-c46f0a5598f9"],
 "\n\nAmino acids:        "
}], "Text",ExpressionUUID->"7966c5db-10b8-455f-985c-96961bb670f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ChemicalData", "[", "\"\<Inosine\>\"", "]"}], 
  RowBox[{"ChemicalData", "[", "\"\<Adenine\>\"", "]"}], " ", 
  RowBox[{"ChemicalData", "[", "\"\<Guanine\>\"", "]"}]}]], "Input",Expression\
UUID->"59f6bd52-14d0-4fd4-b3bb-3b27f5ff9c6a"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {467.83000000000004, 14.97}], 
      LineBox[{{448.7927390941019, 8.839527163361687}, {
       420.52, -0.2649999999999997}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{420.52, -0.2649999999999997}, {373.21, -15.5}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {467.83000000000004, 14.97}], 
      LineBox[{{479.57188995147976`, -1.2203681356335796`}, {
       497.01, -25.265}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{497.01, -25.265}, {526.1899999999999, -65.5}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {467.83000000000004, 14.97}], 
      LineBox[{{474.0421993026248, 33.98074906005728}, {477.46000000000004`, 
       44.44}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.08676503507910369],
         FontWeight->Plain], {487.09, 73.91}], 
       LineBox[{{477.46000000000004`, 44.44}, {480.8778006973753, 
        54.89925093994272}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {467.83000000000004, -145.97}], 
      LineBox[{{448.7927390941018, -139.83952716336168`}, {
       420.52, -130.735}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{420.52, -130.735}, {373.21, -115.5}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {467.83000000000004, -145.97}], 
      LineBox[{{{475.54838995147975`, -126.86163186436642`}, {
       492.9865, -102.81700000000001`}}, {{
       483.5953899514798, -132.69763186436643`}, {
       501.0335, -108.65299999999999`}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{492.9865, -102.81700000000001`}, {
        522.1664999999999, -62.58200000000001}}, {{
        501.0335, -108.65299999999999`}, {530.2135, -68.41799999999999}}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {286.6, -165.5}], 
      LineBox[{{303.9208810206263, -155.50064598739965`}, {329.905, -140.5}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{329.905, -140.5}, {373.21, -115.5}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {286.6, -165.5}], 
      LineBox[{{{266.77961894742526`, -159.82977999273976`}, {
       240.8, -144.83}}, {{271.77961894742526`, -151.16977999273973`}, {
       245.8, -136.17}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{240.8, -144.83}, {197.5, -119.83}}, {{245.8, -136.17}, {
        202.5, -111.17}}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {200., -15.5}], 
      LineBox[{{{214.8203810525748, -1.169779992739734}, {240.8, 
       13.830000000000002`}}, {{219.8203810525748, -9.829779992739738}, {
       245.8, 5.169999999999999}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{240.8, 13.830000000000002`}, {284.1, 38.83}}, {{245.8, 
        5.169999999999999}, {289.1, 30.169999999999998`}}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {200., -15.5}], 
      LineBox[{{200., -35.5}, {200., -65.5}}], 
      {RGBColor[0.4, 0.4, 0.4], LineBox[{{200., -65.5}, {200., -115.5}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {286.6, 134.5}], 
      LineBox[{{286.6, 114.5}, {286.6, 84.5}}], 
      {RGBColor[0.4, 0.4, 0.4], LineBox[{{286.6, 84.5}, {286.6, 34.5}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {286.6, 134.5}], 
      LineBox[{{269.2797802551531, 144.5004993870414}, {259.755, 150.}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.08676503507910369],
         FontWeight->Plain], {232.91, 165.5}], 
       LineBox[{{259.755, 150.}, {250.2302197448469, 155.49950061295857`}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.08676503507910369],
        FontWeight->Plain], {286.6, 134.5}], 
      LineBox[{{303.9210261483136, 144.4991026182071}, {313.45000000000005`, 
       150.}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.08676503507910369],
         FontWeight->Plain], {340.3, 165.5}], 
       LineBox[{{313.45000000000005`, 150.}, {322.9789738516864, 
        155.50089738179287`}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{{378.21, -15.5}, {378.21, -65.5}}, {{368.21, -15.5}, {
       368.21, -65.5}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{378.21, -65.5}, {378.21, -115.5}}, {{368.21, -65.5}, {
        368.21, -115.5}}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{373.21, -15.5}, {329.905, 9.5}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{329.905, 9.5}, {286.6, 34.5}}]}}}, {}, {}},
   ImageSize->{{0., 115.2538}, {0., 123.29938207805996`}},
   PlotRange->{{177.5, 535.9757}, {-195.5, 188.}}], " ", 
  GraphicsBox[{{
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {104.61, 41.32}], 
      LineBox[{{104.61, 21.32}, {104.61, 0.08500000000000085}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{104.61, 0.08500000000000085}, {104.61, -41.15}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {104.61, 41.32}], 
      LineBox[{{87.29085396297108, 51.3223587492184}, {68.91499999999999, 
       61.935}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{68.91499999999999, 61.935}, {33.22, 82.55}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {104.61, 41.32}], 
      LineBox[{{121.93068407902106`, 51.319695147090535`}, {140.335, 
       61.94499999999999}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {176.06, 82.57}], 
       LineBox[{{140.335, 61.94499999999999}, {158.73931592097892`, 
        72.57030485290946}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{{106.6785, -44.7195}, {
       70.98349999999999, -65.40450000000001}}, {{102.5415, -37.5805}, {
       66.84649999999999, -58.26550000000001}}}], 
      {RGBColor[0.291989, 0.437977, 0.888609], InsetBox[
        StyleBox["\<\"N\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {33.22, -82.52000000000001}], 
       LineBox[{{{70.98349999999999, -65.40450000000001}, {
        52.59293074179571, -76.0617047935553}}, {{
        66.84649999999999, -58.26550000000001}, {
        48.45593074179571, -68.92270479355528}}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{104.61, -41.15}, {140.45, -61.83500000000001}}], 
      {RGBColor[0.291989, 0.437977, 0.888609], InsetBox[
        StyleBox["\<\"N\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {176.29, -82.52000000000001}], 
       LineBox[{{140.45, -61.83500000000001}, {
        158.96797825282655`, -72.52262221427785}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {33.22, -82.52000000000001}], 
      LineBox[{{
       15.90584405418868, -72.5090058493611}, {-2.5549999999999997`, \
-61.83500000000001}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{-2.5549999999999997`, -61.83500000000001}, {-38.33, \
-41.15}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{{-42.4535, -41.15}, {-42.4535, 
       0.08500000000000085}}, {{-34.2065, -41.15}, {-34.2065, 
       0.08500000000000085}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{-42.4535, 0.08500000000000085}, {-42.4535, 
        41.32}}, {{-34.2065, 0.08500000000000085}, {-34.2065, 41.32}}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{-38.33, -41.15}, {-77.525, -53.894999999999996`}}], 
      {RGBColor[0.291989, 0.437977, 0.888609], InsetBox[
        StyleBox["\<\"N\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {-116.72, -66.64}], 
       LineBox[{{-77.525, -53.894999999999996`}, {-97.70026385504065, \
-60.4553709103838}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{-38.33, 41.32}, {-2.5549999999999997`, 61.935}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{-2.5549999999999997`, 61.935}, {33.22, 82.55}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{-38.33, 41.32}, {-77.525, 54.07000000000001}}], 
      {RGBColor[0.291989, 0.437977, 0.888609], InsetBox[
        StyleBox["\<\"N\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {-116.72, 66.82000000000001}], 
       LineBox[{{-77.525, 54.07000000000001}, {-97.70097746798163, 
        60.63317675001316}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{{29.0965, 82.55}, {29.0965, 123.785}}, {{37.3435, 82.55}, {
       37.3435, 123.785}}}], 
      {RGBColor[0.800498, 0.201504, 0.192061], InsetBox[
        StyleBox["\<\"O\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {33.22, 165.01999999999998}], 
       LineBox[{{{29.0965, 123.785}, {29.0965, 143.36999999999998`}}, {{
        37.3435, 123.785}, {37.3435, 143.36999999999998`}}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {-116.72, -66.64}], 
      LineBox[{{-128.48285734821974`, -50.46485898035406}, \
{-140.98000000000002`, -33.28}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{-140.98000000000002`, -33.28}, {-165.24, 0.08}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {-116.72, -66.64}], 
      LineBox[{{-122.8945401021457, -85.66301381293181}, \
{-129.45499999999998`, -105.875}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {-142.19, -145.11}], 
       LineBox[{{-129.45499999999998`, -105.875}, {-136.0154598978543, \
-126.0869861870682}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{{-168.577, 2.5060000000000007`}, {-144.317, 
       35.876000000000005`}}, {{-161.90300000000002`, -2.3460000000000005`}, \
{-137.64300000000003`, 31.024}}}], 
      {RGBColor[0.291989, 0.437977, 0.888609], InsetBox[
        StyleBox["\<\"N\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {-116.72, 66.82000000000001}], 
       LineBox[{{{-144.317, 35.876000000000005`}, {-131.81755134286502`, 
        53.0691822625142}}, {{-137.64300000000003`, 
        31.024}, {-125.14355134286504`, 48.2171822625142}}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {176.29, -82.52000000000001}], 
      LineBox[{{193.61068407902104`, -72.52030485290948}, {
       212.015, -61.89500000000001}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {247.73999999999998, -41.27}], 
       LineBox[{{212.015, -61.89500000000001}, {
        230.41931592097893`, -51.269695147090545`}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.06853088961318425],
        FontWeight->Plain], {176.29, -82.52000000000001}], 
      LineBox[{{176.2924242424064, -102.51999985307623`}, {
       176.295, -123.77}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.06853088961318425],
         FontWeight->Plain], {176.29999999999998, -165.01999999999998}], 
       LineBox[{{176.295, -123.77}, {
        176.29757575759356`, -145.02000014692376`}}]}}}, {}, {}},
   ImageSize->{{0., 145.91959999999997`}, {0., 125.89972105427208`}},
   PlotRange->{{-177.6294, 265.74}, {-195.01999999999998`, 
    187.51999999999998`}}], " ", 
  GraphicsBox[{{
     {RGBColor[0.800498, 0.201504, 0.192061], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"O\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {440.26, 73.69}], 
      LineBox[{{452.7522692310102, 56.429233661877234`}, {469.575, 33.185}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{469.575, 33.185}, {498.89, -7.32}}]}}, 
     {RGBColor[0.800498, 0.201504, 0.192061], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"O\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {440.26, 73.69}], 
      LineBox[{{452.81259959734916`, 90.90694190232243}, {469.715, 114.09}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{469.715, 114.09}, {499.17, 154.49}}]}}, 
     {RGBColor[0.800498, 0.201504, 0.192061], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"O\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {674.85, -35.5}], 
      LineBox[{{694.3302620164724, -26.868068762501586`}, {703.195, -22.94}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.05212093280024903],
         FontWeight->Plain], {731.54, -10.38}], 
       LineBox[{{703.195, -22.94}, {
        713.5372010949369, -18.357250105753845`}}]}}, 
     {RGBColor[0.800498, 0.201504, 0.192061], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"O\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {675.23, 182.06}], 
      LineBox[{{694.6790357984104, 173.35793980534103`}, {703.525, 169.4}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.05212093280024903],
         FontWeight->Plain], {731.82, 156.74}], 
       LineBox[{{703.525, 169.4}, {713.8460589883196, 
        164.78206019465895`}}]}}, 
     {RGBColor[0.800498, 0.201504, 0.192061], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"O\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {535.48, 323.84}], 
      LineBox[{{521.1957475008595, 308.0301620609155}, {501.96, 286.74}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{501.96, 286.74}, {468.44, 249.64}}]}}, 
     {RGBColor[0.800498, 0.201504, 0.192061], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"O\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {535.48, 323.84}], 
      LineBox[{{528.9300386927782, 344.1153261870978}, {525.95, 353.34}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.05212093280024903],
         FontWeight->Plain], {516.42, 382.84}], 
       LineBox[{{525.95, 353.34}, {522.4731853293424, 364.1024378577542}}]}}, 
     {RGBColor[0.800498, 0.201504, 0.192061], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"O\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {286.6, -382.84}], 
      LineBox[{{{281.6, -361.5329390783403}, {281.6, -332.84}}, {{
       291.6, -361.5329390783403}, {291.6, -332.84}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{281.6, -332.84}, {281.6, -282.84}}, {{291.6, -332.84}, {
        291.6, -282.84}}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {467.83, -102.37}], 
      LineBox[{{449.086635016809, -108.40519318437947`}, {
       420.515, -117.605}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{420.515, -117.605}, {373.2, -132.84}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {467.83, -102.37}], 
      LineBox[{{479.39050468490615`, -118.31026408489372`}, {
       497.01, -142.605}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{497.01, -142.605}, {526.19, -182.84}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {286.6, -82.84}], 
      LineBox[{{303.6528208942562, -92.68573954633729}, {329.9, -107.84}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{329.9, -107.84}, {373.2, -132.84}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {286.6, -82.84}], 
      LineBox[{{269.54717910574385`, -92.68573954633727}, {243.3, -107.84}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{243.3, -107.84}, {200., -132.84}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {286.6, -82.84}], 
      LineBox[{{286.6, -63.14895412463093}, {286.6, -51.84}}], 
      {RGBColor[0.43333333333333335`, 0.4666666666666667, 0.4666666666666667],
        InsetBox[
        StyleBox["\<\"H\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.05212093280024903],
         FontWeight->Plain], {286.6, -20.84}], 
       LineBox[{{286.6, -51.84}, {286.6, -40.531045875369074`}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {467.83, -263.32}], 
      LineBox[{{{475.36556329360144`, -244.46105322362843`}, {
       492.986, -220.162}}, {{483.41356329360144`, -250.29705322362844`}, {
       501.034, -225.99800000000002`}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{492.986, -220.162}, {522.166, -179.922}}, {{
        501.034, -225.99800000000002`}, {530.214, -185.758}}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {467.83, -263.32}], 
      LineBox[{{449.08721294125576`, -257.28301226301886`}, {
       420.515, -248.08}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{420.515, -248.08}, {373.2, -232.84}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {200., -232.84}], 
      LineBox[{{217.05282089425617`, -242.68573954633726`}, {
       243.3, -257.84}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{243.3, -257.84}, {286.6, -282.84}}]}}, 
     {RGBColor[0.291989, 0.437977, 0.888609], AbsoluteThickness[0.55], 
      InsetBox[
       StyleBox["\<\"N\"\>",
        StripOnInput->False,
        ScriptSizeMultipliers->0.8,
        ScriptMinSize->8,
        FontSize->Scaled[0.05212093280024903],
        FontWeight->Plain], {200., -232.84}], 
      LineBox[{{{195., -213.14895412463093`}, {195., -182.84}}, {{
       205., -213.14895412463093`}, {205., -182.84}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{195., -182.84}, {195., -132.84}}, {{205., -182.84}, {
        205., -132.84}}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{594.05, 23.42}, {634.45, -6.04}}], 
      {RGBColor[0.800498, 0.201504, 0.192061], InsetBox[
        StyleBox["\<\"O\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.05212093280024903],
         FontWeight->Plain], {674.85, -35.5}], 
       LineBox[{{634.45, -6.04}, {657.6340724427546, -22.94600926147403}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{594.05, 23.42}, {546.47, 8.05}}], 
      {RGBColor[0.4, 0.4, 0.4], LineBox[{{546.47, 8.05}, {498.89, -7.32}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{594.05, 23.42}, {594.135, 73.42}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{594.135, 73.42}, {594.22, 123.42}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{498.89, -7.32}, {483.36, -54.845}}], 
      {RGBColor[0.291989, 0.437977, 0.888609], InsetBox[
        StyleBox["\<\"N\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.05212093280024903],
         FontWeight->Plain], {467.83, -102.37}], 
       LineBox[{{483.36, -54.845}, {
        473.9462755227501, -83.65293662468129}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{594.22, 123.42}, {634.725, 152.74}}], 
      {RGBColor[0.800498, 0.201504, 0.192061], InsetBox[
        StyleBox["\<\"O\"\>",
         StripOnInput->False,
         ScriptSizeMultipliers->0.8,
         ScriptMinSize->8,
         FontSize->Scaled[0.05212093280024903],
         FontWeight->Plain], {675.23, 182.06}], 
       LineBox[{{634.725, 152.74}, {657.9702456480894, 
        169.56633261083766`}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{594.22, 123.42}, {546.695, 138.955}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{546.695, 138.955}, {499.17, 154.49}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{499.17, 154.49}, {483.805, 202.065}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{483.805, 202.065}, {468.44, 249.64}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{{378.2, -132.84}, {378.2, -182.84}}, {{368.2, -132.84}, {
       368.2, -182.84}}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{{378.2, -182.84}, {378.2, -232.84}}, {{368.2, -182.84}, {
        368.2, -232.84}}}]}}, 
     {RGBColor[0.4, 0.4, 0.4], AbsoluteThickness[0.55], 
      LineBox[{{373.2, -232.84}, {329.9, -257.84}}], 
      {RGBColor[0.4, 0.4, 0.4], 
       LineBox[{{329.9, -257.84}, {286.6, -282.84}}]}}}, {}, {}},
   ImageSize->{{0., 191.86149331449073`}, {0., 278.0941083077464}},
   PlotRange->{{184.0454, 747.7746000000001}, {-412.2220917507381, 
    404.8765688130536}}]}]], "Output",
 CellLabel->
  "Out[257]=",ExpressionUUID->"0a83e092-234e-4f88-a708-b5b4e64d54a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Description of the data:", "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],

Cell["set up assumptions and provide definitions.", "Text",ExpressionUUID->"dc3fa30d-000e-45b8-9f6e-f2ffca697a75"],

Cell["\<\
\tThe data set consists of calculated expected distribution (\
\[OpenCurlyDoubleQuote]Expected amount\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Expected frequency\[CloseCurlyDoubleQuote]) and \
observed distribution (\[OpenCurlyDoubleQuote]edits\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]frequency\[CloseCurlyDoubleQuote]) of amino acid \
changes in humans, four cephalopod species, and conserved edits from those \
species.
KR  represents a change from amino acid K to amino acid R. syn means \
synonymous, without any changes to amino acid, likely \
doesn\[CloseCurlyQuote]t have an effect. stop_W means stop to w, causes a \
significant change in a protein sequence.

\tAll types of amino acids are categorized as either radical or conserved. \
Radical changes are those that change the physicochemical property of the \
amino acid while conservative changes do not. The ratio of radical to \
conservative changes indicates how many changes are likely to have a negative \
effect\
\>", "Text",ExpressionUUID->"efb827fc-a893-441c-9ea6-fec1aeab991e"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvX+IXdeV51txku5ETbdFOm53cJxW3DMExkyLQP4IHZC7DWN4IHfG8+aB
5ckEerDleWGmn9165mGcIOcfkwhetzOJiNPGEWMnAiVOSGuC02nZg2OF8UCh
gNRgoReBZFO2SRmVcQUhNWXpPH3v9Kpad9Xe++xz77m191n3+4Fv5NQ959xz
7zr73PU9a//4+H/4v/7N3usWFhb2feDa//ybP/9//vQv//LPH/7ft1/7P//H
X+z7P+//i/vu/d/+4v++7/77/vLT/+G91/74/13b9u+v/cf7rv13Q1zxi1/8
YiTiE8bXN4yvbxhf3zC+vmF8fcP4ElI/bKe+YXx9w/j6hvH1DePrG8bXN4wv
IfXDduobxtc3jK9vGF/fML6+YXx9w/gSUj9sp75hfH3D+PqG8fUN4+sbxtc3
jC8h9cN26hvG1zeMr28YX98wvr5hfH3D+BJSP2ynvmF8fcP4+obx9Q3j6xvG
1zeML7EcPXq0OXLkSOnTIAq20345fvx4c+zYsdKnsQ7j2y9d4nv16tXRPe/A
gQPNoUOHmtXV1d7PZ9bxXVlZGX2G5eXlmb0HiZMT36WlpebgwYOj6wzXJxkO
vD/7hvH1DeM7X1y+fHmU/+3fv3/0ews/ixxJuHLlSoNliSD8N6mDVDtFno68
KSTEmrnvODVe44xvf3SNr2wrwn2xb2b9O4tzxrnjvi6sra01O3fuHGkW3p1s
0BZfPIOw11kt9x7STpf2i3sy8qpTp07N+KxIX0zy+4vnVniN1E9u+23zR6R+
JBcKCbkQ2izE3+H6SLXTc+fOReMKbd++fYvPdnqQI8wqT6jxGmd8+6NLfPGb
JttKrW0Wdf5Z+1ycu/Xo+rrRz0LgeZGn0fv2R1t89e8srq89e/YwRx4Que0X
3kffmxnjYTDN7++ZM2e2+GxJV3Lab44/InWzb9++TTULPKvYtWvXWHut0QOQ
dDvVv62IqxaeSy0uLm7x2U7HrOutNV7jjG9/dImv+MPdu3f3fh6aEj4Xz6Z3
7Ngxkva0odovmY5UfPX1zmcLwyS3/e7du3cszxravXleyf39xX0WsnGuJY8g
Ydrab64/IvWCZ/n6uUToddSE8K/OEfn8oh5y7sOh2A4VuQZnffxafp8Y39kc
vy2+GI8r+cssKeFzY2zVZ54ncuu5ZJjktF+dO4mQJ5P6meT3F/2R6IGGQSq+
XfwRqRf0kcrN+/S9Gv3S9b64BkJ91fHcA6/pfpQ238JxsQ3qJhcvXsw6Lu4j
+riyP4TnLxrcZ/SzF9QwPM2llXMfxmeOge9fajv2noxYIWbyfclYMsQEMcA+
8r3a713o8v3jGbeOK/aTc8Lx9XEk5nh+qj8LalE4Z9kO24RqJbjW8Jo+nv59
amsPuLfhvfV74fzwnWvwnWEbfDb0CZXt8T3InDM4lv7cup7G+G5tfPHZ9TnK
e+DcZPyGnBu+f/mOdAy6nGdbntzlWHKtyXbwrVKj1fdd+Qw4Z/y3fGb7Hvib
/Ibjs9o4c86kdmLxRUxtW4AQw76vsVBbwHZoc3INyDFl3LZ9lo0+1XgvnJ8m
9zz0fRDS28eeq6TuF3LvDV2DaOd4DbnErMnxuXLfwXeNzySfB+PkSd1M8vur
+2mgbzOpl1R8u/gjUifat+b0Uws9k7TS922dE1np3x99T8g5rh43F5Iekxia
4yN0DkOmj3qf9jOS3+g+OdLHSmpDMdn36fL9p8ZAyHOz2Oug7frUz0vQb7Pt
mkvd13Cs1L46x2v7znT+qSW+kvHd2vimxlxhn9T9apLzbJvnJPdYuIenttU+
1/YPT31m+IrU9U7SxOIbu94Rx76vsdy2kBo3EOoX0OU82u4tNgdpu1/IfTP0
jE9yj1p8rpyPfHfyOTw9b/fKJL+/uGfqa5XUSyy+Xf0RqZOuz5zsb5r8HuN5
qvwN9QMB93a0fxxb6iB67IL8jnY9rvxNfsOwv/YKclz9+473lfxe+uZ5uQfl
jh/B5xYh59DP5XUeK21a/r8en2hzFdzP8X3rMQzyvL3L9w9fqN8Px8SzDcl1
cEwcT/cjwWdDnQJ/B/ocpKaK1yWf1P3E9HUIj4f30+cVyvM0ch74PuT97VjZ
2HeG71p/XhGud3xmfS3jO2N8tz6+eE95PxwL/x/vBez9Cq/jfOT77nqeqfjm
Hgt/098vvlvEXHupmD/R90t5P9xb8f/leY3ESWraAPf1Wcw/7Y1YfEPXO75v
xKPvayy3LaTGr4d8bpfzsPcWbC/zfuv7Hci5X2gvoZ8rYjv5+1bU0tp8rj4f
8f0Sk1Q/HFIHub+/Mteyfj6j+yKROonFlzV5H+jftK4+V/tOILl5Tt6T+m1t
O27sebP0C9LP1eR3NTTnbJfzrZ3c+3BIGn1/1rmHrqXrXMX2ubL5dJfvXx/X
Ij4HxMaI67/bfmw6Z7I5pL3e9LOVSfqphPqI6s+mj6lrobo/sfYs2J7xLRNf
OWfbp1If385RNcl55jxPbjuW9i22v6nU8tt8buozy7Uz6zm5PJJbr49d731c
Y7ltoYvP7XIeen97b2nb1qLvF7KNvl51f6+tIHfdKH2f1P0nOP9Y3Uzz+xsb
60PqIef3lz53uEzjc20uJXlWyDfimTV+B3G/1/lY6Le17bja5+o+Uej/g7/p
56P6t1LWBYHw3/K8eZ58rl3jLbR2i+1LZ8dixfJgIP0m5Rl+l+9f9m3rHxLL
w/TfUYuS98O/uj+n7XcaGvud64MA8jV8j/iekF+Jfwz5XPudxfo82XbJ+JaJ
b2z+Jn0u9lnAJOeZ8zvbdqzU3NChe3Obz7WfWXsixBbXOucizCPX58au9z6u
sdy2MKnPbTsPvX/quZFsm3u/kOcv2kPKPXir+hq2+Vx5zmT7KHvKQTzTtT8V
rm89TsjL+Div0Of6Rv8G5qxX2bVPk+6TFdKkfaX0uF/kX9o76+dndi6ZkDz8
xvQ5H6/tWxZ7PfS9SV8sua93+f7ld6FtntfYtdL2XFXvk3qu0mXdGTvffOy6
in1nsTksJvG5jG//8c3xufYYk5xnLL5djpV6PtE2rjLH5+rXtLg2SjvT+tw+
rrHcttDlt7jLeYT2T51H7v1C14KRb4T6CM+aVHx13xz4WvxmQHYsPamXSX9/
Q2P0SH3k9FvO8UekXiSOOXPcd/Wj+v6O5//4HdJjaib1ubH5O6xfkGe9MtYM
vzla+I30UJOYdj5ejf1ubV+3VD5t+zZ2+f5z+5HHrhWd38i4Tvte0t9NH0P3
gUsd3yL9ByDkLfCjeA+Zn2+rfS7j22989XfRxedOcp6x+HY5lpxrqJ9cH/Vc
Ae8XGm9O4vTtc2fZFrr0repyHqBLe+oyrkj3y5d+B6GxFLMiFd+2ubf090fq
ZNLfX/0MRuZ2IPWRim8Xf0TqRdekYrV5eU7axY/qNm5/X6fxuXJfkTWrZK2W
UK4lebj3uR76qvfFxm/qe7TEI3Q82V5i1eX7T431jI1b03/Xz97a1qvT29px
ZXrcVMoHiZ+1viKUy9VSz2V88+Orz7mLz53kPHOeJ7cdKzWe0c71mvoMqecc
9tzkmQn7dKXp2+fOsi3o7e24UXsddTkP0KU95d4vQGjOd/v8bpak4ittBL8T
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
agxrKk/WdTadk5byuXrML/LlNkrHd56R6yqnLy3aqe3zq6+92HrLpeNbe/uN
Ad+s75Op95bnEqFaO9pjF8/b9f7cJU/+ytc/OvrbpWPvbVZ/tNA8/yVzvp+7
mWtxDkqMr28xvkNVzDfpmq7421AtF8IaunpbmV+Zos8laex8nm3j4GrKk9v6
B+rctGuenNpe5572HPR3qeeVKeFzbQ2qdU2Spnx85xnxX6laZBtt9czS8a29
/Yawc1eFnkPo985R7vjdrvfnLnlyUp/5/WbpBc7VOiwxvr7F+A5VMd9ka7qx
Wi6EtXa5VhB9LukG+tR2qhU0w82TY/MiaybJk3XNVr+f9RklfK7uy5o7ZrB0
fOcZ8bmI2yRoP4Z1cUKUjm/N7TeGXXu37b1FiCPigPus9as57zvJ/bmXPPk/
/0HxvJCaRIyvbzG+Q1XKO9mabqiWC9l6Lvst0+eSNLZGkZN3gZry5Dbvp9fj
6FoPivkEoOeckXOwtdPUsbfC59r+jqnPoykd33kmtE4rhDmVcup/er6i2Pal
41tr+41hxz3H/HbO2GC7npIeb22Z9P7cJU++7d/e2Pzto+9vnviPC80fXaeu
ufdc3xz7we8Vzw2prmJ8fYvxHapS3kn711gtF8K8U+y3TJ9L8rBzh7blXJqa
8mSolnls9DjY0NhAXZuSuanamMbn6rlnYzWoEKXjO8/EfG6bxwLaF6U8Uen4
1tp+Q9g2lKqn6vdOxUmvYx1bA2qa+3OXPPmb31bz2Py38XlaFz5zU7P64m8U
zw+pLmJ8fYvxHapS3kn3R/70p26LbmfnWz554nRx3zdvEuhz60fnWpAeR9pG
6Ty5y3ytej2dPvNk3Z8QuXgoL81VKn+dxufq94jNSRSidHznHVzPck3gv3PX
TtXXemqeo9LxrbH9hrC117a+5Pq9U/OI6WPGau7T3J+75Ml2zZG1p8fvTd95
mmuSDEuMr28xvkNVrs9tG3erfS76O5f2ffMmgT63bnTuCOXMTaQpnScDff6x
/Nf2+2udv6UZX1cz5Sn0WDvktDZ3L+1z7dqqOZ9dqCG+ZBxdVwzFUvclaOuf
XkN8a2u/Ftt+cuYp1++d2l7ff0P13Gnvz9PkyXj98L/aeP3Wf7d53RKqZjG+
vsX4DlV9+Vy99hC0+PLJ5PZvv3VxdPzS/tCLBPrcerHzqcT6zaWoIU/Wa3Yg
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
Gf1z9XnDR+Jvgq2FdHmmiTqN3lf3/8EzVJvDarSfxXa2b6Kt8WjwW6TPN/V5
0C+pr30tNcSXzA4P8a21/QO0L/16qA8F2iueM1rQ1zqWq/blc+13B+3fv3+s
L/by8vLYvSx0rqQMjK9vGF+fpLyTrsl++lO3ZXuuVH345y8uFveEHiXQ59aP
7uOKeqPUL4biczH2NZVrAoxpk9dz6tRCW46Kca6xZ6W6DhOqm8L36n2tD0Z9
SOfrsc+D2pBlmn01NcSXzA4P8a21/cMH69e6jhHW40hw/rpu05fPtT48NScD
Pht+G9r6gJCtg/H1DePrk1yfe+snPpntueBl9fhdzHEl//+O23cX94QeJdDn
1o3NxXTeNhSfq59Vxsac2r68OfO+2H1y3l/3P9Y+NzTvk/3uc85J0Hl7bs47
yb41xNcjeAaB50u4XmJzguF6gIeTuYewLZ7NT3tcjYf41tr+9XhhbNMV1JLR
PiUv1bWbvnyurQORYcH4+obx9cksfC68rOx3/uwbo/7OuqaL/1/aF3qTQJ9b
NzpHQ04NhuZz9b0euWnOdjl9d3SdO5Wn6nxW14q0zw3NNaXHFHb1qvhN07We
We1bQ3y9YecmC82FGRpvKor1Nc85rsVDfGtt/3pemD76Cvbtc21/7knm6CJl
YXx9w/j6pG+faz2t/B39nuVvP/zej4v7Qm8S6HPrRY/jlLypay5VOk9u6/ur
0b4zJ+9EbabNW4DQ9wisV9Fe177WpU+jnTNslvuWjq8n0LZCc5CFrkUZO4B/
UdfTzyYg3fesy3EtQ49vze0/VAtGrFBnRx/kLv03ZN8+fa7+fJPUm0l5GF/f
ML4+6dvnwsOG5mLWfZe71IYp+lwv6HlEpT/k0HyuPt+2uVSnyXOl1h0ilueC
kP+QOo98/3auZQ1yYngaCOcsfY5l39T42mn2FUrH1xP6GYO+tkLXImqEtg+u
fjai10/tclzL0ONba/u3/hvxCs27jHPOnRerb5+r58FL3YNIvTC+vmF8fdK3
z8V2ss/S+eX1v9s675uvXSjuDT1JoM+tE93XTtcZh+xz2+aX0XM2dM1zU9vr
nDZ0Dqm1bNv6lqbW7WzzqdPsK5SOryfQpxbPGqSO1+VaFEL1xWmOO/T41tr+
Q/OgppQz9qBvn6t9f9v6v6ROGF/fML4+6dPnwrvqdYjs63fdeffY/FSlvaEn
CfS59ZHq6zcvPjdnDblJ8tyQf9TPFKzwHafmFkp5VQhzss5iX6F0fL2ir5lc
n6vniIv1N+963KHHt9b2H/K5eA33AhwLtXq7Lm/OHGOz8rlca2SYML6+YXx9
0qfPhXeV7Q8//eym10+eOB0cu0vR53pG93exfea65I2gdJ7cJffrOi+MznNT
41iRn8bOwXpN1G3surlQbD0AzC2Bfseo2eF9kB/bY8Y+9zT7CqXj6xV93ebm
KHot19h8S12PO/T41tr+rc+NreWhvW5b38NZ+ty2dbRJnTC+vmF8fdKnz9Ue
FrVbeN2nnnhmXQ89+MjYNjh+aX/oRQJ9bl0g39L5l0WvdTO0eq6tTVu2eh4a
nVfbXFfnxiK9tnsbdl6i1PjBafYtHV+vdPWjupab6nM+zz63pvaf+7xQr/3b
NpaA43OJhfH1DePrk758LtYP0h42R/C9pf2hFwn0uXWhczfI9p2LKTb+o3Se
3GW+VV3L7DPP1eu5SE5rfWxoLVObo3d9JqtjN6t9S8fXK139qL52U+vizpvP
rbX9554X6sSyTducqbOcb7nrumakDhhf3zC+PunL59paba5WV8p7RA8S6HPr
Qo9R66JafS7Q5xnLX3U9rC0fFvS42tTviMxjrJ+r6t+g1Prtup7TdR1cXZ/S
8+/2uW8N8fVIFz+KcdSybds6UPPmc0GN7d+eV6yvhp4ru228/KzXz20bH0zq
g/H1DePrk758rvauqO3GtnvnwqWxbRdfPlncI3qQQJ9bF7gXIi+D9wrJjh3F
37B9LH+sIU/W5xzzivo3IWfcMUBu2laTBXobmd9GP09I9SnS9ZyUHw6h61Oz
2reG+Hok14+mxtJPc1zBQ3xrbP9AP0uya0QJ2iO39cno2+fac885Jq4pjG0h
dcD4+obx9UkfPhdeNTXPstXn77l3bBxvaY/oQQJ97vDokg/WkCfrdUVDzzVt
Lcf6BfhQ/Ebg89p5WHX/3lC9xdbHBV2nhWK/LbG5JOA90Y8xVgeyaxXp9Ymm
2ddSQ3w9kuNHtQfKrdfPo8+tsf0D284QG40e15sbr65evS2+em4zOW7oXoV5
z2S+Ac7tWg+Mr28YX5/04XO7rhf0yqmzYzVdrK1b2icOXQJ97rAY2rpCgr7X
Sw0V9/PQ2rWatjGydk0g/I4gr0YdVvcntfmzrQWJV5H5j+GD7dhoPYeurrfi
PXFs+FHsZ+e3wnE00+xrqSW+3mhbI0j3e5f1rZG/aE1yXIuX+NbW/oGe00+E
Ngh/a/1x6F4r2+GzQHb+OPk7tonNJZcT39D6Y/hsyKFxbP0sjnlyXTC+vmF8
fZLrR2M+1/ZDxhq6Ob5M7/PD7/24uE8cugT63GExVJ8bmr84JLsei50vJjQO
GbXRtuOKF9Gk1s21sjmyzWlTsnXbafa11BJfD+Rco7geQ2uvhiT1wdzjhvAS
3xrbP7Bj6GIKPbfoMpdCbK7mnPjiOrK5cEx4LsZ+j/XA+PqG8fVJyjvBs4oX
/fSnbgtuo+dZjm0T0oHHHl/fD/9d2icOXQJ97rAY2vq5Gt03xwq5amx8nd4n
No7O9g/SvxuxfQDy79g5SX4amz8Cx039fiEPtn0h+9hXU1N8h04XP5ozDzp9
7jg1tn+AvhSxeKbG5IZq0THF5rDqEl/UhGP3DHxHXdYuI1sD4+sbxtcnOR4q
Z07kSeZNxj6cb5k+lzRZHgjUmCcjp0fOK32Ecz6L1NHaQK6M40Kp9V0sODZq
p3JOXdbKxb54L+wHdXkeO82+oMb4kv7wGN8a2z9A25Pz6rrvpEwSX7lXQTjP
3N8CsvUwvr5hfH1S2p9R9LkkH495MtmA8fUN4+sbxtc3jK9vGF+flPZnFH0u
yYf3Yd8wvr5hfH3D+PqG8fUN4+uT0v6Mos8l+fA+7BvG1zeMr28YX98wvr5h
fH1S2p9R9LkkH96HfcP4+obx9Q3j6xvG1zeMr09K+zOKPpfkw/uwbxhf3zC+
vmF8fcP4+obx9Ulpf0bR55J8eB/2DePrG8bXN4yvbxhf3zC+Pintzyj6XJIP
78O+YXx9w/j6hvH1DePrG8bXJy+/dIJyIMH6XGm3FEVRFEVRFEVR86LS/oyi
z6UoiqIoiqIoiupTpfvbUuy3TPKRdkt8wvj6hvH1DePrG8bXN4yvT0r7M4o+
l+TD+7BvGF/fML6+YXx9w/j6hvH1SWl/RtHnknx4H/YN4+sbxtc3jK9vGF/f
ML4+Ke3PKPpckg/vw75hfH3D+PqG8fUN4+sbxtcnpf0ZRZ9L8uF92DeMr28Y
X98wvr5hfH3D+PqktD+j6HNJPrwP+4bx9Q3j6xvG1zeMr28YX5+U9mcUfS7J
h/dh3zC+vmF8fcP4+obx9Q3j65PS/oyizyX58D7sG8bXN4yvbxhf3zC+vmF8
fVLan1H0uUNmbW2tOXDgQLNv377myJEjyW2XlpZG26R06NCh5uLFi9Fj1HYf
xufHee/evbvZtWvXSHv37m1OnTo11XFXVlZG34U+Lr7jrsddXFwc7Qelvlfh
6tWro/fYv3//+nvjX3xGfNYYfcQW1BZf0i+1xbfG9jtt2+/jM+l7ALRnz57R
ff7cuXPJ/WqLL+kXxtc3jK9PSvszij53qBw7dqxZWFhY1/bt25Pb43W9fUzI
r2LUdB8+evRo62dJecMQly9fbnbu3Jk85o4dO0Z+tO04yG/1fmfOnJn688A3
h+gjtqCm+JL+qSm+tbXfPtr+tJ8JPrZt/5TXrSm+pH8YX98wvj4p7c8o+tyh
gZpcKB9DDpaiLYcTHTx4MHqMWu7D8Hv2vEOfr837W1A3sfvje7XHRY0lRizX
TeWnqCHlxAbCtpY+YgtqiS+ZDbXEt8b2O23bn/YzoYYbuqfjeZl+jpV6XlZL
fMlsYHx9w/j6pLQ/o+hzh0QoF+rqc5EzoXYBvxxSihruw6in6M+N/FTXWGyd
G74zF/mOkMtqP4kajM1Zr1y5smn/UF6c43PR71i2Q/9EiQPeA30m2/LsPmIL
aogvmR01xLfW9jvNvtN+JhzP+mPbXtGu4aVD9x2hhviS2cH4+obx9Ulpf0bR
5w4J5GCSC8mYz64+F/9OSg334ePHj4/lhCG0N+zyeZHfxvwo8kz9vvCmdl/7
Osb55fhcgFprzIvqPtChOPcRW1BDfMnsqCG+NbffSfed9jNhPEHufTxFDfEl
s4Px9Q3j65OQZ1o6v9wceOzx5q477x7pC/c90Dx39PlmdeV/vf7OhUvNU088
03zj8Sebn7+4mPRfh59+dtN2P/zej0d/e+XU2fX3e/SLj62/H/4bfyvtHYck
gT53tsA3IQ+SeoOuI+T63KHnUbp/IeokIVZXV1trr11BXUcf0/YflJqM7huM
/871uSl0PSjlc6eJLaghvh5ZXl4etV14HXgazFOkn2ng2kKM4ZesYtd4znEt
NcS31vY7zb7Tfib9d2w3KTXEl8wOxtc3jK9PrF+Cv71+2w1RweueP/vG2N/g
e0Pe6+SJ0+vb3HzjLeseWf6G94Jfjr0X/HBp/zgUCfS5W8skPnfo9dzcnDC3
z3AuNtdFjaeNvnyurguznjssdB8MLT1Os23+odC1k3NcSw3xHVL7zd13ms+E
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
bjsG9I3HnyzuD71IoM+tm6NHjzYLCwtJLS4uRvevKU/O+Sy5nlJz5cqVZseO
HcnjHjp0KOtYKysrm/bN+Q2CF9X7bN++Pbpt27mGhLw+RE3xJf1TU3xrar/w
j13bUOoe0KX9dj2PlNfNjS++V3j/tvdCjEg9ML6+YXx9Yv2S9aI333hLc+sn
Pjn2N/z/kNdCDTjmaXGc0N9RIy7tET1IoM+tl5DnignbhqglT4YXt+e8c+fO
TX/LzS812MceI3Ts1PMAIZRvp/JU1JpC74XjdHmPNsELhKglvmQ21BLf2trv
0tJS5zaE2rBlkvYroIYb2g/5rP5MqedkOfHFOXb5nPhuSB0wvr5hfH2ivdJT
Tzwz5kHRv1heQz/j544+v+5Zrc/CttbD4ngXfvXrse2Wzi+P+kPLNujbXNoj
epBAn1svOpdD3xbpvwfPg751+t6IPjAhasiTUYvU54q+Oro+aWspXZ5pokaj
99U5JZ6hWk+Z4vjx4+t5do7PDeW5OXkyzgv9lxBPK/z98uXLo+8o51g1xJfM
jhriW2v7jbUhkX1OaNvxpO0X4B5sPb/tX412DG8ee0YF2uJrv3sI/aP1ey0v
L4/dL9r6SpOtg/H1DePrE+2V0B85p0/x229d3PQ363HffO1C0pfB/2Ls7iun
zhb3iB4k0OfWTWp8qe4HE8vLasiTxT+mvKb27cgZc9HHDY1jRa6Z86w0lMu3
/e7g2YJsg/PXz21z6kEptNfG9xejhviS2VFDfIfQfic572naL3LVPtp6W3zx
fFN/hlSfFHw3uG/E+vaQrYfx9Q3j6xPtlXT/ZF3LbRNqsl08LkWfSzaj6yg1
+1ztGWNzKqE2o38PUjWQ2D457x/quwh03op6FOaKaPO5qEXhe5ffJe2Vp8l9
bR/RFDXE1yMyzxGuF3itNrCNzHcU6qeK6xm+S+Y5wnHxHL+NGuI7hPYbQj8r
CtWYp2m/+rzb5rdK0RZfWwciw4Lx9Q3j6xPtlTAXctsY3JBy56ii6HNJHN3n
r2afm5sT6u1y+u5oL4pcOIaePydUawrl28inu/Yj6svn6r6abXl9DfH1Bnyq
vh5y5iHTMbNjVENjW0XwvSlqiG/t7TeEnR8qNo+bJrf94vnEJLXrEKn42v7g
k8zxRcrC+PqG8fWJ9kq2LvvpT93WWptFH2bWcstLoM8dLpibXu6h6MMconSe
bMexpeo8ej6YnDxZe9GUX9DjnEP5q35f8TSlfK6dX2do60YNGcRP1w5z42/7
x9rYS10R/+LZlO47AKX6qZWO7xDabwg9piO3jpLbfnX+qp9Doa2i73NO/V9I
xVd/P6nnAKReGF/fML4+sX4pNC8yxtHG/CvG105SA6boc8kGNv+Mzf1SOk/W
uWPbXKzT5MmpMaypPFnX2vSzglI+V48ZxHOMNkrH1xO6Bpgb/9A8Izb2aJu2
v6++7lJrtZaOb+3tN4Sdfyp3/ezc9qvPG33Q9fNGLbTlNs+biq8+bpf+2qQe
GF/fML4+sX7pnQuXomsAff6eezfNn/zL06+O1X/t8c6ffWN9jmYr/B2vl/aI
HiTQ5w4TO99yrevO6NyxrY+fnrOha56c2l4/E7DnEMuHS/hcu/5AznwUpePr
CfTJRbuStpQTf6nN4hmJjCPIjX1OLbN0fGtvvyF0fhmbhz7EJD43R6m+3qn4
6ucGuet/k7pgfH3D+Pok5ptsH2YtrJMb8rmheq6u94aEMcGlPaIHCfS5w8OO
H0yt4zHUPDlnXtVJ8mRds9XvZ71GCZ+r+7PmjvsrHV+v6GsmFn89rhv/3cXn
6nmEsb5NjNLxrbn9hkDfYX1v7LJGxzQ+F20XccS92T6DTJ1zbp7MtUaGCePr
G8bXJ23+KeZ3sQ6u9bmhei76O6PfM9bMhfTaRfS59Lnzjl1noy3vqylPbsv/
9Zi6rvWglFfQ88bIOdjaaerYW+FzbT/01OfRlI6vV3QsY/GXPEb6l8s1kxN7
PYfcpPW+raDW9ptzzLZ+1pZJfG6sFm/HbMfmwcrNk9vmKyN1wvj6hvH1Sa6P
0nMxQ3fcvnuTz4VWV9qP9dQTz9Dn0ufOPaGxgG3ziNaUJ0O1zGOjx8GGxgbq
2lTOfLtgGp+r554N+e4YpePrlTafq8fXyjWd63P1s6ohPaeqqf3mnGtsDaSc
/XN9bqpurdc1iq0hxfF9vmF8fcP4+qSLl/rG409u6qOM8byxPs05x6HPpc+d
V3TeBOXMr1I6T+4yX6tem6XPPFn380YuHnpekKvUc4VpfK5+j9S8RJbS8fVK
m88NeSmp0bb179XX+TTzFG0FNbbfGHYdj5y1hDST+NxU/qrPJVazz52vdZp1
ykg5GF/fML4+6eKlTp44vameC+l5q/Df9Ln0uSSNziGhnDmKQOk8GejzjuW/
tj92Kp8W9Lqaqd8RPV4Ovz02dy/tc+36qjmfXaghvh5J+Vxde0c7hPDMSa9J
hL+FPKzuR5DTN72G+NbWfmPo54CT9BPMbb/6vFNzout79iT1XOvbY8cg9cL4
+obx9cmkPlfPOYUarq7pYgwufS59Lgmj+wN2vV/WkCfr/jvIWUPo34TcOZjs
GNtYbUxvI/0MkS9j7piQkCPrnBneBH9ry50n9bk6H459PzFqiK9HUj5Xe9WU
7Fy/uh2k5o7T1BDfGtuvxc7N12UNWyG3/erxwlCIXN/fFl99jJx7Cq7VtjW3
ydbB+PqG8fWJ+CTpf4w5o+zaQdDbb10cq9vedefdY6/D99o1iHDMkCfDfFT0
ufS584jNqXPruEINebKtV1qfbnNC6wHgSfEbgfzZ5rnWj1r0ONtYThpCzxOU
M3es0DXX12MPodScRCFqiK9HUj4X1yfii7G1IttO8bruf65rkkPrlz6E9quf
BaKuPik57deOewjFU18PqWO1xVffh+RYoTwY9w2ZB4xzu9YD4+sbxtcn4pNk
nVvdL/nw0882L/z0+KY5kiHMo2x9cGheZvhhzDuFeZu1vxWhtlvaI3qQQJ9b
L7p/nAj1RtRXrJDbhWpENeTJwH4O5L64n9v5l2wua3NKW1O13xF+R5CXo0+o
9R65NTSQM98ycnacD7aV+rD9jBC2Cc11BfQ5ts1JFKKW+Hojd90fTWx8rr6W
pJ8rch2tGLXEt+b2i2d/KR8eY5r2a7fFcwx8Hzh3O8YklbfmxNceT54J4HrD
udn+PsyT64Hx9Q3j6xPtlVLr3Go9d/T5oNdC/RZrC+UeB4K/Lu0RPUigz60X
W8toU6geUkuebPv6xWTrmXYsbWi9dT0uMqbUOLoQOT63S3xCHlavvwrlzuus
qSW+Hsi5RlPjTkPzLefOeTbJujNbSc3tV+/fZbzAtO03Z7+22n1OfHFt2Fw4
JtTH2e+xHhhf3zC+PrE+FfVV3T/Z1mZl3dyUMI4X28a8LbwwasWoAZf2h14k
0OfWi53HoE2h/nq15MlA980JnXtsTJ3eJ7ZWiO0fpH83uq4vYo8X87mhWlZM
oWcQueulpKgpvkNnWp8bq+faedKH6HNBre1X55C5tXcwbftFzHR/dC2cU05d
pkt8UVOO5cv4jmN9Rkg5GF/fML4+ifkmeFD0TYavXX7jnax1cUPCWF8cB8J/
T3ocij6X1JUnC/AKyJnR3xD/5qz/gX1ytkOuLXPgTjIXjQbv13Vtkq1+jxrj
O8/0fb3UGN8a2++s22kbmFNLvo9Zz5eOz4r3g/Adlf7sJA7j6xvG1yel/RlF
n0vyqTFPJv3B+PqG8fUN4+sbxtc3jK9PSvszij6X5MP7sG8YX98wvr5hfH3D
+PqG8fVJaX9G0eeSfHgf9g3j6xvG1zeMr28YX98wvj4p7c8o+lySD+/DvmF8
fcP4+obx9Q3j6xvG1yel/RlFn0vy4X3YN4yvbxhf3zC+vmF8fcP4+qS0P6Po
c0k+vA/7hvH1DePrG8bXN4yvbxhfn5T2ZxR9LsmH92HfML6+YXx9w/j6hvH1
DePrk5dfOkE5kGB9rrRbiqIoiqJmp+Zn11EURVEVqbQ/o+hzKYqiKGromjQP
oyiKomaj0v1tKfZbJvms51PEJYyvbxhf51SQ01EURVEbKu3PKPpckg/zZN8w
vr5hfJ1TQU5HURRFbai0P6Poc0k+zJN9w/j6hvF1TgU5HUVRFLWh0v6Mos8l
+TBP9g3j6xvG1zkV5HQURVHUhkr7M4o+l+TDPNk3jK9vGF/nVJDTURRFURsq
7c8o+lySD/Nk3zC+vmF8nVNBTkdRFEVtqLQ/o+hzST7Mk33D+PqG8XVOBTkd
RVEUtaHS/oyizyX5ME/2DePrG8bXORXkdBRFUdSGrF9687ULzeGnn92kH37v
x83PX1xsls4vd/Zgr5w62xx47PHmrjvvbu64fffo3y/c98DomHi/0h7RgwT6
3Hq5evVqc+rUqWb//v3N7t27m127do3+PXLkSLO2tpZ1jNryZJw3zl8+D7R3
797R55yWM2fONPv27Vs/Lt7j4MGDzcWLFzsdB+dy4MCBkbB/7neN7bAPzgGf
Mca5c+dGr+fq2LFj0WPVFl/SL7XFt/b2u7i4ODoGlLvf0tLSqN3q98X/X15e
Dm7fZ/tty7dWjyw03/3SB4y2Nd//8rbmJ3/1W83Jw7/TrL1YPi+kJhPj61uM
7zBl/dKnP3Vbc/22G5K6+cZbRt61zXvBH7cdC7r1E5+cyD9T9LlD4ejRo83C
wkJSyOnaqClPzvlMuZ5Sc+XKlWbHjh3J4x46dCjrWCsrK5v2Rf7dBnJZvc/2
7duj27ada0h45hGipviS/qkpvjW338uXL488atd2a/exwjNGS5/tN51vXfvc
n8k4/h9e33znyd8rnhtSXcX4+hbjO1RN4nNFiy+fjPou1G1jHjl2vNWV8n5x
qBLoc+sj5LViwrYpasmT4cntue/cuXPT31L+MAb2sccIHTvnuUAoh0X9JgZq
RqH3wnG6vEeb4AVC1BJfMhtqiW/N7Tfmv1PtFth2iPdFLdcex/bN6LP9tuXJ
3/rj/Pf4ytdvLp4fUl3E+PoW4ztUpXwu+inDe75z4VKz/MY7o37G1puGPJf1
yvj/qP9qH/v2WxebF356fFTLTR2Los8dOuhHJ/c+9J+T/nfIldAfT98bkZel
qCFPRi1Dn/OePXvG6hu2Foq8NRfUefS+uoaD2pLNSVMcP358Pd/NyZfRVzP2
m5XyuTiv1dXVUVyt8HfUpvAd5RyrhviS2VFDfGtuvynPmfK50tZjHlq3P0h/
3j7bb1uerOtBX/6rjzZrf39ds/qT9zXLP7iueenL5jO/54bm/M+2Fc8RqVwx
vr7F+A5VKY8a6puMv2kPa8fXWi/86Bcfa/Vozx19vnnowUeKe8UhS6DPrZPU
uDTd1y6ZQzV15Mk2pwyh/TtqObno44bGwSHn1NvgGUKIUC7fli/r2o+MB8yN
Sxvaa+P7i1FDfMnsqCG+tbZf2+8Fr2nfnPK5ul6Me23bueX0BdHktt8uefLj
f7O53rPyNzpX/kDzo+99pHiOSOWK8fUtxneo6upzIe1j7Tb6Ncw1Vdr/zYsE
+tzhoesnQ/C52jPG5mRBHUTnldF+fol9ct4/ltNiHJ6uR6GvYlu+jJwa37/0
HddeeRqfa/uIpqghvvMMrlP4GJl/DP/GnqUAmVcO2+LftjGkNcS31vaL97B/
w3/n+Fz9vvDSIRBL2SY0TjdGl/bbLU++afM2Lyw093+wZRuqUjG+vsX4DlV9
+lxby0Xf5NL+b14k0OcOD12zGILP1Tkfctuc7drG1gHtRZELx9Dj90K1plC+
nZsva/ryubovZsyXCzXEd14JjVmN+SJ4MtsfXpQae1BDfGtvv5qcdiv+uM2T
Y/9J2nOX9jt1nnxtmwe3MU8ephhf32J8h6quPhdzT2kvi7G78hrWDpK/f/6e
e4t7v3mSQJ87PLCOh9wX0Yc5Rek8OTenBLovYU6erHNa1F5i6PHOoXxVv6/U
10r5XH2uUNv8taXjO8+Ib8X1g5qunQ9JzxGnxxrg2sI1lVMnLR3fIbTf2DGn
9bn6fXP7Yndtv93y5M39Hpe/rp6ZvOf65n/83YeL54hUrhhf32J8h6qUz5X5
lDF/1IVf/XrTOkG2X3JoX4o+l8SxOVrbnC+l82Tt/drmYp0mT06NgUvlybom
p58ZlPK5eswvnme0UTq+8wyuOdvvWF9rct3ocdt27l7xv7HrpXR8a2+/qWOm
ziFn/Owk7blr++2SJ3/l6x8d/e3Ssfc2qz9aaJ7/kukb8LmbuRbnoMT4+hbj
O1SlfG5K2C61b6gWfNedd6+vLaTF+i997rxi51tuGwdXU57cVhPR4+G65smp
7fWzAXsO+rvU836V8LnaD9l6YIzS8SWbsdeN7v9q22vqNVA6vrW330mPqfvE
hLbF/9f9j9v6zYBJ2m+XPDmpz/x+s/QC52odlhhf32J8h6pJfC76J4e8VpvP
1WsIhaT7QFP0ud5B7ahLLRcMNU9OzeUjTJIn63xVv5/tN1nC5+q5sHL7SZaO
LxlHjzkVn6PrkXp9GqCvGU8+dyva7zTHtGPydbuN/b2NSdpvL3nyf/6D4nkh
NYkYX99ifIeqlFdFjRVzS2FtIOtJsZ5uat9fnn510+vfePzJ0fpBIhyfPpc+
dx6x62vk1BdATXlyW66oxzB2rQdhHtsYy8vLm87B1l5Sx94Kn2v7o6c+j6Z0
fOcd+CX0fUffVz3eFv0uBO1zbT9njN9MecPS8a21/eYcs+0c7HPDlNred9L2
2yVPvu3f3tj87aPvb574jwvNH12nzu891zfHfvB7xXNDqqsYX99ifIeqXK+K
uZO79Ft+6olnsvwZfS597rxh13YN1YVi1JQnx2pWwlbOY6PH0YXG5+naVNva
L8I0PlfXAUO+O0bp+M47+prVsn1W9WuYLx3XlL5+Q/uA0vGttf3mHDPnHPD5
8JxC1oVCTRbxgbfW/rrtueKk7bdLnvzNb6t5bP7b+DytC5+5qVl98TeK54dU
FzG+vsX4DlUpr2r7Hp8/+8aYL8X/16/r+ZbRR7nNm2F+K/pc+tx5w65HoseR
tlE6T+4yX6vuM9hnnqzrNsjFQ88NcpV6vjCNz9XvYecqSlE6vvMOri1ce5A8
O5H2qmt6ObXDULsuHd8a22/uMXP7YcTQc9Slzg9M2n675Ml2zZG1p8evn+88
zTVJhiXG17cY36Gqi8+F7rh9d3S+5Z+/uDjmW9vmXKbPpc+dN+x4say5TRSl
82Sgzz+We9p+2W3zawG9jkvKV+q5u5AH29y9tM+167DmfHahhviSDdA+JY52
fmL0Ucb6QeKL8d+6Zljj+FxQW/tN0afP1f2wU306pmm/0+TJeP3wv9p4/dZ/
t3ndEqpmMb6+xfgOVV197skTp5PeVOZPTo3jpc+lz51HbJ9I5MRdqSFP1nOb
6nGLGuT8uTUbwY6xRa4dQm8jYyCRD6OPYkjwILqGjjqdeJMUk/pc/Swj9v3E
qCG+ZBzttdoQjxRbs6eG+NbYfmP05XP1PNhtcZym/U6XJ1/XrHxTPYfj+psD
E+PrW4zvUNXV50Lam2JN3ZQPTtV14YHpc+lz5wE9fnSSOq5QQ55s6x3Wr9ta
kJ1HGrkrcknkzzbPtX7UosfZ5vgOAWP0cnNrTddcX489hDCvURdqiC8ZR8+7
2zaOXq5f7BOihvgOqf1O2m41uibfVkOetv1Omyc3L4yP87vvS39QPEekcsX4
+hbjO1RN4nP1OFzUb+3rmFfZel1sh3mbMX8z5qjS/Z/pc+lzPaP784mQB6Ou
YoU5XlPrC9WQJwP7eZA7omZi52+xuawdS2trqva7Qi6NvBxjI+2zgpx1mISc
uhByXJwPtpX6sP2MELYJzXUF9DnmzqGtqSW+84Zcl4gv+iMLuO5Czzpwrejx
t9hHxz425r6W+NbafuFrpZ3hv3VtFfdGeR3vq+Mk541tUIvGZ0HfZLuubqzO
LkzbfqfOk6/pxH9S3/8tNzZLL36geJ5I5Yjx9S3Gd6iaxOfaOmxoDaHnjj7f
ug6v1l133l3cKw5ZAn1ufdgaRptCdRChljxZj0NMydZD7Fha5K0WvZ5LTMhf
u5Djc7vEKZQD2zU8c+d11tQS33nDXpd2rjhI1z3ldfxrx9yn5i2qJb41tt+u
4+x1PHLaLmKlvbGlj/bblid/64/b8+TmB+PrlDz1bc5nMwwxvr7F+A5V1i/B
b6b8a2g7O++yCGsRobZrx+xqYS6rmJ+m6HM9oMe65Qh5Yoxa8mSAvFDP7WI/
Q2x8nt4H300I3V/R5qqxfVLo48V8bqiWFVPoWUSX9VJi1BTfeQM1eutZIdQk
7TgDPZeSjnmbN6opvrW1367zpmufi/p5bE0ovGfOnMl9tN+2PPnZOzfOa2xd
ErPdd/9M5cmct3UgYnx9i/EdqkKeCfND5XgrbJe7Lfokv/nahZFQD4YHLu0N
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
/ef0ONI2SufJXeZb1fPA9Jnn6v7eyGm7js3Lfb4wjc/V74F8OZfS8fVKjs/F
dYXrDpLnJtJWbS2vy7aaoce3xvbf5bwQG9mmbY3didpwItfS8y0v/OnHmpW1
DxTP/6g+le6b/u4r47893zm9o4Jzphhf/9JeCX2Vte9EzbXNX508cTq5LlDb
ukJ33L6b8y3T584Ndg7QnLmJNDXkyfr8Y/mr7Zeds6aHXp8l5Sv13F3IjW2O
W9rn2vVVu6xnUkN8PZLjcy1om7JP29zCudt6iG9t7T90XrFnh3oObjyfiDFx
G07kWmPr517TU68wD/altjHYC83hz228/i8e3rwuDVWzGN+hSnslrPfTdZ0f
vT08q329zee2+WSKPtcLtq9jzjwolhryZL3eb2w8IuZ9sTWXNuwYW+TKIfQ2
Mr8N8l3MGRMSakO6ho78VmpxKSb1ufpZRu68rkIN8fXIJD4X6BpjH9t6iG+N
7R/o+yveP4T2yKn2P3EbbsmT7/+grune3CytbUtuf/bE+5rzKx8qnidSOWqf
a+zt/6niz/VVBybGd6iyfsnOEYX/H/JVqPXqdYhi/Y7bfK71ylhTt7RnHKIE
+tw60eNHJ6njCjXkybbWYf26reXYeaThB5BHIi+187BaP2rR42xzvIdw6NCh
YG7cRtdcXY8dhDBfURdqiK9HJvW5er7dtjH0Odt6iG+t7d+Op7UxsG0zdh1M
1YZb8q1/+LbpU/LZjzWvrHx403arr17z4Z+L59NUjcqZU3t8HOe93/1nFZw3
xfj6lvVLtqar/S76NWO+ZMybbF+H5w35rxyfq+e/uvnGW4p7xiFKoM+tD90f
T4ScGHURK4wZS60vVEuebD8PclfkjTbXtLmoHUtrayr2u0IujLwa4+rss4Kc
dZiEnPmWkd/ifLCt1IftZ4SwTWiuK6DPMXcObU0t8fWG9l52/Kxck4jt2tra
+t/1WE67TmvOtiG8xLfG9o942PdGO5V2rf+e6p8xVRvOyJUP/MnCpvP8s/t/
t/naod9pnvja+5u9Zu0S+tyhKG/tqF98TcX3j25qqelT9YjxHapCnsnOhZyr
u+68e9OY3hyfizWFUnNZUfS5Q8bmWG1KjRurJU/Wa3ukZGshdiwt6qwWvU5L
THgm0IUcn9slTqH8F59Vb5M7r7Omlvh6IOcaxfVor0k7TxwkNcsu24bwEt9a
27/uL52SfkahmboN5+Rdl6553Zx1OEd58u83J1Y+UjxPpHI0vnZU9PnE6+Pr
0Hz7FJ9jDEOM71CV8k7oQ2z7JmuhDqvnkRJh3mYZZwvvm+Nf9Xacd5k+1xO5
uZcoNQ9oTXkyckK9Rqb9DLHxdXqf2Dg63c/Y+orYPin08WI+N1SLiin0LCK0
3klXaorv0Mn1uQB1PztHHIR6oh1j0GVbi6f41tr+4U1Dzx+gtjH5U7fhDjnz
P/xkYVPtVvQnn/vd5tDffYRrkwxKC82zezdi+M2TMX+z0By+f2O7p175gwrO
nWJ8/SrHQ8GzvvnahWbp/PLo3wu/+vXY61gz13pd3f8YfaFz3gfb5W5L0efO
IzXmyfAKyHmR4+PfnLWAsU/OdsiVcVwoljfngvfLXae41HvUGN95ArHDdQa1
xbHLtoLH+Nba/lGzlfPqsu9UbXiCHOzdSwvN8tJ1zeuvv795ffn9zeolrjc0
ZF2+dF1zKXO7y5f4HGNoYnyHp758Fvyv7qMMlfZ+8ySBPtc3HvNksgHj6xvG
1zkV5HQURVHUhvr2W+ibjPWIuBYufS7pH+bJvmF8fcP4OqeCnI6iKIraUGl/
RtHnknyYJ/uG8fUN4+ucCnI6iqIoakOl/RlFn0vyYZ7sG8bXN4yvcyrI6SiK
oqgNlfZnFH0uyYd5sm8YX98wvs6pIKejKIqiNlTan1H0uSQf5sm+YXx9w/g6
p4KcjqIoitpQaX9G0eeSfJgn+4bx9Q3j65wKcjqKoihqQy+/dIJyIMH6XMmr
KIqiKIqanUrncxRFUdS4Svszij6XoiiKooau0vkcRVEUNa7S/W0p9lsm+azn
U8QljK9vGF/fML6+YXx9w/j6pLQ/o+hzST68D/uG8fUN4+sbxtc3jK9vGF+f
lPZnFH0uyYf3Yd8wvr5hfH3D+PqG8fUN4+uT0v6Mos8l+fA+7BvG1zeMr28Y
X98wvr5hfH1S2p9R9LkkH96HfcP4+obx9Q3j6xvG1zeMr09K+zOKPpfkw/uw
bxhf3zC+vmF8fcP4+obx9Ulpf0bR55J8eB/2DePrG8bXN4yvbxhf3zC+Pint
zyj6XJIP78O+YXx9w/j6hvH1DePrG8bXJ335rOeOPt8ceOzxkd5+62Jy25+/
uLi+7YVf/Tq57ZuvXVjf9penXy3uJ2uVQJ9bL1evXm1OnTrV7N+/v9m9e3ez
a9eu0b9Hjhxp1tbWso5R230Y543zl88D7d27d/Q5p+XMmTPNvn371o+L9zh4
8GBz8eLFTsfBuRw4cGAk7J/7XWM77INzwGeMce7cudHruTp27Fj0WLXFl/SL
t/jW2v4n3Xfae7S3+JJxGF/fML4+6ctn3XzjLc31224Y6Yff+3FyW9kOevSL
jyW3fejBR9a3hdct7SdrlUCfWydHjx5tFhYWklpcXGw9Tk334ZzPlOspNVeu
XGl27NiRPO6hQ4eyjrWysrJpX+TAbcCL6n22b98e3bbtXENCPh2ipviS/vEU
3xrb/zT79nGP9hRfshnG1zeMr0/68lnwoOJH77rz7uh2S+eXx3wu/HGuf2Y9
lz53iIS8VkzYNkUt92Hke/bcd+7cuelvKX8YA/vYY4SOnfNcIJTzov4aA/We
0HvhOF3eo03Ix0PUEl8yG7zEt9b2P+m+fd2jvcSXhGF8fcP4+qQvnwUPqv3r
6kp4u8NPPzu2HRTru7z8xjtj25X2kjVLoM+tj6WlpfUcCf1gpe8cvA761ukc
Cn3kUtRwH0YtUp/znj17xuqTthaKOkkuqLXofXXtFbUh6ylTHD9+fD3XzfG5
6K8Yy21TPhfntbq6OoqrFf5++fLl0XeUc6wa4ktmh4f41tr+p9m3r3u0h/iS
OIyvbxhfn/TptbQnPX/2jeA2d9y+e5PPfeGnx4Pb4u+yzefvube4l6xZAn1u
naTGhmEMWI4HAjXch8U/prymzg1RT8lFHzc0jhWeUW+D/DREKBdv87nIX2Ub
nD/ilRuXNrTXxvcXo4b4ktnhIb61tv9p7x193KM9xJfEYXx9w/j6xPol1Fu/
8fiT632EUVPF/0dfZHhUjJd95dTZoNfCNuJLsY99HTVe6ausfW7Mw+LvbV6Y
os8dOrr+MQSfqz1jbE4l1DF1Thnrp5vaJ+f9kZuGwDwyup6EeWTafC7qQfj+
pV+i9srT+FzbxzNFDfEl3YB/kjnG2sZ+e4hvje2/z3tHiNx7tIf4kjiMr28Y
X59or/TOhUtjcz5hPilbexV94b4HNnktXX/99Kdu2/Q6arx6DG9bn+Scvs0U
fe7Q0f3thuBzdT6J/DJnu9SYWEF7UeSjMfR8MaFaUSjnRU7b5VxAXz5X95ds
y61riC/pho5v23hUD/Gtsf33de+IkXuP9hBfEofx9Q3j6xPtlaTeGpKtwUJP
PfHM2P7wovp1+Gb9OrbXc0rBC8v/x/xUelusJySv3fqJTxb3kbVLoM8dHliH
Q3Io9I9LUfo+jLpMbp1Gz/+Sk+dqL4oxcjH0WLpQzqnfV+prpXyuPleobf7Z
0vEl3bB9eIfwnGoaam3/fd07YuTeo4ceX5KG8fUN4+uTNp8LL4q+y3gdvlV7
01AdFp5UXjt54vTYa3psLv6/nqPZemZdSw71gabocz1g88a2OVtK34e192ur
XU2T56bGsKZyVd1HWOejpXyuHvOLXLmN0vEl+dgx4PPgc2tt/33cO2J0uUcP
Pb4kDePrG8bXJymfGxo3q/s2Q3asrvauem1cfWzp04x9Y/2cdb/m2JxWFH3u
0LFzebaNYyt9H9Z5blu/P9RVJs1zU9vrvNOeg/4u9ZwyJXyunscKalszCpSO
L8lHxoDjeYr0a50nn1tT++/j3hGjyz166PElaRhf3zC+Pon53NS6tnp+KPha
/ZpeX0gfQ/9d6rPWV+t+zlxPiD7XO+hT26WWC0rfhyfNc2PzImsmyVV1zVa/
n+27WMLn6rmwcnPq0vEleegx4Phv+tzNbGX7n/beEaPrPXro8SVpGF/fML4+
ifnc0DxSIj3O1vpc61Fl/ih4Wz02V7bVfZmln7Oer4rrCdHnesSucZGTc4HS
9+Eu3k+vxdG1noO1bGMsLy9vOgdbO00deyt8ru3rmPo8mtLxJXlIn1zpiy7X
1zz53Jra/zT7xpjkHj30+JI0jK9vGF+fxHxuau4n9EeW7bAOkX09tB6QHteL
95Ft9Thc6eesfTTXE6LP9UZoXB/+lkPp+7A991rmodHjYEPj83RtqW3tF2Ea
n6vnfw357hil40va0WPA5fqfR59bU/vvex6qSe/RQ48vScP4+obx9ckkPlfX
ZkP1XL2+kKw/JP8f9Vu9rZ5XWfo5a0/89lsXi3vIIUigz60fzN+i8yc9jrSN
0vfhLvOt6vVW+sxzdV9C5NKhnDRXqdx1Gp+r3wOeN5fS8SXtSFz12rHSb7mt
L+/Q41tj+5923xCT3qOHHl+ShvH1DePrk5jPTfVb1vXckM/V6wvBu6I/cmxe
Ze2BZc4pridEn+sVnftBOXMTaWq4D+vzj+Wvts9f2/xaQK9tmfKVel4Y5Lc2
9y7tc3W9L/ezCzXEl8TRdXq0XQgeCGu26r/j+g/hIb61tf9p97VMc4/2EF8S
h/H1DePrk5jPTc1zrLexaweJ9PpC+r9Dx0TNV9d7uZ4Qfa5HdD8+CGPFulLD
fVivJYm8MQRqXTl1E40dYxvzCnobmd8GOSvmfQoJ9R1dn0EfZ/wtVfcBk/pc
nSfHvp8YNcSXxNH941PCdiE8xLfG9j/Nvppp79Ee4kviML6+YXx9kvK5ds4o
SPdZtnMka+n1haSua8fmihZfPjm2DdcTos/1hs2Pu9ZxhRruw7ZeaXNBW8ux
c5TCk8ILIqe0uab1oxY9zhbKRfqVxvLbGF1zdT3+D8JcvF2oIb4kDq5lXAuY
k0hk2zZej/VV9xDfWtv/tPeOPu7RHuJL4jC+vmF8fdLmc2V+KNRtdd0VeujB
R6K+S/c/jo3NFWEMbuh9S3vHIUmgz60P3adOhDoj6iJW6P+YWruilvuw/TzI
XdGH0c6/ZPNJO5bW1lTtd4VcGHk15lC1eWjOOkxCznzLyLlxPthW6sP2M0LY
JjTXFdDnmDuHtqaW+JJuzMv4XKHG9t/nvpPeo73El4RhfH3D+Pokx+eGlFpf
V2T3Cc3NLNJ9m7meEH2uJ2wdoU2xPo+glvuwXp8jJVvPtGNp4Q8seqxjTLKe
Sy45PrdLnEIeVq+pCuXO66ypJb6kG/My37JQa/ufdN++7tFe4kvCML6+YXx9
EvO5qL0uv/HO2NzHeg7lUP9jK9R79X6YWzm2rV5fKDXul6LPHRp6rFqOkKvF
qOk+jBxWr5FpP0NsjJzeR89Zq9H9jLXQNzG2Twp9vJjPDdWiuuS5uWuWpKgp
viSfeavnglrb/yT79nWP9hRfshnG1zeMr09iPlfPdYx+xfCoUI6/tcfssk/X
41P0ufNEjfdh1GiQ82I8G/7NWWcS++Rsh1xZ5rWN5c254P1y1yku9R41xpfk
Ma/rq9ba/vu8d+TiMb5kA8bXN4yvT3J8LlW/BPpc3/A+7BvG1zeMr28YX98w
vr5hfH1Cn+tDAn2ub3gf9g3j6xvG1zeMr28YX98wvj6J+VyMyy3t3Sj6XDIO
78O+YXx9w/j6hvH1DePrG8bXJzGfmzOfMlWPBPpc3/A+7BvG1zeMr28YX98w
vr5hfH1i/RLmmvrl6VdHcy2X9m4UfS4Zh/dh3zC+vmF8fcP4+obx9Q3j65PS
/oyizyX58D7sG8bXN4yvbxhf3zC+vmF8fVLan1H0uSQf3od9w/j6hvH1DePr
G8bXN4yvT15+6QTlQIL1udJuKYqiKIqanZq191IURVEVqbQ/o+hzKYqiKGro
Kp3PURRFUeMq3d+WYr9lks96PkVcwvj6hvF1TgU5HUVRFLWh0v6Mos8l+TBP
9g3j6xvG1zkV5HQURVHUhkr7M4o+l+TDPNk3jK9vGF/nVJDTURRFURsq7c8o
+lySD/Nk3zC+vmF8nVNBTkdRFEVtqLQ/o+hzST7Mk33D+PqG8XVOBTkdRVEU
taHS/oyizyX5ME/2DePrG8bXORXkdBRFUdSGSvszij6X5MM82TeMr28YX+dU
kNNRFEVRGyrtzyj6XJIP82TfML6+YXydU0FOR1EURW3I+qXlN95pDj/97EjP
HX2+1V8tvnyyeeqJZ0bbp7Z56MFHmjtu3z3S5++5d7Q93qu0P/QigT63fq5e
vdqcOnWq2b9/f7N79+5m165do3+PHDnSrK2tJfetLU/G+eK85XNAe/fuHX2+
aTlz5kyzb9++9ePiPQ4ePNhcvHix03FwLgcOHBgJ+7d9xwK2wz44B3zGGOfO
nRu9nqtjx45Fj1VbfEm/1BZftt9xlpeXR+9hv4/jx4+P7tvtb9ot/1p5daE5
+t2F5uGHf/Pa+2xrHnjg+uarX/tw85OXb2hW1rYVzw+pblq9Fs/D391mdH3z
/e9f3/zkhe3NqbO/27xbwXlS/YjtdxiyfunTn7qtuX7bDevC/0/5q5tvvGV9
23cuXNrkmfWxQnr0i48V94geJNDn1s3Ro0ebhYWFpBYXF6P715Qn53yW3JxU
c+XKlWbHjh3J4x46dCjrWCsrK5v2Rf7dBryo3mf79u3RbdvONaRYzlxTfEn/
1BRftt9x4G3bvo+lpaX0QXJzr5WF5sDn2u4T25qvPvsx+qLBaKH5r5/NuP//
0Yeb75z4aAXnS00stt9Bqc3nQj9/cTHqr/T21ufa48AT3/qJT479Df+/tEf0
IIE+t15COVtM2DZELXkyvLg95507d276W05+acE+9hihY6eeBwihfBv11xio
NYXeC8fp8h5tghcIUUt8yWyoJb5sv+Ps2bNn0/ao44aOFWu7IzJyrndfX2j+
9fvz7xXfPPnx4nkilaOF5ls5Pvef9JXjt1RwzlRXsf0OTzk+F+rqc9GXWe9/
8sTp9ddWV/5x1CdavG9pj+hBAn1uvaAWIPc+9KeT/nvIm9C3Tt8bUVsIUUOe
jFqkPlfkiLo+aWspqBvlgjqP3lfXblBbsnlvCvQ1lDw7J09G/8jYb1UqT8Z5
ra6ujuJphb9fvnx5LI9OHauG+JLZUUN82X7HQRvV2+J9Nfq+HXp9jLac69JC
c/8Hx8/tvq9+tDn9+vbm3bXfvKaF5vXT1/zSAxuv//UJ5snD0Hg998svfLx5
91q8V1ff1ywvLTQvPWuuy/fc1Jxb+60KzpvKFtvvIJXrc2Pjb2M+F/2R5e/f
ePzJqD97+62LxT2iBwn0uXWTGp+GsWBteVkNebLkn6lcVft21ERy0ccNjWOF
Z9TbxPoRhnL5tjxZ91vE+SNOOXlyDjpXT+XJNcSXzI4a4sv2Ow6O1/Z8UX8f
eEYZpSXf+sXXTE3vhXgO/NbJhebf/8vfbn509ubieSKVo3Gf+9cnNtdr3z6h
47+t+dGrjO2QxPY7TKV8q/aqoX7JKZ+r+yfrWi5Fn0vC6DpKzT5X55yxOZVs
jSTZ1y+yT87747lBCMzxpetRmIemLU9GLQrfu/QZ17n2ND7X9hFNUUN85x3U
IGX+IgjXT+j6xd/gGWVb/Ns2frOG+LL9jqPrtYhjCPRhnt7njteC7vzqPy+e
/1F9yvrckAcavwZY6xuS2H6HqpRvvfCrX7fOGRXzuQcee5xjcOlzSQd0n7+a
fa7OZZHb5myXGlMn6FwWuXAMPX9OqNYUyreRT3c5F9CXz9V9NWN5vVBDfOeZ
1FhrzMUrhMa3iuDRYtQQX7bfcWy/5NB3oq+L5DxYiVzr1aO6z+r1zc9WPlI8
/6P6VJ7P/ctt9LlDFNvvcJXyrfj/Mo5WZNcCivncH37vx5vmbX7ztQvF/aBX
CfS5w0XXDNCHOUTpPBl1ndw6j57DJSc31blsqmai89JQ/qrfV3LSUj7X5tBD
WzdqntA1RFwviJ1+9qQ9mfRDx99Q07VzF9c6jxzbbxj7rELeA8fQ59M6L1ci
1/qHJzaOf+sDt3AeVndq77f81nHtlT7UvLx6YwXnTeWI7Xe4Svlc8a167aC7
7rw7y+fa/URfuO8B+l36XGKw+Wds7pfSebLOHdtyvmny5NQY1lSerOts+llB
KZ+rxwziOUYbpeM7z0jNzvZd1R5W5mvC9Wnrevq6jF1jpePL9hsmNBe+ni8h
9zlVPNdaaH76sOrz+MQfFs/9qL417nO/cvzjo79dvnRds7q80Pz3w6bvx8P0
SsMR2++QleNzMb5We9XzZ9/I8rn4/yGvC33+nntH/aJL+0MvEuhzh4mdb7nW
dWd07tg2Pw1qOpPmyant9TMBew76O9TzfZXwuXoenFSNT1M6vvOM+Fz7PELG
zeessTMkn8v2Ow7myEr1W88ikSfrNWfuOcQ82Z8y18+FPvuxZmnttys4Zyo3
tmy/w1WOz7V/x3/n+FyR7cOstfjyyeIe0YME+tzhgbpQTi0XDDVPbpufB0yS
J+uaj34/22+yhM/V/WBz56wtHd95RsdL6pF6rGhsjiJBj0+ttd8y228c+OqU
z03OPyUk8uT2sZvUsJXpc/8L5y8anth+h6xcn7t0fjnoT3N8bpvfxbFL+8Sh
S6DPHRZ2nY3YuFyhpjy5LXfU/f661oOwFmYMzAdkz8HWTlPH3gqfa/uhpz6P
pnR85xm7lo32PLH5ktDPFp5YzyGc8sOl48v2G8autYTavV0LOOs+kMiTdT1o
99fodfxp3Avd9sBNzd9+//3NE1+9dv+4Tl1H7/lQ8/zrN1VwvlSX2LL9Dle5
PhfC2Fp5Df2Ru/pckZ6LGbrj9t3FfeLQJdDnDgebV0My/i9GTXkyVMs8Nnoc
bGhsoK4VJedLVUzjc3VtL5S3xygd33kn1Cah0JrX+vrWSvVPLx1ftt/0+YTO
Xb83lBxnn8iTx8f3MU/2p3Gf+82Tah6qlfF5lhc++/Fmde03KjhnKje2bL/D
VRefa9cZ+vmLi6N5qbr6XOgbjz/JdYfoc+cambM1lUtbSufJXeZr1fWwPvNk
3c8buXjMm+Qo9VxhGp+r3wOeN5fS8Z1ncC3buXV1HK2/knV2IfFpsk+snlk6
vmy/m9F169iaUPa5VfR7S+Raer7WhT/9WLOy9oHi+R/Vp9J9W999Zfza/c7p
HRWcM5Urtt/hqovPtf4UNV141El8rp7bivVc+tx5w44Dy5mjCJTOk4E+71j+
a/tjp/JpQc9rm8pL9ZxdyK1t7l7a59q1VXM+u1BDfOcV7XFlPKqt9eG6jqHn
7I3NWVVDfNl+w9u0fU69XfSZZCLXGlt/85qeeoU+x5faxnAuNIc/t/H6v3h4
87pDVL1i+x2uuvrc1ZV/3DS+VuZUntTnsp5LnztP2P6OGK+WSw15sl7nNzYW
UeaolZpNDnaMXsxT6G3EjyBfRi0mJNSWdG0OtTepw6WY1OfqZxhtcxdZaojv
PKL9rJ1zSc9F1TbOWtc0Q9QQX7bfDazHTvnmrOcdyXxrobn/g7omdHOztLYt
uf3ZE+9rzq98qHieSOWofa6it/+nij/Xzx2Y2H6Hqq4+F4rNJyXb419ZKze0
dtDbb11MrslL0ed6RY9Dg3LruEINebKtV1qfbmtBdv5o5LTIO5E/W09h81mL
HSuXi55TJmfuWKFrrm/rf/BIXaghvvOIjluIXJ+r52wOeaYa4sv2O44+Z3y2
EIh7Vt23Jd/6h2+bmvRnP9a8svLhTdutvrrQHPhc3C9RNSpnTt7xcbr3fvef
VXDeVK7YfoepSXwuFFoXV7bH+rp2nqnDTz/bvPDT482jX3xs035vvnahuE8c
ugT63HrR/fpEyItRX7HC/K2h9YVqyJOB/RzID9EH0o5js7ms7SdoazL2O0J+
irwceaZ9RpBaf8mSM18r8mecD7aV+pL9jBC2Cc2VA/Q5ts2dHaKW+M4beg7g
1DWJa0euYVwLa2tr69tpLxTzVbXEl+13o/3q+rb4c4whRn0ax7Rrm+PeHKU1
57r2nf3Jwqbv+M/u/93m/2fv/ULtuq7732On7i9V+VWijeMGx43q3IvhZ26E
IQ+hAbnXUD/J7TX0wXJz8+QoJfwK9k/4oThByYtJ9ZCfchMRJ8YR10kEchyT
qsapK+uHYpnqwkEFqWAhLJAcjhVyjI7xCUIqJ9K6/u50njP2OHPONdZe+5w5
19jfD3yRvfdaa6+1x57rjO8a8883D/1B88w3b2v2qLVpmCcPRba1Z/7tmyK+
n7qzpSZI1SW23yFqUp8r+x3Htk+tl6v1ytHXintEDwrQ59aLrmW0KVYPqSVP
lr4gJ13P1P0EUafRyDVaUsrOeRrBkid3iU/Mw8r+rZB1XlhJLfGdRfSYecRY
1vpC31f9G9bzVUGpsQi1xJftd639dp0HKzsnviXvuvZBrmxZZ3Xkg/64Ob30
seJ5ImXR+NozSX/zzvg6Q98/Sx80KLH9Dk7aL3WZP1nPSSXfw754P1b3DX2V
uW4ufe4sIce8WRSrG9SSJwPkwHKuUn3uqTFsch98JzFia1cGT5HaJ4c8XipP
jtWyUoo9g4itl9KVmuI7a8C/6NpdEF6X/gb1QO2LIdQva15XSML2O4700rHz
jnn6dZhzr7nm3382t672E/Tnn/uj5tA/f4xrzwxKc82Le9Zi+J0zKf861xz+
4tp2z735iQrOneoaa7bf4SjmmTDX1DQ9GMbjom8yfO3i5fenfnyKPndWqClP
DqDGg5wZ+T3+bVsDOOxj2Q65No4L5ea6tYDPs3xmyc+oMb6zCPoj4/cm+yXH
QKyxHWSJe43xZfsdBzGX30fbb2B85+452G+uzTWLC7c277xzW/PO4m3N8jWu
VzJkXb92a3PNuN31a/RBQxfbb/0q7c8o+lxip8Y8mUwPxtc3jK9zKsjpKIqi
qDWV9mcUfS6xwzzZN4yvbxhf51SQ01EURVFrKu3PKPpcYod5sm8YX98wvs6p
IKejKIqi1lTan1H0ucQO82TfML6+YXydU0FOR1EURa2ptD+j6HOJHebJvmF8
fcP4OqeCnI6iKIpaU2l/RtHnEjvMk33D+PqG8XVOBTkdRVEUtabS/oyizyV2
mCf7hvH1DePrnApyOoqiKGpNp14/TTlQQPvckFdRFEVRFLVxKp3PURRFUeMq
7c8o+lyKoiiKGrpK53MURVHUuEr3t6XYb5nYWc2niEsYX98wvs6pIKejKIqi
1lTan1H0ucQO82TfML6+YXydU0FOR1EURa2ptD+j6HOJHebJvmF8fcP4OqeC
nI6iKIpaU2l/RtHnEjvMk33D+PqG8XVOBTkdRVEUtabS/oyizyV2mCf7hvH1
DePrnApyOoqiKGpNpf0ZRZ9L7DBP9g3j6xvG1zkV5HQURVHUmkr7M4o+l9hh
nuwbxtc3jK9zKsjpKIqiqDWV9mcUfS6xwzzZN4yvbxhf51SQ01EURVFr0n5p
8fL7zeHnXxzplaOvtfqr+VNnmuee+cFoe/3eL39xZfVYUi+98HJz/NWTzVvn
3m7ev3KtuEf0oAB9bv3cvHmzOXv2bLNv375m165dzc6dO0f/HjlypFlZWcnu
W1uejPPFeYfrgPbs2TO6vr6cP3++2bt37+px8RkHDx5srl692uk4OJf9+/eP
hP3bvuMAtsM+OAdcY4qLFy+O3rfq2LFjyWPVFl8yXWqLb43td2lpqTl06NDY
OeE4k5zTjRs3RscK7X9+fj67/eLi4ugc9fdx8uTJ0X27lZZ8a/ntuebwj7Yo
bW1+/OOtzc+Ob2vOXvij5jcV5IXUdLT0QbyP/miu+fu//y8f/I62NI8/vrX5
h29+pPnZqdubpZUtxc+P6ia232FK+6XPfPr+ZuuW21eF/8/5q7vuuHt1W+1Z
9bFSevCBXc3CpcXiXnHICtDn1s3Ro0ebubm5rHK5WE15suVarJ5Sgtx0+/bt
2eMid7WAnFnvi/y7DXhRuc+2bduS27ada0ypnLmm+JLpU1N8a2u/169fb3bs
2JHdD8c1+c3/BH7V2o71tjEtLCzkPzCbb801/+9fGe4Pn/pI88PTHy+eG1I9
tDTX7P9cW6y3NP/w4p/QFw1GbL9DVZvPhd44MZ/0V3L7SX1uUKwmTNHneiHm
uVLCtjFqyZPhxfU5x3LUXF6ZAvvoY8SO3VabAbF8G/XXFKg1xT4Lx+nyGW2C
F4hRS3zJxlBLfGtsv7t37163X6xtwY9aQDuPXWMM/dn4XNRxY+edarsjWvLk
71ry5P/U10/eXTw/pLrrN+/MNf/XbfY4f+fMnxY/Z8oitt+hyuJzob4+F155
eek/Rtu89+7V5s2zF5onn3iKXpc+d2ZALSDcA9GHLvTfQ96EfnmWXK6GPBn1
FHmuyBFljUXXQlE3soI6j9xX1l5RW9J5bw70NQz5ssXnol9k6m9WzufivJaX
l0fx1MLrqFPJPDp3rBriSzaOGuJba/sNnhL3PvmcD/tpv5n1mv+JtR2jjcpt
cN+QyPt27P0xWvJkWQ/62vE/bX5zbe6Dz/+dZnFhrnn9RXW+t9zZXFz5/eI5
ItVBH8Tzi783Hscv/MPHm3PvbGt+s/JfPtBc8865D/zS42vv/8/T9LnDENvv
UGX1uSn/afW58LWx/TEeWH/WlV/9urhvHJoC9Ll1kxufhrFgbV6ohjw5+Mec
15S+PVVDiSGPGxvHCs8ot0n1I4zl8m0+V/ZbxPkjThZvakF67VyeXEN8ycZR
Q3xrbb/wtqm2aW33AYw5ls8MQ/uLtWNZ9009X5TfB55RJumQJ//P0+vrPe+d
lrnyluanb99VPEek7Pq3b6qa3vG0h333zFzzf/8f/7X56QXGeBhi+x2qcr71
q19+esx/xuaM6utzIfha+Tn43NK+cWgK0OcOF1lHqdnnSs+YmlNJ10gs9Re9
j+Xz8dwgBub4kvUomfemcmnUovC9h1qS9Mp9fK7uI5qjhviS385HhN8D/A1+
S/j9xJ5PhfnkwnZtY79riO8Q2q8GNd1UnbhtW+mRY+1Y1msRxxjowzx9nxvz
QOP1QNb6hqTx2D30D/97BedETTO+bL/DVM63WvznNHwu9O0Dz459Fvo4l/aO
Q1KAPne4yD5/NftcmUMit7VslxsTG5BeFLlwCjl/TqzWFMu3kU93ORcwLZ8r
+2q25fU1xHfWSc1HJMeqwvfp/vBtNUFQQ3xrb78xYt41hfTRoe+E1eemvhPZ
hrPPMqaQJ/+PLcyTh6i3j8o+q1ubny99rPg5UdMU2+9QlfOt+H+sLST9J/oZ
b4TP1Z6a6w3R584asmaAPswxSufJyO+tdR45ps6SJ0svmquZyLw0lrfKzw05
aSmfq3Pooa0bNWtIj4v2iN8P6vH4b+nd5BgD/Lbwm7LUSUvHdwjtN4b8vnNz
Y8WObWnH+llFuF7sK7+H1nm5OuXJ6/s9vntSeqU/bE4t31E8R6Rs+vdn1mJ3
7+N3cx5ld2L7HapyPjd4Tbl20MMPPbIhPld/jmV7ij7XCzr/TM39UjpPljlj
W87XJ0/OjWHN5cmyj7B8VlDK52rf1Ebp+M4ycj703BrHcty2Xlc5+LFa+2PU
3n4B4gCh7zjiEOrm4d/c2FxZY8f++ppTcYnNhS+9tfU5VZc8+esn/3T02vVr
tzbLi3PN/zqs+gb8Pb3ScDTXvPr3os/yM5+s4JyoaceY7XeYsvjcM6fPjdVa
L124vCE+99577ot+BkWf6x0933Kt687InLGtzyFqOpPmybnt5TMBfQ7yO5Tj
KUv4XOmHoNRaUZLS8Z1lwpjutt+1nLdIt9Pce6B0fGtvv7r/g1bO48r+0PKZ
krUdoy90bo0wEx3y5Kz+6k+ahZX/Wjw/pKwaX3Pm0UOfrOCcqGnHmO13mLL4
XP06/nsjfK6s57517u3i3nFICtDnDg/0jZT3yNw6HkPNk9vmRwWT5MmyZis/
T/ebLOFz5VxY1nGIpeM7y4T6ZVjXFfGPeVXpxeR6PGEfjz53M9ovaPO5EOb+
yh1Tf/fWdoznUjmfm51/KjCNPPn/4fxFw5Nl7CY1bLH9DlVWn7twaXGspjt/
6szUfa6s57LfMn3uLKDXy0iNyw3UlCe3eT/Z769rPSiWywbQH1Gfg66d5o69
GT5X592565GUju+soteh0uu1ov956LMqvZiek0jOlxTzhqXjW2v7laDfA+aC
wr/4fnVfl9j3Luc20M8JLd5er7WE/s96LWDTfaBDnnz/43c2//jj25pn/uGD
87pVfM4tf9i89s6dxXNDqovG67m7vkmv409sv0OV1edCX/rC46vvofY6TZ+L
+ZWlj37v3avFveOQFKDPHQ46t47VhzQ15cmpmlVgM+exkeNgY2MDZW2qbe2X
QB+fK+eejfnuFKXjO6vE2mJMAfka/BB+U/L3C8X6qZeOb63ttw09h7ocW6zH
1mrkswfLfMv63OW9A8qOs++QJ3/njJjHZml8nta5v/rTZnnld4vnh5RVenwu
fa4/sf0OVV18rp4T+Y0T86N5qabhc/E+51umz50l9LoksfU5NaXz5C7ztco+
gNPMk2U/b+TiVo8SU+65Qh+fKz9Dz1WUo3R8ZxUZa8ybLNuirOuFGq0eaxBT
rD2Xjm+N7deKXoc6nLt+vpBa70kLcQWybo2xBjH0c6vk99YhT9Z9W3/z5vj5
/fDc9uL5IWWXnG957v/8k2Zp5cPFz4mapth+h6ouPheS69yipiv7GvfxuXJb
PaczRZ/rDT0OzDJHESidJwN53qn8V/fHzuXTATmPTM5Xyn6MyHF17l7a56by
cQs1xHcWkb+hME+vJHgn+cwCdULMBwxPB+G/ZZ/cGsfngtrarxVddw1tV9db
rYLP7VLfbnuGMaJHnoz3D39u7f3/9vfr1y2h6tXY+rkf6Lk36XN8ie13qOrq
c3X/4uB3+/jcw8+/OHY8zkFFn+sZPfYvllenqCFPlmPhkLPGQM7ftWajx9gi
144htwn1NeTLqMXEhDxY1njQxzl4kxyT+lz5DCP1/aSoIb6zSohZbGxpeC83
RxwIzzhSa/bUEN8a268FxCXmSXH/xHWk2r+8XgivYXt4fP2MLPfcy3Jt/fLk
DzXv/X/CK3H9zYFprvni78ma7l3NwsqW7PYXTv9Oc2npDys4d8oSX7bfYaqr
z4VeeuHldV63zefGvCvG4D75xFNjx3jwgV3FPeMQFaDPrRs5jhSy1nEDNeTJ
ul6pfbquBWlvAE8KL4j8Wee52o9qdO3GSqzvqYWuub6uOWFcYRdqiO+sEp4/
6fGX0gu1je0Ov99U/9ca4ltj+4VHxr6pdXflGNvcc4QUuXYszzlVX0557PUn
2i9PxjZynN9jP/rfiueIlF3//n3Vb+Cv/qR5c+kj67Zbfnuu2f+53O+Aqk9s
v0PVJD4XkmsAWXwu/vurX3565Gs//+hjY/2dZV0Y9eLSnnGICtDn1ovs1ydr
C8irtTBGMFY7qiFPBvo6kB+iPqLHsWkvqvsJ6pqq/o6QlyIvR56pnxG01dYk
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
THaX52nAmidzrZFhwvj6hvH1icXnat8pX3/yiafG5p+y+lwI433DNtg+vC77
LKOWXNpDDkEB+txhMWSf23a+st9u13oQ5rFNgbG11nOQuWoqX5/GNem1WtCP
Uq8lajl+6fjOOvBLmI8K8ZTjbeU82tLn6n7O6Jee+62Vju/Q2q/V5wLEIvWM
qWs71GN+c9cjsebJlmdepD4YX98wvj6x+tz9Tx9YNx8V5puS/hc12i4+V9aJ
ZS1Y9ll+48R8cQ85BAXoc4fFkH1uqmYVKD2PjazFQZhXaCOuSc9Vo89djw3O
jfMrHd9ZR9f+dS03IN/D8wx4LPn7je0DSsd3SO1XH9NyDrg+PKcI60LhORfi
A28t/XVbHVnfO6xwfJ9vGF/fML4+sfpc2T85zKksx9jCm8rjWHyu9skLlxZH
r6e8M0Wf642h+dwu87XKPoPTzJNl3SbVn1DXV3Nr3fW9Jln3Sn2OzptTn1E6
vrMOflv47UFhDqIwx5Gs6Vlqh+jHrikd36G039gx+/YVlOtGtdVj5Hek5xrL
YZ2vtcu6RqQeGF/fML4+sfpc/R7mo9JrEHX1uZCs3WIfHEfP3UzR53plaD4X
yBwwlXvquZ9y+XRAruOS+y5Qp8k9V9XroFrmSZ30mrrUx9o8EKghvmQNOY+2
np8YfZSxflDwxfhvWTOscXwuqL39Sqbpc+XzqNwa1vr+Ybn2QJf1N+XaZmQY
ML6+YXx90sXnHn/15FitNejee+5bdxyrz5VjcXEc6XvPnD5X3D8ORQH63GEx
RJ8r++/IcYsS+TfBOoeLnt8UuXYMuY0eA6nrbNZ17ia9Jl0f0/MSpc47dW01
xJeMI71WG8EjpdbsqSG+NbdfzbR8rpwHuy2Oso6d+n5StMVXnoPlfo/zbluL
jGwejK9vGF+fdPG5up9xbt0fq8+FYsfU8zpT9Lle6ZJP1pAn63qHfq6pa0F6
XCxyV/yNwPXqPFeug4l+o5rcOrh6nKyljjuNa5LnnKpPoc+rpUZUQ3zJOHIu
s9xzDBB+C6n+6zXEt9b2G0PO5WaZ8zmGXts6V0PW9xDMS9aFtvjquenwHcby
YHxuqD9zbtd6YHx9w/j6pIvPheT8ynKsbh+fGzumHu9L0ed6AHkUcj3kWpCe
Dzi8jm0wxlRTQ54M5DmH88b9XI9D1bms7uerx8nJvo/h7wjycvjEMF4ylX+H
10OujVouvG5MeE//fZr0mvTanThP1JVR30K8ZT/NcF4paonvrBF+l4i5/F3I
5xPyORTiKvueYx/5+6y9X3qN7Rcgjwz3QPy3rK2i3YT38bkyTuG8sQ1q0bgW
tEHdNlN19oA8R8uaZRpLfGNrHeFzcW24Lj0XGvPkemB8fcP4+qSrz5XjZyF4
1Jjv6uJz9TGht869Xdw7DkkB+ty60fWMnGJ5Vi15shyHmJOuh+h+vrH11uV6
LinpWq0+rkV6PtxJr0nn/m3K1QRrie+soX8/si4ZJOue4X38q/Oe3LxFtcS3
tvYbO3abZDws91XEKteHUK/BmxvDm8ISX7T/1LzeXc+ZbC6Mr28YX59ovyTX
tNVzS8W8MOZhjm2Deaq6eFaMzY2tMUTR53oiVi9JKdbvr5Y8Gci+OVrIdVPj
8+Q+qL3EiK09G/5upPaJeZMuOXyfawJ6XRl93jFPoKkpvrMG+k/EntUjp9HP
RHSNHsK+bd6opvjW1n67Pi+SPhf181Tuic+0zJncZb2jFF3ii99b6pzxHcf6
85CyML6+YXx9EvNMsX7IG7WN3r7rPhR97ixRU54cQB0GOTO8AP5tG8MY9rFs
h1wbx4VyHnPaTHJNATy/lft2eZ5bY3xnDcQavzWoLe5hO+ucvDXG11P7xTnB
807S9sL+Xdq6ZpL4hnOGLL85Ug7G1zeMr09K+zOKPpfYqTFPJtOD8fUN4+sb
xtc3jK9vGF+flPZnFH0uscP7sG8YX98wvr5hfH3D+PqG8fVJaX9G0ecSO7wP
+4bx9Q3j6xvG1zeMr28YX5+U9mcUfS6xw/uwbxhf3zC+vmF8fcP4+obx9Ulp
f0bR5xI7vA/7hvH1DePrG8bXN4yvbxhfn5T2ZxR9LrHD+7BvGF/fML6+YXx9
w/j6hvH1SWl/RtHnEju8D/uG8fUN4+sbxtc3jK9vGF+fnHr9NOVAAe1zQ7ul
KIqiKIqiKIqaFZX2ZxR9LkVRFEVRFEVR1DRVur8txX7LxE5ot8QnjK9vGF/f
ML6+YXx9w/j6pLQ/o+hziR3eh33D+PqG8fUN4+sbxtc3jK9PSvszij6X2OF9
2DeMr28YX98wvr5hfH3D+PqktD+j6HOJHd6HfcP4+obx9Q3j6xvG1zeMr09K
+zOKPpfY4X3YN4yvbxhf3zC+vmF8fcP4+qS0P6Poc4kd3od9w/j6hvH1DePr
G8bXN4yvT0r7M4o+l9jhfdg3jK9vGF/fML6+YXx9w/j6pLQ/o+hziR3eh33D
+PqG8fUN4+sbxtc3jK9PtF+aP3Wm2f/0gZHee/dq1FMtXn6/+faBZ0fbvHFi
fuy9V46+1hx+/sUxvfTCy6PXz5w+17x/5VpxT+hRAfrc+rl582Zz9uzZZt++
fc2uXbuanTt3jv49cuRIs7Kykt23tvswzhfnHa4D2rNnz+j6+nL+/Plm7969
q8fFZxw8eLC5evVqp+PgXPbv3z8S9m/7jgPYDvvgHHCNKS5evDh636pjx44l
j1VbfMl0qTW+NbZj3CdPnjw5Og+5L9rk0tJS676T3mM38/68vLw8Oi6uEZ+x
e/fu0fXhOyP1wfj6hvH1ifZLd91xd7N1y+0jwZfq95eX/mP1fegzn75/9b1L
Fy6PvZfSk088VdwXelOAPrdujh492szNzWU1Pz+f3L+mPNlyLVZPKblx40az
ffv27HEPHTpkOhbyYb2v5W8QvKjcZ9u2bclt2841JuTSMWqKL5k+Nca3xnaM
Ntp2TsgtJ72e1D12s+7P+D7hn9s+C+dD6oHx9Q3j6xPtl+Bbgx998+yF7PsQ
arvhvbfOvW3yudC999xX3Bt6UoA+t15iniulVL2iljwZuZ4+5x07dqx7LecP
U2AffYzYsXP5ZiCWZ6P+mgI1pthn4ThdPqNN8AAxaokv2Rhqi2+N7Rg1Er1N
qJXo11EXlvS5x27W/Rn3mC73ioWFhc7fPdkYGF/fML4+6eJz0U9ZelX9vvS5
qAuj9ot+yuj/jFrvgw/sGtv/+Ksni/tDLwrQ59YL7nfh3oe+LaHfHjwP+vXp
vC5GDXkyapHyXJF/yvqkroV2eaaJ+o7cV9Ze8QxVe8oc6PMY8muLz0VfxdTf
qpzPxXkhN0c8tfD69evXx3L03LFqiC/ZOGqKb63tWLcV/UwIddzUvn3usZtx
f9bfOYT+0bIP9+Li4th3kHsuRzYXxtc3jK9PrD4X43ClR8WYW72v9LmyP7OU
9Lqff/Sx4v7QiwL0uXWTG5cm+8GkvFANeXLwjzmvKfNC1HCsyOPGxrHCM1qe
lcZy+La/O8hdwzY4f/ncNudNLUivje8vRQ3xJRtHTfGttR3Lmm+sbgrfKffV
PrjPPXaj78/wz/Lcc31S8J3gvtE2FplsHoyvbxhfn1h87i9/ccU0vlb63FS/
ZMxLxb7L9LlkPbJ+UrPPlZ4xNaeS7nuY6qeb28fy+brfYgDPWGUdCnNFtPlc
1KDwvYe/S9Ir9/G5um9ojhri6xHEEr8B/F7gsXLgeTx+C/B4+B1hP+198HuG
TwzzlOFfS/+0muJbazuWPjcWK9SDu55TwHKP7bNvW3x1HYgMC8bXN4yvT3I+
F74Vr6XmnZrE52LeZfpc+lyyHtnXr2afK+/1yGkt21n67kgvihw4hZwrJlZj
iuXZyKO79iOals+VfTRTvjxQQ3y9oec0ys1DJmv6UnJ8amxMqzX3qSm+tbZj
6XNjc03J779ru7TcY/vsm4uv7gc+ydxepCyMr28YX5+0+dyHH3pkzOdizK3F
56b8MLxt2AbjfUv7Qy8K0OcOFznuDH3kYpTOk9v6DEpkvmrJj6UXRX0shRxH
F8s35ecGT1PK58pztfxtLB1fTyB+sbmLLP3W0Rbx24Gnwn9Lvxb6oON3hpqu
nqM310+tlvjW3I71cwTpdfV7Xdc9stxj++ybi6/8XnL+n9QL4+sbxtcnOZ+r
JedWbvO5mIcKr8EXQ3gvN1czRZ87y+i8MzXnS+k8WXq/tjlY++THuTGsOZ8r
82CZi5byudo7tVE6vp5AnGUdPRd/Oddubn1jgN+mrgnL32Tu91VLfGtvx7Hn
E2F8bHjO0NY3QmO9x/bZNxdf6ZO7njupA8bXN4yvT6w+F/2N27xWl3WF5k+d
Ke4NPSlAnztM9Hyeta47I/Pjtnlp5JwNXfPj3PYy59TnIL9DOaayhM/V6w9Y
5qMoHV9PoC8u2lVoS7n4h/HcXeZa0gzV59bYjoHs/6xlWQNbY73H9tk3F1/5
vMC6/jepC8bXN4yvT9p8Luqysj47DZ+LtYZK+0JvCtDnDg89fjBXZyidJ0+a
H1vm6JkkP5Y1W/l5ur9kCZ8r58Ky+qfS8fWK/M3E4h9ymDB/JmLfxQdJTzaE
fss1t+OA7g8uhfaI+cKsdLnH9tnXmidzrZFhwvj6hvH1Sc7nyrmRLesAaZ+L
tYeee+YH67xzar5mij531tDra7SNGSudJ3fxfnIdjq51oNy4O+S3+hx07TR3
7M3wubqfo3UcYen4ekXGUsdfr0El8xkIfc/1uGrUiuGJ0S9X9rFF3S9HLfGt
tR0H9Pq6+F71urnyuUSOrvfYPvta8+TcuGVSL4yvbxhfn+R87qULl5vjr540
91/OzUOlPXOYy5miz51VYmuO47UcpfNkfc61zF8jx8HGxgTKmpS1z2Mfn6v7
XFopHV+vdPG5KUm0F7bUckEt8a21HQPpq/V3Kr1xUGq929h1Wu6xffbl+D7f
ML6+YXx9kvO5Yf1c1HGlR8V6um0+N7Zm0IMP7Fp9H/9d2ht6UoA+dziE+VQs
+VqgdJ7cZZ5WWZOZZn4s+xEiB7f6lJhyeWsfnys/A57XSun4esXqc1Gble1Q
riUj++ziN4jfKBSesYT2nKth1hLfGtsx0D42tn6ubu+5z5jkHttnX+t8rX3W
KSPlYHx9w/j6xOJzIT3GdhKfi/ow51umzyXr++VZ5igCNeTJ8rxTea/u72cZ
6yjH4+X+jsg5YfC3R+fspX2uXvukyzjPGuLrkZzPlb+f2JjP4HdyzyvkfM25
+Ytrim9t7RjIXDK3FjH6bITtUn3FJ73H9tm3y/qbXcYXkzpgfH3D+PrE6nO1
R42N1W3zuRDXz6XPnXV0n8cu98sa8mTZfyeVY8q/CdY5mPQY21gtB8htQo0N
+THy4phQ75G1GdTfQi0ux6Q+V+bIbeM1NTXE1yM5nwvCe7FabHivbe4i6dFS
1BTfGtuxHF+Q6xuIOOX8cJ977Eben+VxLfcU/Fbb1twmmwfj6xvG1ydWnwvp
MbZ6rK7F52KftrowRZ/rFTmOtGuNAdSQJ+t6pc4DdQ1I+wPkr/gbgXxSz9+q
/ahG5sE5P6FJ9T9to2uOL8ccQpivqAs1xNcjbT43eBu9xrGs9baN65bza6f6
CdQU3xrbsazTQqkcMTcnTJ977Ebfn+V9KNxXYteI+0YYp8y5XeuB8fUN4+uT
Lj4XkmNsoYVLi518LtYUkvu/cWK+uEf0oAB9br3E1slAbozcWgvjBGP1o1ry
ZH0dyHlxP4+teSlpG1unvyP8HUE+jvqNzkG7rA1imW8ZuTrOB9uG+rC+Rgjb
xOa6AvIcu8zrGqglvt6Qni1Ws5X5i/x9yLmUcYzw+8XvQOY3sr6YeyZSW3xr
a8e6FgzhXOA3kTui3elxs/JZUp977Gbdn3Wf6PAsAL9BfI+6nsw8uR4YX98w
vj7p6nO1T5Xr6lp8LvSlLzyenJeZos/1iq5htClWB6klT47NexqTrmfqsbSx
9dalt0hJ193asPjcLvGJeVhcq9zGOq+zpJb4esDyGw3jTfXvUucyoQ+t3k57
LijXz7W2+NbYjnPr5mppr9nnHrtZ92c8I0jN162F3xf7PdYD4+sbxtcn2i89
/NAjrWv/6HVyl5d++zpquxb/Ksf6ct5l+txZQc9j0CbkiZqa8mTZNyd27qlx
eXIffCcxdP8g+XcjtU+OVL1OEqthdclxU+ukdKGm+A6dLj4XoGYYe1avf2+o
Kca2Q+4zlHWFJDW2Y8QudU4Q3os9T+hzj93s+zN+R6l8GdeX6jNCysH4+obx
9UnMMwXf2qbUdn33p+hzSZwa82R4BeTKoW+hZX1K7GPZDjk2jgul8m0r+Dzr
2pmlPqPG+M4aeP6O31rbc3jEGduF/swWao5vje0Yx0Zf5nBOXdYFKsEk8Q3X
CHX5LZHNh/H1DePrk9L+jKLPJXZqzpNJfxhf3zC+vmF8fcP4+obx9Ulpf0bR
5xI7vA/7hvH1DePrG8bXN4yvbxhfn5T2ZxR9LrHD+7BvGF/fML6+YXx9w/j6
hvH1SWl/RtHnEju8D/uG8fUN4+sbxtc3jK9vGF+flPZnFH0uscP7sG8YX98w
vr5hfH3D+PqG8fVJaX9G0ecSO7wP+4bx9Q3j6xvG1zeMr28YX5+U9mcUfS6x
w/uwbxhf3zC+vmF8fcP4+obx9cmp109TDhTQPje0W4qiKIqiNk7Nz2+lKIqi
KlJpf0bR51IURVHU0DVpHkZRFEVtjEr3t6XYb5nYWc2niEsYX98wvs6pIKej
KIqi1lTan1H0ucQO82TfML6+YXydU0FOR1EURa2ptD+j6HOJHebJvmF8fcP4
OqeCnI6iKIpaU2l/RtHnEjvMk33D+PqG8XVOBTkdRVEUtabS/oyizyV2mCf7
hvH1DePrnApyOoqiKGpNpf0ZRZ9L7DBP9g3j6xvG1zkV5HQURVHUmkr7M4o+
l9hhnuwbxtc3jK9zKsjpKIqiqDWV9mcUfS6xwzzZN4yvbxhf51SQ01EURVFr
0n5p/tSZZv/TB0Z6792rUU+1ePn95tsHnh1t88aJ+bH3Xjn6WnP4+Rdb9da5
t4t7Q08K0OfWz82bN5uzZ882+/bta3bt2tXs3Llz9O+RI0ealZWV7L615ck4
X5x3uA5oz549o+vry/nz55u9e/euHhefcfDgwebq1audjoNz2b9//0jYv+07
DmA77INzwDWmuHjx4uh9q44dO5Y8Vm3xJdOltvjW2H6XlpaaQ4cOjZ0TjpM7
p2m1wcXFxdE56u/j5MmTo/t2Ky351vKRueZHX/mw0pbmx1/b0vzsG7/fnDn8
B83KifJ5ITWZGF/fYnyHKe2X7rrj7mbrlttHOnP63Lr3l5f+Y/V96DOfvn/1
vUsXLo+9l9NXv/x0cW/oSQH63Lo5evRoMzc3l9X8/Hxy/5ryZMu1WD2l5MaN
G8327duzx0UebAE5s94X+XcbyIPlPtu2bUtu23auMaVy5priS6ZPTfGtrf1e
v3692bFjR3Y/HDfWdqbRBuFt2/ZZWFjIX3w23/rguj9rOLdPbm1++OxHi+eG
VFcxvr7F+A5V2i/BtwYv+ubZC9n3IdR2w3uo0Vp9LmrBpb2hJwXoc+sl5rlS
wrYxasmT4cX1Ocdy1Jw/TIF99DFix849DwjE8l/UflKg1hT7LByny2e0CV4g
Ri3xJRtDLfGtsf3u3r173X6xtgU/qunbBvVn43io48bOO9V2R7Tkyd/9M/v5
ff1bdxXPD6kuYnx9i/Edqrr4XHhT6VX1+9Lnoi6M2u/7V65FVdoXelOAPrde
UAsI90D0hw3995A3oV9eWy4HasiTUQeR54ocUdZGdC0UdSMrqPPIfWXtFbUl
nc/mQF/DkC9bfC76Rab+ZuV8Ls5reXl5FE8tvI46lcyjc8eqIb5k46ghvrW2
3+Apce+Tz/mwn/ab2mv2aYN4Xx4b9w2JvG/H3h+jJU+W9aCvfePjzcq/3Nos
/+x3msWf3Nq8/jV137nl9ubSz7cUzxEpqxhf32J8hyqrz8U4XOlxX3rh5XX7
Sp8r+zNT9Lnkt+TGp2EsWJsXqiFPDv4x5zWlb0eOakUeNzaGDvmq3CbVjzCW
y7f5XNlvEeePOFm8qQXptXN5cg3xJRtHDfGttf3C26baprXd50i1QXxm2/NF
+X3gGWWSDnnyge+tr/csfU/myh9ufvrCx4rniJRVjK9vMb5DlcXn/vIXV8Y8
7pNPPBX1WtLn3nvPfcW93ywpQJ87XGQdpWafKz1jaj4XXSPJ9vVL7GP5fDw3
iIE5vmQ9CnPPtPlc1KLwvYdakvTKfXyu7iOao4b4zirwPjnhtx7Gq+Jf/H9q
uxQ1xHcI7VeD7ztVJ7aQa4OyXgs/GwN9mKfvc+9cv83xueaLv9eyDVWpGF/f
YnyHqpzPDXMip+ados+tRwH63OEi+/zV7HNlvojc1rJdbkxsQHpR5MIp5Pw5
sVpTLN9GPt3lXMC0fK7sq9mW19cQ31kEPk7+ZlLCfLxA1gBjSv3Gaohv7e03
hva5qO92IdcGdb/k2Hci98967L558gfbPLGFefIwxfj6FuM7VLX53IcfemTM
52LMrcXnst8yfS7phqwZoA9zjNJ5svYDuTqPHFNnyZOlF83VTGReGvOf8nND
TlrK5+ocemjrRs0SaH9aetx8+O2EuKIvLLaRwn61zqc9hPYbQ47p6Do3lqUN
pp5TII7ye2j97E558vp+j4vfEudxy9bmX//5I8VzRMoqxte3GN+hKudzteTc
ym0+F8JauloY17twabG4L/SmAH3uMNH5Z2rul9J5svR+bTlfnzw5N4Y1lyfL
/onyWUEpnyvH/ML/tFE6vmQ9sg98IPwGrf1uA6XjW3v7BRg3AKF2jn7VYVxt
+Lfr2FxLG4zNhS+9tfU5VZc8+evf+vjotWvHPtQs/3Suee0rql/A5+7iWpyD
EuPrW4zvUGX1ufCobV7Luq4Q186lzyXj6LpRrevOyDy5rc8hajqT5sm57eUz
AX0O8juU832V8LlyHisotVaUpHR8yTiyvyz65QaCV8uO1YxQOr61t19de9Xq
6nG7tEH0hc6tT2SiQ56c1Wf/uFk4zrlahyXG17cY36GqzedifaDw77R8LtfO
pc8la6BvrbxH5tbxGGqebMlPJ8mTZc1Wfp72HyV8rqwDWschlo4vGUf+buSz
p+DHEOMulI5vze0XtPlcCOt/WenSBuGJcz7X9ExjGnny332ieF5ITSLG17cY
36Eq53MPP//imD/9/KOPmX1ubv3c0p7QowL0ucNCr5eRGpcbqClPbvN+st9f
13pQLpdFf0Z9Drpukzv2Zvhc3Q/dmpuXji8ZJ8RPz8Ob8mOYfyk3t1Pp+Nba
fiWoueI7xL94Bqj7ukCW+Za7tEG91hL6SOu1gE33gQ558v1/fUfzj1+9rXnm
b+eaT90qPueWrc2xn3y0eG5IdRXj61uM71CV87mXLlxujr960tx/mfNQ0ecS
O3qNVyg1f02gpjxZ17g0mzmPjRyDFxsbKGtT1jVJ+vhcOfdszHenKB1fsoZc
50t710n715aOb63ttw09h7plLiprG9Sx1Ocu7x1Qdpx9hzz5O98X89j80/g8
rXOfvbNZPvG7xfNDqosYX99ifIeqnM8N6+eijiu9LtbTbfO5XFeIPpfkCfOq
BMnxpClK58ld5muVfQCnmSfLft7IxWPPC6zKPVfo43PlZ8hxnW2Uji9ZI7TP
VB8L/PbD7wf/PYT1r2tsv1b0Grhta/pa26CsW6f6oWvPnPzsDnmyXnNk5fnx
e9MPn+eaJMMS4+tbjO9QZfG5kB5jS59blwL0ucNAjwOzzFEESufJQJ53Kv/V
/bHbclIg19XM+UrZjxG5tXXt083yuV3zcUkN8SXjXszazx1IPxSLew3xra39
WtF111zbtbbBLvVt0zPJHnky3j/8F2vv3/s369ctoWoW4+tbjO9QZfW56MPc
NlaXPpc+l7Qj+wNCGK9mpYY8Wa7zq8ctBmRty1qz0WNskWvHkNuE/qHIl1GL
iQm1JVk7Rx9nvNY2r8ykPlc+w0h9PylqiC9Za6Nd12qVY09jPqyG+NbYfi1g
fK3Vk1rboH5GlvPOlmvrlyff2ix9RzyH4/qbAxPj61uM71Bl9bmQnpdKj9Xl
+Fz6XJJHjiPtUscN1JAn61qJ9um6FqTnj4YnRR6K/FnnudqPavRYOStyTpku
uXXXXF/XnHJzEsWoIb6zjlxLFX6vC7Lvbq0+t8b2C4+MfVPr7sr1ndqeP3Rt
g/KcU/Vls8fumSc3x8fH+X3hK58oniNSVjG+vsX4DlVdfC704AO7xrzuwqXF
qM8N6+TG9OQTT408c2lv6EkB+tx6kf36glBvRH1FC/O2xtYXqiFPBvo6kB+i
D6Qex6a9qO4nqGuq+jtCLo28HHmmfkaQW39JY5lvGfkxzgfbhvqwvkYI26Ty
cXmObXNnx6glvrOMrHfGvCpeQ5z1fGZyzl603xi1xLe29ovP1vdF7IPvWLbd
oNzcyV3boIx38Of4XHhv3BP0fM+p2I7omyd/oNP/XVzr3Xc0Cyc+XDxPpCxi
fH2L8R2quvpcrAuk19cN72F7y/q5EPxyaW/oSQH63HrRtYw2xeohteTJsn9m
TrqWovsJos6qQR7ZdtzsnKcRLD63S3xi+bOeE9Y6r7OklvjOKrKWmerXrn/D
ej45CPXHGLXEt7b2q+u1OeXGG0zSBrvOY5edE78lT/7un7Xnyc1Pxtcpee77
nM9mGGJ8fYvxHaq0X3r4oUdWvSjqszFPpeu2WCc35oFzwueU9oaeFKDPrRc5
5s2iWN2gljwZIKeUc5Xqc0+NYZP7pPqFxtauDJ6ia19SfbyUz43VslKKPYOY
ZL0UTU3xnUVkXTE5BrNJPxOBf0t5XFBTfGtrv6ifxtbKDcLnts0J1qcNxurG
8rxjnn4dLXnyiw+tHXNsXRK13Y/+UuTJnLd1IGJ8fYvxHapinin41jZZt6Po
c8l0qClPDqDGg5wZ4xrxb9sawGEfy3bItXFcKOc7LODzLJ9Z8jNqjC9Jg98x
fpfW32aN8a2x/eJZAXwv9sO/XdpU3zaIz5bfR+65xToMOde1Yx9qrh03bveB
SueIVDcxvr7F+A5Ppf0ZRZ9L7NSYJ5Ppwfj6hvF1TgU5HUVRFLWm0v6Mos8l
dpgn+4bx9Q3j65wKcjqKoihqTaX9GUWfS+wwT/YN4+sbxtc5FeR0FEVR1JpK
+zOKPpfYYZ7sG8bXN4yvcyrI6SiKoqg1lfZnFH0uscM82TeMr28YX+dUkNNR
FEVRayrtzyj6XGKHebJvGF/fML7OqSCnoyiKotZU2p9R9LnEDvNk3zC+vmF8
nVNBTkdRFEWt6dTrpykHCmifG/IqiqIoiqI2TpPmYRRFUdTGqLQ/o+hzKYqi
KGromjQPoyiKojZGpfvbUuy3TOys5lPEJYyvbxhf3zC+vmF8fcP4+qS0P6Po
c4kd3od9w/j6hvH1DePrG8bXN4yvT0r7M4o+l9jhfdg3jK9vGF/fML6+YXx9
w/j6pLQ/o+hziR3eh33D+PqG8fUN4+sbxtc3jK9PSvszij6X2OF92DeMr28Y
X98wvr5hfH3D+PqktD+j6HOJHd6HfcP4+obx9Q3j6xvG1zeMr09K+zOKPpfY
4X3YN4yvbxhf3zC+vmF8fcP4+qS0P6Poc4kd3od9w/j6hvH1DePrG8bXN4yv
T7Rfmj91ptn/9IGR3nv36ug1/Btee+mFl83e640T86v7XfnVr4t7Qc8K0OfW
y82bN5v5+flmz549zc6dO0fatWtXc+jQoeb69eumY9R2H15ZWWmOHDkyuo5w
Tbi+s2fP9j72+fPnm7179459VwcPHmyuXr1q2h/b4dx27969uj/O7ejRo82N
Gzei+yBGOPd9+/atXhP+xXFwrSkWFhZG2+SEOLede23xJdOltvjW3H4DOJf9
+/ePhP1z7XDS9hv23ez78/Ly8ujc8Jn4LNyrcJ347kh9ML6+YXx9ov3SXXfc
3WzdcvtIZ06fG722cGlx9TXI6lnlPpcuXC7uBT0rQJ9bJ7gXzs3NZXXs2LHW
49SUJ8Mvtl1TW24ZAx50+/bt2eMi98yBvzu5/XH8Sa4HeXCMbdu2te4LIf/O
UVN8yfSpKb41t9/A0tLSun1TOWSf9rvZ92d8r/DRbZ+JayL1wPj6hvH1ifZL
n/n0/ave9M2zF6L+9/DzL7b6LuwrfW5pH+hdAfrc+sAzP33/27FjR/S+iLwu
Ry15MvJFyzXB/3VFe0b8f+zYqZw1lmPjb5I8hj6vWD6dUixGqXhqoR6Vo5b4
ko2hlvjW3H4lsbZ88eLFddv1ab+bfX9GPdt6rhD6ipA6YHx9w/j6xOpzv33g
2dXX773nvlbf9aUvPL66Pfotl/aB3hWgz60P3Ofk8z30jwugRiDviejzkqOG
PBnnL88ZfXVy19TlmSbqPHJfWbvBM1Sd92rw/cn3YzUYxEPnyjJGOEboW4na
FPpeymOif5Im5MXI6dHHEfvH1EYN8SUbRw3xrbn9Sk6ePLnaptp8bp/2u5n3
Z/3dQ+jjIe8Ni4uLo5jkrpeUgfH1DePrE6vP/eUvrozVZxcvv5/1XXJb7Fva
B3pXgD63TlC7kPmTROZhqDvmqCFPDvlnLleV1wQPaKXNo8JDpp6VIo+W73Ud
Y5gbOyj7KMX6PAef2+VaY9QQX7Jx1BDfWtuvJObF2/LGPu13s+7P+jlcrqaN
7wYev62GTDYPxtc3jK9PrD4XQh03vPfcMz9Iei7ZZ9lS+6Xoc2cZmUfFcjBJ
DXmyzDlTY9Z0X8DUvE+5fSyfL/sBy/F52GaayLpOzue2xa+NGuI766AGiXwG
7RLKzVsWgH8L843l5iCpIb61tl8JaiSyxirHz05SH2lrvzmmeX/WdSAyLBhf
3zC+PuniczEu1+JfZZ/lnB+m6HPJeE6HnCpHDXmyvNcjt7VsZ8lNZS6b86nS
z8pak6zZTLuvkOyPyXquX3LzJ6E/mmW/3JjWGuJba/sNxPwy/HCftt3WfnNM
6/6s+0BPMscXKQvj6xvG1yddfC7mWbb0R+7Sv5miz51lkLPJe2dbX9vSeTLq
OtY6j5zLxZKbylw2Nw5OjqeTOWusloS+iGG8rKUmlULO3xzruyjH5+Iz8VmT
fF7p+M4y0s/gt4jfmfRHqWcYuh9wzkeVjm/N7Tf2uaE23tfntrXfFNO8P8tr
mHZ/E7I5ML6+YXx90sXn6vdjtVrZZxnblvZ/s6IAfW69wG9hrAaE/Cn0hwvz
rFjyr9J5shw31zYXa588Gd4hRSxP1vk7akux2hzOuetc//rYsf1z8y3jPOCX
UuP/JKXjO8uE34uu2cn6o45hbF6Smn1ure03IOeBlvfDPj7X0n7BRt+fpddu
m3ed1Anj6xvG1yddfe4rR19bfR9rDen3ZZ9lbFva/82KAvS59ZLrE2mtMdSU
J7f10ZVzNnTNk3Pby7w1nEPMb+TU1v9QoudrjdXA2tYLDRrKulGzSIgh8hlJ
6K8W84WhBoz2G2q/Q/G5NbXfgGwrck6pPj7X0n7BRt+f5XMD6/rBpC4YX98w
vj7p6nPfv3It23dZvvfeu1eL+79ZUYA+t17avFBsvRrNUPNkyxpyk+TJIf+M
+Vy8h9oNjgWvotcnyY23DKDfpKUWhPoVPA/qyPhvCNcTi3mO0vGdZWS/5VCP
lGNF9bMR+R7+27PP3ej2qz9P93ue1Oda2y/Y6Ptz1/o4qQ/G1zeMr0+6+lzo
4YceWd0G6+qG12Wf5Qcf2FXc+82SAvS59YJ5C1DPQ04MjwXvpXOr2udblnly
27l2nRdK5rK5cXD47vQ5aJ+bqptKr9vW90ivgdJlXJ9Ezs/TlmuXju8so39D
sm3GPGHIe0L9N/x+h+Jza2q/qN3mngVN4nO7tt+Nvj/LPLltHV5SJ4yvbxhf
n0zic+dPnYn2XZZ9lt84MV/c+82SAvS5w0PWkWQtKUZNeTJUyzw21jqVnDMo
l/fG6sOW8bUp5FoquWsrHd9ZJ9X/Xa/LKseRhjYwNJ9bU/tFrTR3/5O13ty6
Tanr7NN+p3V/5vi+4cP4+obx9ckkPnd5abx/8sKlxdHr8jX0by7t/WZJAfrc
YSLrjDX7oC7ztcpayDTzZNkXMXha63mhzhS2yc2ZqPs4a5/TFTlvb25sT+n4
zjL4zUhvp38D0l+F1+T6syHGuecspeNbY/vtOrbe4l2n3X6ncX+W30/fdbZJ
GRhf3zC+PpnE50Kydou+y5cuXF79/88/+lhx3zdrCtDnDhOZX6Ofa4rSeTKQ
+WMq/9V9Bi1r7Mh5bXN/R+S8MvK5qiWvleuEpMbb6b6KbXNHWZA+t+bnGLOM
bINhPKqsPUL4Xct+6GF+XvzeZM0er2FbTQ3xra39au/d1+duRPudxv1Zr79p
mR+A1AXj6xvG1yeT+lw5Fvfee+4b871nTp8r7vtmTQH63GEiczP0k0tRQ54s
+++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
bmYKjMmznoPMUVN5+jSuSY/nRF9QvYao5fil4zvrhFwm9E0Nv8mUz9XCuK3c
nE61xNdjO06h68BdxuXqvs656wHWPLlrPwBSB4yvbxhfn0zD575/5Vp0Pqpv
H3h29bX9Tx+gz6XPJf+JB5/b1vev9Pw1ct7XXA2n7zVpz6PPXY8pnHR8H9lY
5Lox4TfQ1ee2+bBa4uuxHceIjbVOzRFm+ew2OL7PN4yvbxhfn0zD50Kff/Sx
5JzK0OLl9+lz6XPJfzJUn9tlnlbZh3ea+bHsg5jqR6jrq7n+pX2vSda7Up+j
8+XUZ5SO7ywTYiPXkg01+djvDDEMngn/bVmbtZb4emzHMdCvQu6PsQVdkPui
Dbdhna+165pGpA4YX98wvj6Zls/FttLXvnL0tbG1duW29Ln0ubPOUH0ukLlf
Ku/VfQUtc77I9TRz34mcTyb2XFXW5drqp32vqUtdzJJv1xDfWUQ+h8A8QxBi
hH7I8nX8BqzHif0Waoqvx3Ys0WPlc/NHxdCfb7n2Lutvdl0TiZSH8fUN4+uT
aflcSPpcqTOnz9Hn0ucSwZB9ruy/g1w1hvybYJlLFeh5TVOeQm6j+4fq+Was
69xNek26LpbrE2m5thriO4vIdWNywnY55JjT2G+hpvh6bMcBPWfVJDmp9Mmp
70fTFl95Tpb7Pp4/tK1FRjYPxtc3jK9Ppulzn3vmB1Gfq7ejz6XPJU3n/BHU
kCfrOofOIXUNSI+nQ+0GfyNw3Tq/lf0MY54it36mHjPZpf7T55rkOafG7WD+
GkttqIb4ziKIJ36P6IMepL0v3m/ruyr7ttXucz22Y6Dj1rWOGzuH3Nxikrb4
6rnp8N3F8mB8XhgPwbld64Hx9Q3j65Np+lw9vzKEuajoc+lzZx3kTcjtkBtC
ev7Q8Dq2wZi0FLXkybrOhXPH/VyPQ9U5rO7nq8fvyT6P4e8I8nH4RJ2/6rw7
vB5ybNSAkCPHhPf036dJr0nWxUJej3oU6lqIu163M1ebqiW+5LfExufiNxxi
LJFjSVMxri2+3tqx/lwI99rUvqk5reQ5dpmf2RLf2Npj+Dz81vA96lo08+R6
YHx9w/j6ZJo+F8JYXOlz4X3pc+lzZx1dv8gpl1fVkifL/pk56TqI7ucbW29d
jolMSdd49HEt0nWeSa8pNqdrTrm+zbXEl/yW2HzL+rem5zqCUn3Vaouvt3bc
5T4b8lONXEMZ0s8zcljii/avc+GU8Ntiv8d6YHx9w/j6RPulhx96ZNWDwtfK
9xYuLa6+h+1ifgtjccM2mIM5to30uXK9XYo+1yux+kiX3CtQU54s++ZoIcdN
jcuT+8i5bSWxtWfD343UPjG/0SV373NNQPZZjZ13zAtoaoovSc+3nPJT8G25
vKbG+Hpqx3qumDbF6u7W9Y5idIkv6v+pfBnfba5fDykD4+sbxtcnKR+a81Rt
709zG4o+l6xRY56MGgxyTdRV8K9lfUq5JksO5Nhh/tu2uW6nySTXFIDPkft2
eZ5bY3xnnVzs8TvB79L626w5vh7b8aTgmrq0+cAk8cXnYIwDhO9mks8lmwPj
6xvG1yel/RlFn0vs1Jwnk/4wvr5hfH3D+PqG8fUN4+uT0v6Mos8ldngf9g3j
6xvG1zeMr28YX98wvj4p7c8o+lxih/dh3zC+vmF8fcP4+obx9Q3j65PS/oyi
zyV2eB/2DePrG8bXN4yvbxhf3zC+Pintzyj6XGKH92HfML6+YXx9w/j6hvH1
DePrk9L+jKLPJXZ4H/YN4+sbxtc3jK9vGF/fML4+Ke3PKPpcYof3Yd8wvr5h
fH3D+PqG8fUN4+uTU6+fphwooH1uaLcURVEURVEURVGzotL+jKLPpSiKoiiK
oiiKmqZK97el2G+Z2AntlviE8fUN4+sbxtc3jK9vGF+flPZnFH0uscP7sG8Y
X98wvr5hfH3D+PqG8fVJaX9G0ecSO7wP+4bx9Q3j6xvG1zeMr28YX5+U9mcU
fS6xw/uwbxhf3zC+vmF8fcP4+obx9Ulpf0bR5xI7vA/7hvH1DePrG8bXN4yv
bxhfn5T2ZxR9LrHD+7BvGF/fML6+YXx9w/j6hvH1SWl/RtHnEju8D/uG8fUN
4+sbxtc3jK9vGF+flPZnFH0uscP7sG8YX98wvr5hfH3D+PqG8fWJ9kvzp840
+58+MNJ7717Nequ3zr29uu2VX/163fuvHH2tOfz8i2N66YWXR6+fOX2uef/K
teL+0IsC9Ln1c/Pmzebs2bPNvn37ml27djU7d+4c/XvkyJFmZWUlu29t92Gc
L847XAe0Z8+e0fX15fz5883evXtXj4vPOHjwYHP16tVOx8G57N+/fyTs3/Yd
B7Ad9sE54BpTXLx4cfS+VceOHUseq7b4kulSa3xrb8fz8/OjY0Bd2z+4ceNG
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
UNSNrKBGI/eVOSVqS9pT5jh58uRqnm3xubE81+JzcV7oQ4m4auH169evj74j
y7FqiC/ZOGqIb63tN9WGgvTzQt2OcT/Vvl33kUZbhL/Wz5n67DtGS54s60Ff
+8bHm5V/ubVZ/tnvNIs/ubV5/WvqvnPL7c2ln28pniNSVjG+vsX4DlU5n/vm
2QudvJb2uBjrm9se/hdjd7t+DkWfOzRy40pRL7B4IFBDnhz8Y85rSv+OnNGK
PG5sHCtyTbkNniHEiOXybT4XzxjCNjh/xMsalzak18b3l6KG+JKNo4b4DqH9
TnLeGE87aXvts+8YHfLkA99bX+9Z+p7MlT/c/PSFjxXPESmrGF/fYnyHqmn5
XNRku3hcij6X/BZZPxmCz5WeMTWnEmozMifN1kAS+1g+P9Z3Eci8FfUozFvT
5nNRi8L3H/qOS6/cJ/fVfURz1BBfj4R5jvB7gdfSoNaI3zK8lFbsN47fM94L
85ThuIuLi63nUUN8h9B+Y8hnRbEas/zstjmqprnvGJ3y5DvXb3N8rvni77Vs
Q1Uqxte3GN+halo+V3rcr3756eK+b9YUoM8dHrKv3xB8rjUnlNtZ5jiVXhS5
cAo5f06s1hTLt5FPdzkXMC2fK/tqtuX1NcTXG+g7K38PsfGVbfMPyd9MbGxr
EHxvjhriW3v7jaHjo+dxwzOGSerPffddR988+YNtntjCPHmYYnx9i/EdqnI+
961zb5s81nvvXmUtlz6XTAjW8Qj3RfRhzlE6T9bj2HJ1Hjn3jCVPll405xfk
eOeY/5SfGzxNKZ+r59dpm7+2dHw9gfjJ2mEu/iFOqBmiPiuF9il9Vagr4l88
o5J9B6DcXHKl4zuE9htDju3A962RfWLksyS0N4w/iNXwp7HvOjrlyev7PS5+
S/xWb9na/Os/f6R4jkhZxfj6FuM7VOV8LuaKOv7qyeaVo6+NCa/JfVD3Dfvc
e899xT3fLCpAnzssdN7ZNudL6TxZer+2uVj75Mm5May5PFnW2uQzg1I+V475
hV9qo3R8PSFrgG3xD78pSz9atFHd31f+7nJrLZeOb+3tN4aefyo2z4H87PBs
Qj/fgNAetW/ts+86OuTJX//Wx0evXTv2oWb5p3PNa19Rn/m5u7gW56DE+PoW
4ztU5XyudU0h1H3D69hfH/PShcur6wpp4XW8X9onDl0B+txhoedbbhsHV1Oe
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
12P7DdumPLRsf5C83j77rqMlT5b1oK994+PNyr/c2iz/7HeaxZ/c2rz+NXXf
ueX25tLPtxTPESmrGF/fYnyHqpw3hSeNearFy++v87pXfvXrsW0w5la+/9Uv
P93q1V45+trIR5f2jENUgD7XNzXkyTovjIFxeeF91HKsyOPGxrHCM8ptMJ4u
RiyXb/O5sn6D84dPtXhTCzJXx/eXoob4ko2jhvh6bL+yXowxvG3nJr1sn33X
0SFPPvC99fWepe/JXPnDzU9f+FjxHJGyivH1LcZ3qJrE50LwtTkfK9/DXFOl
faB3BehzhwX6ryLvDPMdIc/KzXlSQ54sc87UnEqoY8rcMNVPN7eP5fNTeSnG
0sl6FPobtvlc1KLgZzEmEMhcu4/P1X1Ec9QQ31kHdX38ftAe8W9uPGiXbUEN
8fXYfuXnwkvHwD02bCPH2vbZdx2d8uQ7129zfK754u+1bENVKsbXtxjfoWpS
nwt9+8Cz0XG1upaLvsmlfaB3Behzh0NsjFwQ8qoYNeTJ8jyR21q2y42JDchc
FrlwCjl/TqzWFMu3kU93ORcwLZ8r+2qm8vpADfGdVeDldB/ZINT6J91WUkN8
vbVfxMLiybGfbs999o3SN0/+YJsntjBPHqYYX99ifIeqPj5X13TDekNYOyi8
9vlHHyvuAWdBAfrc4RDyZPyLWqKsYUChrigpnSdb80Ig+wNa8mSZy6Z8PkBf
x1zOKT831NdK+Vx5rlDb/LWl4zvLyPl28XvB7yRV++yyraR0fD22X+s1yc8N
/rrPvlE65cnr+z0ufks8M7lla/Ov//yR4jkiZRXj61uM71DVx+dCct7ksL08
xvypM8U94CwoQJ87HFDX0PmwrPHG5vYsnSdL79c2F2ufPDk3hjWXJ8vvD14k
duzN9LlyzC/WJW2jdHxnFTkWW7e74GnDb6DLtprS8fXafi3j31Ptuc++6+iQ
J3/9Wx8fvXbt2Iea5Z/ONa99RfUN+NxdXItzUGJ8fYvxHar6+lw5T/KlC5dN
x3j4oUdW1xaSYv2XPpes9ReM1URqypPb5qeRY9q65sm57WUNRp+D/DsDP9L1
2JK+Plf6IShWn9eUju+sIvul6pqefq/LtprS8fXafvEMSe6rt8H/y/ED0kP3
2XcdHfLkrD77x83Ccc7VOiwxvr7F+A5VfX2urOe+de5t0zGkN44p9H+m6HNn
DTkfKea40Qw1T07NqyqZJE+WOaf8PP2MoITPlf3QrXPWlo7vrCJrjHrdGPk7
wG+vy7aa0vH12n71mF7ZblOvT2PfdUwjT/67TxTPC6lJxPj6FuM7VPX1udKz
xvotB+8rhfmrsH5QEGq49Ln0uWR8/cnYHDE15clt3k+OYexaD4p5/ADmo9bn
oGunuWNvhs/V4/5y1yMpHd9ZRXpXPWcyxlRLv9dlW03p+Hpuv4hFaw6auPY+
+47RIU++/6/vaP7xq7c1z/ztXPOpW8Vn3LK1OfaTjxbPDamuYnx9i/Edqvr4
XMyvHJtXWR7juWd+YPJp9Ln0ubOOrOWm+sbVlCdDtcxjI8fBxsbYyVpR29ov
gT4+V849G8vbU5SO7ywj44XnTfidyN8kFPqed9lWUjq+3tsvrg9jfMM6behT
gfjAW0t/Hbu/9tl3lQ558ne+L+ax+afxeVrnPntns3zid4vnh1QXMb6+xfgO
VX18Lt5vm28Z9d42j6b9Mn0ufe4sIvvJpdZxLJ0nd5mvVV7PNPNkWXtBLq5z
9y7S/U4lfXyu/IzYfGIpSsd3lrHU9MKY0S7bSkrHd5bar0bOcZU7v177dsiT
9ZojK8+PX9sPn+eaJMMS4+tbjO9Q1cfnym0xt1R4/Y0T82O+tW3OZfpc+txZ
R9Yzcn3+SufJQN7LU/mvrE235dMBua5mzlei1hK2Q26tc/fSPlevi2y59kAN
8Z1l0O8Yc6DDy0D4b1nLk7Hssm2ghvjOSvvVyH7Y1j4dnfftkSfj/cN/sfb+
vX/z/7d3/i52bWUYDtpYprM0+A+kt0hhYTXazx9wU4iFkFaJlUX6IBYaEBQi
V4sgNvGCkHK4hdNIqoAE5QZuwEi4gZAc7zuwZr7znbX3XjuTM3vt9zwPvMwk
Z58zM3nyDes768fevW8J6Tn49Q5+15oP7XP/8LtPt3rTvA83nk+lvPj3f+lz
6XOhQjzvU2PFMXoYJ8fvV2PWGhrzxzmbFvIevaE57XhN2QOp8bLWGdaiHiTe
O0TvKZTeZIwP7XPjPNjQv88QPfiFbcr7FlP34Wm5tge/h1K/kXgOtjKHWc+9
1Dj5G5uXvwp9PPffXFnw6x38rjVjfW7tDCntwdXZUbEv/cH3j3au+8fn/9w5
R3loXlc9MH0ufe4hEuc2Wta39jBOzvOVmsOK5Lmg3LtrTKteUOPnfFZPHs9m
4j69OePVeL5Xy9mxhblj/bj3UKmdJTZGD35hm/J/Uj3XZa/twe8h1a/QPun4
NfX97+25lxwnbz7b3uf3yc+/s/gYkbQGv97B71oz1ufq81/87JfnZyLX7gek
eVvNx9Z6L52rXLter/nnP/7l7Iwq9cjcV4g+9xCJ+9k0xyK0FjIm08M4WeT1
g/pZNO+Rz1/KY9m8Fy/PycS1j6W/1Lhca7nj2u6Wue9Iy3mtGj/r+9G1ZX4p
/4yKrqmdlSPi9zh6Xs0Avfg9ROQ/7qlV/UWf8bE510Z68etWv+X7Pj4+PpuL
1jVaX5zvjVubZ7/Mc3e47Dj563z+k/Dv/91vb57//VuLjxNJS/DrHfyuNblf
mrq3bYz636n+66+P/tb8enmfL6HPdaX17JW8/6yXcXLchziWPJ+Z9+Jpniaj
8ebU65b3BVpp6XPzXNNYaj1svg/n3D2Aohe/h0iZi9THfO/UvNZizrWRXvy6
1W9L7cpV7b3Dyzx3h4lx8q+/Nz1O3vxp+z4lv/kt59msI/j1Dn7XmtwvaY51
qAfVXKz6UM3FfvnF/5p7MK111txu3rMb8+NPftp0v15Cn+tCXOO3tj5XaAwc
z2eJ0Vh3aH9efI7mT2rEdYp5vDn0nDHi6w31ubW5rKHU1mTW7pcyl578Hhpx
D0H0WHu/Ys61kZ78OtWv5s/jfZDy1xx77+Eyz91hYpz86Q8vXnvrviTput//
KIyTObd1JcGvd/C71lx1P6Y1yf/515dn0b7ccs9dQp8L0/Q0Ti5ojkdjZu1l
08eWM1D1nJbrNNbW6ypD4+5W9PXmnM+6xNfo0e+hof9nSssZw3OuFT36dapf
Pa6+tfwsTXOwH+G55zSMub56/M3NV581Xvd1lh4jknnBr3fwu74s3Z8R+lxo
p8dxMnw88OsNfs3pYExHCCEkJLF0v0bm9bVwWDBO9ga/3uDXnKXHc4QQQraT
WLp/I/S5MAzjZG/w6w1+zVl6PEcIIWQreX3r0v0bmdfn5nXKQwEPGCd7g19v
8GtOB2M6QgghF6HPXWcK9LmHBeNkb/DrDX7N6WBMRwgh5CL0QeuGPvewYJzs
DX69wa85HYzpCCGEXIQ+aN3Q5x4WjJO9wa83+DWngzEdIYSQi+Q+qLVvIstm
rq9CGWcRQggh5ONl6fEcIYSQ7dDnrjP0uYQQQkg/WXo8RwghZDv0uevMh/a5
sG7Ox1NgCX69wa83+PUGv97g1xP63HVmri/wgN/D3uDXG/x6g19v8OsNfj2h
D1o39LmHBb+HvcGvN/j1Br/e4Ncb/HpCH7Ru6HMPC34Pe4Nfb/DrDX69wa83
+AUAWBZ+D3uDX2/w6w1+vcGvN/gFAFgWfg97g19v8OsNfr3Brzf4Begf6tQb
/HqDX2/w6w1+vcGvN/gF6B/q1Bv8eoNfb/DrDX69wa83+AXoH+r06nn37t3m
wYMHm3v37p3l5ORk9PoXL15s7t+/vzk6OtrcunXrLLdv3948efJk8/79+9Hn
4tcb/HqDX2/w6w1+vcEvQP9Qp1eP+tVr166d5/r1683X1vL8+fPB5+PXG/x6
g19v8OsNfr3BL0D/UKdXy7Nnz3b61Js3b1avPT4+3rruxo0bZ/O4uj6/huaI
a+DXG/x6g19v8OsNfr3BL0D/UKdXS20+Vv1r5tWrV1vXaI1yRHO4Y48X8OsN
fr3Brzf49Qa/3uAXoH+o06vj4cOH532p1iNrvfJQnxvnfXVtjTt37pxfo32+
NfDrDX69wa83+PUGv97gF6B/qNOr4e3bt1vzr2/evBmdz43ztepna2gNM33u
YYPfeejcNr3fpHPdVINDnJ6ebu7evXtWe/r49OnTwWv1mOpP1yqPHj0a3EdQ
0NfW96GMvTZ+vcGvN/j1Br8A/UOdXg1xr21ZY9za5ypax5zR88rjQ2Nl/HqD
33ZUI7GmajWj/rSss8iprauINZijc9KHiM8bO4cOv97g1xv8eoNfgP6hTvdP
7FlLT6t5pbE+V+Rxs9Yyl+fGs6gYJx8u+J1G9ZLPdIv1FNE9u8rjmvPVNfG5
jx8/Pr9W87zxWtW57hc2db6c3uea2p9fwK83+PUGv97gF6B/qNP9E+eHyhxP
S5/78uXLnbF5HIeXaE30EPj1Br/TxL3u6keH+tzXr1+fP6b1xJFSd7FWy5xs
3legdcvldfL9rWPd0+cCfr3Brzf4Begf6nS/xDGv9tMWWvpcoX18Y2sjp8Cv
N/idRmv+1YuWPbNDfW7sh/P+2tpjpS5jXQvN+Q6tsyhzwOqby9wvfe7hgl9v
8OsNfgH6hzrdHxoPD93jtrXP1RzTWJ87dP5UAb/e4HcesSZznxv3F4zNw5Y6
juuWy577eD+wPM8bH9Pn9LmAX2/w6w1+AfqHOt0f8TxkzetG4ri5dR+f5ofi
/j/WPQJ+5xHrbqzPzWdUxfPSdV1+rVKHYzVd9tSX+d+yhpr6PVzw6w1+vcEv
QP9Qp/sh763NxHFzy3nLed5Wf46P57WTBfx6g995jPW5ItaU3lNSvxv39Cqq
7drrxWgdRuTk5GRnPpg+F/DrDX69wS9A/1Cn+yGPjYfuVZKjsbWI501pfWQN
nZUztC66gF9v8DuPqT4333torIdVveVzz+N1cU64/F08r7mszRhazyHw6w1+
vcGvN/gF6B/qdD/k+dbWaOyb54hq/WthbA5J4Ncb/M5jqs8VWmuhflQ1rOhz
nZOe6zH2uGUtc16HoXPk4vtRmgtWVKvxfkX6O12bwa83+PUGv97gF6B/qNP9
oHGxzqHRXGwtce9umbPV9Rp75/Or8pk4kTymzuDXG/zOo6XPrVHWHZczlGM/
W3rcQjxv6vT0dHN0dNT0Hpeuy+DXG/x6g19v8AvQP9TpcoydWRPXQGoNdA2N
oVm3fNjgdx4f2ueWeix7CGKfWyP2uTqDTjWuvQgluffV4/mevQK/3uDXG/x6
g1+A/qFOl2HqvkJ5vlfjYu3303pHjbE19xsf1xrIGvj1Br/z0JqH2INmVFtx
/b/WMMeetDwW1zHnM+LiPbPHemn25wJ+vcGvN/gF6B/qdBmm+tyhc1yHMrS2
Gb/e4Hea2JMOpayFKPO2+pjvW53nW/PjmqeN6zDGzlEWnLcM+PUGv97gF6B/
qNNlaLl/rsjnNseU++mOgV9v8DvNnD43r5MofWi+n65QDdeuV/T3Y/vqBfO5
gF9v8OsNfgH6hzpdlqmxcEHrJ3W+jc5l1Uf9uQX8eoPf/aD1zcrYWecR1aOu
b63LwlT949cb/HqDX2/wC9A/1Kk3+PUGv97g1xv8eoNfb/AL0D/UqTf49Qa/
3uDXG/x6g19v8AvQP9SpN/j1Br/e4Ncb/HqDX2/wC9A/1Kk3+PUGv97g1xv8
eoNfb/AL0D/UqTf49Qa/3uDXG/x6g19v8AvQP9SpN/j1Br/e4Ncb/HqDX2/w
C9A/1Kk3+PUGv97g1xv8eoNfb/DrSfFKCCGEEEIIIYQQQgghhBBCCCGkr4AX
ePUGv97g1xv8eoNfb/DrDX4B+oc69Qa/3uDXG/x6g19v8OsNfgH6hzr1Br/e
4Ncb/HqDX2/w6w1+AfqHOvUGv97g1xv8eoNfb/DrDX4B+oc69Qa/3uDXG/x6
g19v8OsNfgH6hzr1Br/e4Ncb/HqDX2/w6w1+AfqHOvUGv97g1xv8eoNfb/Dr
DX4B+oc69Qa/3uDXG/x6g19v8OsNfgH6hzr1Br/e4Ncb/HqDX2/w6w1+AfqH
OvUGv97g1xv8eoNfb/DrDX4B+oc69Qa/3uDXG/x6g19v8OsNfgH6hzr1Br/e
4Ncb/HqDX2/w6w1+AfqHOvUGv97g1xv8eoNfb/DrDX4B+oc69Qa/3uDXG/x6
g19v8OsNfgH6hzr1Br/e4Ncb/HqDX2/w6w1+AfqHOvUGv97g1xv8eoNfb/Dr
DX49+T+h1gE4
     "], {{0, 730}, {954, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{352.55781250000007`, Automatic},
   ImageSizeRaw->{954, 730},
   PlotRange->{{0, 954}, {0, 730}}]],ExpressionUUID->
  "3e7b60d7-70eb-483c-9557-af2864e0b364"]
}], "Text",ExpressionUUID->"8872d348-b100-4702-91e1-11567048ba7e"],

Cell["\<\

\tAmino acid changes also can be random or non-random: - Random edits = \
likely to be slightly bad = doesn't make an animal better - Non-random edits \
= likely to be good = likely to be actively preserved in the population = \
seen more in conserved.
\tIn humans most changes are random, therefore, they are most likely to have \
a negative effect. In Individual cephalopod species, amino acid changes are a \
lot less random and they are less likely to have a negative effect. In \
conserved, changes are least random (assumption) and most likely to have a \
positive effect. 1. Human vs.\[NonBreakingSpace]individual ocean species 2. \
Individual cephalopod species vs.\[NonBreakingSpace]conserved\
\>", "Text",ExpressionUUID->"65ae3372-3440-4e21-ba0f-ab65baa15046"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data", "Section",ExpressionUUID->"69c2789e-757d-42de-8e7a-aa67a7c35b9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/jamilya_bilyalova/Documents/DS_CLASS_2017-18_Zhamilya/class_\
project/Data\>\"", "]"}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{"Change", " ", "to", " ", 
    RowBox[{"Import", "[", 
     RowBox[{"DataJoin", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<editingcodonsimplifieddata.xlsx\>\""}], "]"}]}]}], 
   "*)"}]}]], "Input",ExpressionUUID->"e3998e4d-7b72-4f12-ab60-8520725af581"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
  "SemanticImport", "[", "\"\<editingcodonsimplifieddata.xlsx\>\"", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Importing", " ", "Excel", " ", "document", " ", "with", " ", "data"}], 
   " ", "*)"}]}]], "Input",ExpressionUUID->"7979d311-061d-491d-ba38-\
03cf71348bd0"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 101, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Change", "Expected_amount", "Expected_frequency", "Edits", 
            "Frequency", "Difference", "Fold_difference", "Species"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "conserved_cephalopods", "human", "specific_oct_bim", 
              "specific_oct_vul", "specific_sepia", "specific_squid"]]}], 
          101], "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Change"} -> 1, {All, "Expected_amount"} -> 
           1, {All, "Expected_frequency"} -> 1, {All, "Edits"} -> 
           1, {All, "Frequency"} -> 1, {All, "Difference"} -> 
           1, {All, "Fold_difference"} -> 1, {All, "Species"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Change" -> TypeSystem`PackageScope`AtomShape[57.60000000000001],
               "Expected_amount" -> TypeSystem`PackageScope`AtomShape[60], 
              "Expected_frequency" -> TypeSystem`PackageScope`AtomShape[60], 
              "Edits" -> TypeSystem`PackageScope`AtomShape[60], "Frequency" -> 
              TypeSystem`PackageScope`AtomShape[60], "Difference" -> 
              TypeSystem`PackageScope`AtomShape[60], "Fold_difference" -> 
              TypeSystem`PackageScope`AtomShape[60], "Species" -> 
              TypeSystem`PackageScope`AtomShape[189.]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1934140979], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Change", "Expected_amount", "Expected_frequency", "Edits", 
            "Frequency", "Difference", "Fold_difference", "Species"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "conserved_cephalopods", "human", "specific_oct_bim", 
              "specific_oct_vul", "specific_sepia", "specific_squid"]]}], 
          101], "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1934140979]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Change\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Change\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Change"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Change"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_amount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_amount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Expected_amount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Expected_amount"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_frequency\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Expected_frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Expected_frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Expected_frequency"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Edits\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Edits\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Edits"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Edits"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Frequency"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Difference\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Difference\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Difference"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Difference"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fold_difference\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fold_difference\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Fold_difference"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Fold_difference"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Species\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Species\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][{
                    All, "Species"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[All, "Species"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["220."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.142487"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.081881"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.35104"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[1, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["151."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0977979"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0371919"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.61367"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[2, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["IM", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.030303"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["38."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0246114"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00569163"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.812176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[3, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["TA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.121212"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["148."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0958549"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0253572"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.790803"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[4, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["IV", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0909091"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["101."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0654145"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0254946"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.71956"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[5, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["MV", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.030303"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["31."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0200777"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0102253"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.662565"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[6, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["HR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["42."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0272021"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.033404"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.448834"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[7, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["93."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0602332"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0003729"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.993847"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[8, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["ND", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["87."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0563472"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00425891"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.929728"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[9, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["QR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["128."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0829016"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0222955"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.36788"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[10, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["KE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["176."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.11399"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0533836"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.88083"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[11, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["EG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["114."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0738342"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0132281"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.21826"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[12, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["RG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["99."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0641192"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.00351311"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.05797"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[13, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["64."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0414508"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0191553"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.683938"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[14, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["DG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0304404"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0301656"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.502267"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[15, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["stop-W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0606061"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00323834"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0573677"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0534326"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["human", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[16, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14503."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.136295"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0946282"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.27108"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[17, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6856."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0644306"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.022764"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.54634"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[18, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5836."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.054845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0131783"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.31628"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[19, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["KE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Expected_amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0416667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Expected_frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5552."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Edits"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.052176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.0105094"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.25222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Fold_difference"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["specific_sepia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
                  GeneralUtilities`Slice[20, 
                   Key["Species"]]], "Mouse"], 
                ImageSize -> {{189., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    101 (-20), {1, 101 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 101 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    101, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 101 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    101 20, {1, 101 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    101 (-20), {1, 101 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 101 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    101, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 101 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    101 20, {1, 101 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 335951976]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[335951976][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {873., {279.634033203125, 285.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"b0045af9-f250-47ec-907e-e249e12bc4e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"datagrouped", "=", 
   RowBox[{"data", "[", 
    RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"66758ac8-66ec-46d6-84b1-d412ee794bf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualisation and Exploration", "Section",ExpressionUUID->"363992ed-65d6-4a46-9388-9c42d41918e4"],

Cell[CellGroupData[{

Cell["Expected frequency vs.\[NonBreakingSpace]actual frequency", \
"Subsubsection",ExpressionUUID->"9459be29-4cf5-41f2-96e9-a8f4c74657c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"datagrouped", "[", 
              RowBox[{"[", 
               RowBox[{"key", ",", "All", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Expected_frequency\>\"", ",", "\"\<Frequency\>\""}], 
                 "}"}]}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"key", ",", 
            RowBox[{"Normal", "@", 
             RowBox[{"Keys", "@", "datagrouped"}]}]}], "}"}]}], "]"}], ",", 
        "3"}], "]"}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"Background", "\[Rule]", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Gray", ",", " ", "0.9"}], "]"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Frequency", ",", 
      RowBox[{"Expected", " ", "frequency"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"90a34831-7993-4130-8e8c-cc8e9d4ad7cb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        RGBColor[0.95, 0.95, 0.95], 
        RectangleBox[{774., -384.}, {1161., -768.}]}, {
        RGBColor[0.95, 0.95, 0.95], 
        RectangleBox[{387., -384.}, {774., -768.}]}, {
        RGBColor[0.95, 0.95, 0.95], 
        RectangleBox[{0, -384.}, {387., -768.}]}}, {{
        RGBColor[0.95, 0.95, 0.95], 
        RectangleBox[{774., 0}, {1161., -384.}]}, {
        RGBColor[0.95, 0.95, 0.95], 
        RectangleBox[{387., 0}, {774., -384.}]}, {
        RGBColor[0.95, 0.95, 0.95], 
        RectangleBox[{0, 0}, {387., -384.}]}}}, {{
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{0.060606061, 0.142487047}, {0.060606061, 
              0.097797927}, {0.03030303, 0.024611399}, {0.121212121, 
              0.095854922}, {0.090909091, 0.065414508}, {0.03030303, 
              0.02007772}, {0.060606061, 0.027202073}, {0.060606061, 
              0.060233161}, {0.060606061, 0.05634715}, {0.060606061, 
              0.082901554}, {0.060606061, 0.113989637}, {0.060606061, 
              0.073834197}, {0.060606061, 0.064119171}, {0.060606061, 
              0.041450777}, {0.060606061, 0.030440415}, {0.060606061, 
              0.003238342}}]}, {}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0.028882575453125003`, 0}, 
          PlotRange -> {{0.03030303, 0.121212121}, {0, 0.142487047}}, 
          PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
          Identity, AspectRatio -> 1, Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0.028882575453125003`, 0},
           DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{0.03030303, 0.121212121}, {0, 0.142487047}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        193.5, -192.}, 
        ImageScaled[{0.5, 0.5}], {360., 360.}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{0.041666667, 0.136294862}, {0.041666667, 
              0.06443064}, {0.041666667, 0.054844985}, {0.041666667, 
              0.052176038}, {0.041666667, 0.045513068}, {0.3125, 
              0.341230535}, {0.041666667, 0.04517475}, {0.020833333, 
              0.022516892}, {0.041666667, 0.038399008}, {0.020833333, 
              0.018823596}, {0.041666667, 0.034564745}, {0.0625, 
              0.047373812}, {0.041666667, 0.027272129}, {0.083333333, 
              0.051903504}, {0.041666667, 0.010365665}, {0.041666667, 
              0.008899623}, {0.041666667, 
              0.000216147}}]}, {}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {
            0, 0.14552810249999998`}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.0196940100859375, 0}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {
            0, 0.14552810249999998`}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        580.5, -192.}, 
        ImageScaled[{0.5, 0.5}], {360., 360.}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{0.041666667, 0.212041885}, {0.041666667, 
              0.092495637}, {0.041666667, 0.057591623}, {0.041666667, 
              0.055846422}, {0.041666667, 0.054973822}, {0.020833333, 
              0.02617801}, {0.020833333, 0.022687609}, {0.041666667, 
              0.040139616}, {0.041666667, 0.037521815}, {0.041666667, 
              0.034904014}, {0.0625, 0.05061082}, {0.3125, 0.22600349}, {
              0.041666667, 0.027923211}, {0.083333333, 0.038394415}, {
              0.041666667, 0.011343805}, {0.041666667, 0.009598604}, {
              0.041666667, 0.001745201}}]}, {}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.22600349}}, 
          PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
          Identity, AspectRatio -> 1, Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0.0196940100859375, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {0, 0.22600349}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        967.5, -192.}, 
        ImageScaled[{0.5, 0.5}], {360., 360.}]}, {
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{0.042, 0.133}, {0.042, 0.072}, {0.042, 0.056}, {0.021,
               0.025}, {0.042, 0.048}, {0.042, 0.048}, {0.313, 0.35}, {0.042, 
              0.042}, {0.021, 0.02}, {0.042, 0.037}, {0.042, 0.032}, {0.063, 
              0.048}, {0.083, 0.053}, {0.042, 0.02}, {0.042, 0.009}, {0.042, 
              0.008}, {0.042, 0.}}]}, {}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0.019851562500000003`, 0}, 
          PlotRange -> {{0.021, 0.0945}, {0, 0.16649999999999998`}}, 
          PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
          Identity, AspectRatio -> 1, Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0.019851562500000003`, 0},
           DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{0.021, 0.0945}, {0, 0.16649999999999998`}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        193.5, -576.}, 
        ImageScaled[{0.5, 0.5}], {360., 360.}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{0.041666667, 0.133439299}, {0.041666667, 
              0.069721146}, {0.041666667, 0.053255351}, {0.3125, 
              0.348976096}, {0.041666667, 0.04453635}, {0.020833333, 
              0.021403991}, {0.041666667, 0.041758615}, {0.041666667, 
              0.041326523}, {0.041666667, 0.040462339}, {0.020833333, 
              0.019320689}, {0.041666667, 0.036604373}, {0.0625, 
              0.046048672}, {0.041666667, 0.029474854}, {0.083333333, 
              0.052622645}, {0.041666667, 0.012067715}, {0.041666667, 
              0.008780729}, {0.041666667, 
              0.000200614}}]}, {}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {
            0, 0.15620129249999998`}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.0196940100859375, 0}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {
            0, 0.15620129249999998`}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        580.5, -576.}, 
        ImageScaled[{0.5, 0.5}], {360., 360.}], 
       InsetBox[
        GraphicsBox[{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              PointSize[Medium]], 
             
             PointBox[{{0.041666667, 0.131532966}, {0.041666667, 
              0.071029042}, {0.041666667, 0.053731868}, {0.041666667, 
              0.048097104}, {0.3125, 0.350161806}, {0.041666667, 
              0.046639303}, {0.020833333, 0.022962955}, {0.041666667, 
              0.043806412}, {0.020833333, 0.020367862}, {0.041666667, 
              0.038171648}, {0.041666667, 0.031875187}, {0.0625, 
              0.04719761}, {0.083333333, 0.052739322}, {0.041666667, 
              0.02364533}, {0.041666667, 0.009956473}, {0.041666667, 
              0.007930026}, {0.041666667, 
              0.000155085}}]}, {}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, AxesOrigin -> {0.0196940100859375, 0}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {
            0, 0.16263789550000002`}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.0196940100859375, 0}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{0.020833333, 0.0937499995}, {
            0, 0.16263789550000002`}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        967.5, -576.}, 
        ImageScaled[{0.5, 0.5}], {360., 360.}]}}, {
      Directive[Antialiasing -> False], {}, {{
        LineBox[{{0, 0}, {0, -384.}}]}, {
        LineBox[{{0, -384.}, {0, -768.}}]}, {
        LineBox[{{387., 0}, {387., -384.}}]}, {
        LineBox[{{387., -384.}, {387., -768.}}]}, {
        LineBox[{{774., 0}, {774., -384.}}]}, {
        LineBox[{{774., -384.}, {774., -768.}}]}, {
        LineBox[{{1161., 0}, {1161., -384.}}]}, {
        LineBox[{{1161., -384.}, {1161., -768.}}]}, {
        LineBox[{{0, 0}, {387., 0}}]}, {
        LineBox[{{387., 0}, {774., 0}}]}, {
        LineBox[{{774., 0}, {1161., 0}}]}, {
        LineBox[{{0, -384.}, {387., -384.}}]}, {
        LineBox[{{387., -384.}, {774., -384.}}]}, {
        LineBox[{{774., -384.}, {1161., -384.}}]}, {
        LineBox[{{0, -768.}, {387., -768.}}]}, {
        LineBox[{{387., -768.}, {774., -768.}}]}, {
        LineBox[{{774., -768.}, {1161., -768.}}]}}}}, ImageSize -> Large, 
    PlotRangePadding -> {6, 5}, ContentSelectable -> True, ImageSize -> 
    Large],"Frequency",RowBox[{"Expected", " ", "frequency"}]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"956d0dd7-aeda-4dc7-aef8-74200119205f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The comparison of frequencies of changes in all species", \
"Subsubsection",ExpressionUUID->"dfedf0e6-f4f5-40ad-aa08-e64823e57432"],

Cell["\<\
With this plot we are trying to explore the amino acid changes that are 1) \
the most different in all of species and the most similar. 2) how and why are \
they different or similar? 3) And what is the general pattern?\
\>", "Text",ExpressionUUID->"76ead7ce-925d-4c38-8de9-8d0ca2222a6b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"code", " ", "1"}], "-", 
   RowBox[{"2", " ", "graphs"}]}], "*)"}]], "Input",ExpressionUUID->"a12667cb-\
1910-444b-83d8-0d2892686eff"],

Cell["\<\
First observation:
Humans have a different pattern from each one of cephalopod species, but \
cephalopod species together have a similar pattern which means that this \
amino acid preference is connected to cephalopod species being special.\
\>", "Text",ExpressionUUID->"23bcec35-c0bf-482f-a612-9ae88406850a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"code", " ", "1", " ", "graph"}], "*)"}]], "Input",ExpressionUUID->\
"facb202e-e8ab-47b7-ab4a-8547aa91e48b"],

Cell["\<\
Second observation:
EG, TA, KE changes in human are most different and therefore are more likely \
to have a negative effect. As well contributed to cephalopod species being \
special.
If we check these three changes, it turns out: EG, KE are radical changes and \
TA is conserved.\
\>", "Text",ExpressionUUID->"c842159c-a0dd-4342-9eee-26c8930424de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The comparison of amount of changes in cephalopod species", \
"Subsubsection",ExpressionUUID->"0e9e68ab-c5a4-4cc2-9777-3d370938801c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"code", " ", "1", " ", "graph"}], "*)"}]], "Input",ExpressionUUID->\
"e179378a-a219-4364-8c30-05136a9c72be"],

Cell["\<\
Observation:
Squid and sepia have more similar number of edits compared to oct_bim and \
oct_vul because they are just different kinds of octopus.\
\>", "Text",ExpressionUUID->"359d82da-f182-437b-b3b5-02b6a8b46061"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"code", " ", "1", " ", "graph"}], "*)"}]], "Input",ExpressionUUID->\
"6673350c-b0f3-4ac4-9912-65f52ce93683"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Frequencies in different species", "Subsubsection",ExpressionUUID->"75a23c89-3c0b-4141-9728-8c294dbbfc9b"],

Cell["\<\
How are the distribution different/similar between different species?
\
\>", "Text",ExpressionUUID->"b703d608-6d9c-49e5-9ca4-f2ef23ffdb78"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"code", " ", "1"}], "-", 
   RowBox[{"2", " ", "graphs"}]}], "*)"}]], "Input",ExpressionUUID->"4ce55cee-\
46bf-4d69-81d2-5578cd470fb4"],

Cell["\<\
\tFirst, we notice that KR and synonymous are conserved. We can observe that \
they have higher frequency in cephalopod species which means that the ratio \
of radical to conserved in cephalopod species is less than this ratio in \
humans and conserved_cephalopods.
Which is exactly the difference in ratios of radical to conserved in all the \
species from the research:\
\>", "Text",ExpressionUUID->"1c5660bd-c5a8-4d0f-b729-30b34f60828a"],

Cell[TextData[{
 "Ratio of radical to conserved: ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnb+vFM2Spvl211iTP4HxV0K611kLac2VsGa1BuaMdhitMysNK63W4tr4
XGcMbFxcTEykMfBwBgeLT8JAFwkJwZn7HilREGRmZWVVdEf1eR5NDN893VWV
3f1WRGRU/vibv/8/f/vwP9y6devRf/7r//vbv/t//+2f//nv/v//uP3X//E/
/+nR//7Hf/qH//Xf/+n//sM//sM//9e//49//eN/+e3Wrb/5T7du/fX/bl0B
bORf//Vfrw0gAvQFkaAviAR9QSToCyJBXwCQGXwURIK+IBL0BZGgL4gEfUEk
6AsAMoOPgkjQF0SCviAS9AWRoC+IBH0BQGbwURAJ+oJI0BdEgr4gEvQFkaAv
AMgMPgoiQV8QyTn09eLFi6uHDx9ePX/+/KTXhdOD/4JI0BdEQnwEgMycMwa+
fPnySkuryr59+/bL6/rbs2fPrv2Z7OnTp1dfvnzZfF2d5/Hjx1fv3r1bddzr
16+v26N/9+Lr16/X55Tpv9cw8v28ffv2+rPq9UePHu3a9hHIsSCSU+tL91zx
Wbdv3z7ZdeE8ZI6Pa5mNe6dC7VL71M4joNhb/MD379+nzkF8hEiIj3Bq1I95
//79tX3+/PnczYHkrPVR0pf6tcqPXr16df3fs3WB4qvu3Lnzy2s6Z3nd2tb8
xPpI5TtrUDv39q3Ku0p79F0W9D2rbvDgwYPr79kz8v3o89XeM5svzbCkL33O
jx8//mSfPn269l175N1w2ZxaX7Zf2HvOs6efhPORNT6uZUvcOxVPnjzZteYS
jX7bEV/Qg/gIkRAf4dSUftI5+htwPEZzLPmke/fuVfu0srt37656vvLmzZsf
x9aezav/bc9///79XWoQuh/KOZXzrEGfca+csKBaYWmP/f5sbULX9Sx9P/q9
7Ov67YpvyFSD8P7Km9r94cOHk7UXjsWp9VV8gKyWM+3tJ+G8ZI2Pa9kS906F
YteRahBCzyNKm2cgPkIkxEc4Jb7fsVf8gstlJMey/eElG/VX1g/V+sT2nGWO
wh595yPWIGrXW/p+NCev9jlPndst6cvGrJ7hx6DGKfVl46v8lyfCT8J5yRof
13JTaxD63KVOEDE/vczHkCmWr4X4CJEQH+GUWB/e0wJAYclH1epaGj+lGmeZ
96P5ArV+dAsdV96vYz123GhtDMAWjlKDUDtVR1CO4/3xyPdjfcFMbrQXa2Jg
mT+m8YAan+d1B+A5pb7sPeVzsgg/CecnY3yc4abWIGysjPjcGrdezq/1ltZC
fIRIiI9wSuy4MGtr17qDm8OSj/Ljplq5gXyG9Cf/tYT1b7W1DsTeOVjhKDWI
JZa+H/t8RnnSuVgTA/3zPpuLE5egxin1Zd/rzxXhJ+H8ZI2Pa7mpNQhRzhm1
1uWWOgDxESIhPsKp0LPS8vuq/2H9uZ6nevQ3rU3Ui0eqUek9qu/69S3Lev7S
lnQs0/taz1y15oheL+Ph9G851q+RpHOX/V3KezTfXcf0YpPqauqT6RiZzlv2
HCjfSattulb5HOVaN2EtjZ6Pkh+wfmMvv2DrnXbOmL5v/UZ2bSr9HuW30+/r
kd70Oxed6F/prOUvR3Ixq039WzRb/OhMDUL3p9pVNCa9qTZgv2PfZrVPx5S1
Kke+H80j1v+28/z0fv1N//o5epH3sVgTA2v3to1d5FjgOZW+bK1Q964lyk/C
+ckUHy1rcyQb90oepON1jI9zNRSrbJzVcb29nNQGe37bvtYxrRqE/rvkoa17
tOSz5TPoGB8rFRNtLljL72ZyQbVrtt5PfIRIiI9wKrwftL97rc9ktad+Sw27
rr7Vn10vqWa1MWklFqjGZWOsr5vZ57ctq9VDlo4Zrc95u/T7peejbE6w55ye
Ml7H63Jpvpjfj6Ksw9iyWpt7NYjWXhPl2r37qUdtjlTN7D1WW8d85PtpjYUq
ZvfeiLyPhb7/PWOgbTuAOJW+bHz1uViUn4Tzkyk+FmZyJBv3dN7eWnT+PqmN
y+7FQrtfxEgcKrRqEDbutfb08HtWjcw9922YzQXttdauy0B8hEiIj3AqbD+k
YPsjvj5r44r6cr1zykrt2o63KMfq+avfB9DX1Jf6YaXvYmOj9Kp468/tdWzv
Ix1fa085zveR7OvlWfJN2luk56Mi4ltvLQPlTdKs//71Pv3Nzjvwv510qP6x
X2PHa7tXg/D9d12vtmbPmhqE7+frWL+nRc1319o58v1I9/51/W+9R8eWtSWi
7+Py+2wZC2hr6zL2GgbPqfRl3+ehH3C5ZIqPhZkcycYT/z5fy7fH+uc7il2K
CaX+7J8L+LgiK2MY/N99n75Vg7D3aWvsop8nqXO3YmWJhXaMyZZc0LZv7b6n
xEeIhPgIp8DWne18A+vTve+2sc77fGFjiY1JVrN+jofXrKW0pfTzbH/SxgLF
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
eznVYrP9Pq3ZtSi25IJ2fYy19zXxESIhPkIk5fdSP2cJPy7cj53xPnjpnL3Y
JJ/vfeFo30W1Z7/mkUyat3GonMOeV+8pe2Wr/Yoxtl9ZqxPr/mntLaJ4tnbN
vqMxkmMJfaetPrq+J+UUo/NW7POL2vc70scWygd87ayY2lpjaW2u2prjuoZ8
Ylm7Ye26U9JhTWO6lm1Pqwbh2zny/bTmBXui7mOhe2tNDGzpx7aRHAssEfry
edca9vSTcH4yxse1OZKwmpZftusQFdO94te/17VafXhdb2Suq79Ga1zpUmyp
1Ql8bK49X9O5avHXz0meyQXt9zozDoH4CJEQHyGS2TV89zxn6euXcdx7nVtx
Q+eV+VhqGbkX7Hta/SZ7PX2mm3IfjOZYljJGUd/TzDpII2tCiNHfwP92Iyyd
W59P5/Oa3qILnavcK6Pt6V1vz3s56j4e0dfI+Xpru8DNJUJfth+3tDZfj61+
Es5P5vg4miNZ/GutOFfDxohRyjG+jaPtq1Ha7GP90rH2d+mxJhe0z3ZnfAXx
ESIhPgLE4cd21LBj4Zkv9yszOdYe2HUSRusGcDzOpS+4GUToyz5jbu2LDjcD
4iP0sOsqrVnbuUB8hEiIjwCx2DntGlekdS80Xkjj6ux49N649ZvMuWKgXdPm
0ue73GTIsSCSvfVl16dbO+cKLg/iI7SwY9Jrc0BGID5CJMRHgFj8ms4t6+1X
fZM5Zwy0aznAZUKOBZHsrS+NDVV/Qr6pt+c53AyIj9DCros9u2458REiIT4C
xKOxihrjoHvDjovQfaJ1ky55b82tnDMGaryK1rvqrW0Fx4YcCyJBXxAJ8RFa
aF68fp8t42vxXxAJ+gKAzOCjIBL0BZGgL4gEfUEk6AsiQV8AkBl8FESCviAS
9AWRoC+IBH1BJOgLADKDj4JI0BdEgr4gEvQFkaAviAR9QSRFXxiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYUc3gK0ULf32p9+GDGAN6AsiIRZCJPgviAR9QSTE
RwDIDDEQIkFfEAk5FkSC/4JI0BdEQnwEgMyMxsA//PmPV7//5fdzNxcOBvqC
SMixIBL8F0SCviAS4iMAZGY0BhL/YAb0BZGQY0Ek+C+IBH1BJMRHAMjMUgyk
/g5bQF8QCTkWRIL/gkjQF0RCfASAzCzFQOIfbAF9QSTkWBAJ/gsiQV8QCfER
ADLTioHU32EP0BdEQo4FkeC/IBL0BZEQHwEgM60YSPyDPUBfEAk5FkSC/4JI
0BdEQnwEmOPr169Xz549uzb9N8TgYyD1d9gT9AWRkGNBJPgviAR9QSTER7jJ
qHbw8OHDqwcPHly9evVq1bHv3r27unXr1rW9ffs2qIXgYyDxLxdfvny51v8e
98D379+vz/PixYtre/ny5dXHjx+b19VrI/bp06fmNdFXbtZoosdeehF6j+JF
aY/a16pDk2PlJqO+1vhU/Fdu9tKXRce/fv36xzl1fl2nxlZdoq/cROhLOhjV
V40Z/wU52VNfI77o27dvq48ZjasZsXWEu3fvrjr2/fv3P47VeSAGfFRenj9/
/uMe2FqLk3+z57J2586dX/p4t2/fbr6/Zt63FdBXXtZqosceepG+e8fU4gD6
yks2fYm1PhV95WVPfQnVPXuaUv/As1WX6Csve+tLdYeeXkae0+K/Loe99TXi
fzQewLJXXM2KrUHoO10DNYjTgI/Kh+qNul9G+mAj9HydNQs1iMtmRhM9turF
51Yyf87Hjx//cl30lZNs+pr1qegrJ3vry+abPfN9PmoQl0kWfRXwX5fF3vqS
Xxk53/3793867tJrEBpnou9aazp8+PBh1bHUIE4DPioXulda9//MfaCxVvYc
On/B1ghlT58+/fGaxl7p9Zrp3vR9xhboKx+zmuixRS+KDfa1J0+e/BTrlH/p
+M+fP/9yXfSVj2z62uJT0Vc+IvRlj9Pz6DI23vsmP553a5xEX/mI1peOUSxT
jNPYGnu+2rNa/NdlEaEv+StbZ5Dfkv+xpnPr2pa98vxLhBrEacBH5cLWujV2
T/2xLfeBjV+PHj365fU3b978eF010VFsu3p+En3lI0oTPXp6uXfv3o/XFPPW
gL7ykU1fW3wq+spHhL407rk210LYOWJrx/MuxUn0lY8IfanvJy3Uxtf7OoR/
1oz/uiwi9GVrEKN1ixFG83xpWLUP1WiVz+lztbSp+ohe13tl+u+yBoaup//t
nzepLqxxsHq9ht6v42rHlnO2xhj59mgNSz33UpuoQcSDj8qF5mvpfihxSPf9
lvtA91Q53tdACzb+1Z41e/y4r968NfSVjwhN9OjpxT4TWJvfC/SVj0z6Elt8
KvrKx6n1ZfP7NT5qJE6ir3yc23/5GgT+67KI0Jf1Ua1++lpG8/zaHKGWPq12
vanGUP7b1wvsNWrzQez4EXus/Qy1uby99vQ+B+wHPio3W2oQ9v7r1VMV41r3
fg1bx/Vr3HjQVy6iNNGjpxf7jFHz9taCvnKRTV81yOGPyzn0ZZ9LrqlBjOgS
feXiHPpS365Xg/Dgv45LlL4ixkGM+C87TkKfR8fo+mWdCdt260eLL9WYg5E+
v63b1O6P1ryJXm1mS3tgP/BRudlSgxh9fmN9zcg17L25tM4L+spFlCZ69PRi
9a16v9qneKL4INN/9/YtQ1+5yKavGuTwx+XU+tKYXKuvNXXSEV2ir1ycw39p
fsWaGhf+67hE6cueV3MhNI+grAMxO05nxH/Z8Qk+T/N7qtv32jEJOs7Oxz1V
DWJLe2A/8FG52VKDsOtp1cYh1a6xVHO1+5eN7LeLvnIRoYkeS3rRGFMbk2s1
6F5tH33lIpu+lq5NDn8sovVV1lCXaX6z9UF+Tfkeo7pEX7k4tf8SNu6NjKPH
fx2XKH2N7Iuxpn466r9sbaA3J9uurSCrYf1tdA1ia3tgP/BRudlSg7D3ZS+2
2TWRWutyFWy81HPqJdBXLiI00WNJL726w0gdAn3lIpu+apDDH5dIfS3l8WXd
tBFGdYm+cnFq/+XXo+z14wr4r+MSqa+RHGpkrqIY9V92zohMtYsadr2GVu3F
1meiaxBb2wP7gY/KzV41iN4cMTvuq+fv/L5BI6CvXOytiR4jerGxRXMIFcNK
HqZ//fw8P94PfeUim75qkMMfl2h9aQxuWR+9lsPbffRarNEl+srFKf2Xxshb
nYw+p8Z/HZdIfWl9S80dU96kPEn/Sh9+XsFSrX6N//L7jNr+vs3V7Odu+dDe
Xph71yC2tgf2Ax+Vm73mYsgPjVxD910L68tGcjGBvnKxtyZ6jOhlKbaIsr5R
7R5AX7nIpq+la5PDH4tT6kuon+hz+KXzrdEl+srFqfRl+0ayNfN88F/H5dT+
q2DnFdT2A7WsjavK21prOZaxY7Y/36qpnKsGMdMe2A98VG72WpOyN6dr5Bp+
ba6ltZsL6CsXe2qix6hebGxsjUO1ay/7eIy+cpFNX1uvjb5ycSp9eezY5F4O
v1aX6CsXp9KXrav39kfYem30lYtz+S/bn+7VPrbEVeVvdvyG1fbIHJTe3Iel
vTm31CBm2gP7gY/KzV57c8pa2Lpnq+Zq1w5cqqNa0Fcu9tREj1G9jOjb1tip
QeQmm75qkMMfl1Ppy2PXaOvNqV6rS/SVi1Poy8/zWdPPE/iv43Iu/2X3QO/V
ILbE1YKfn6E6gJ3f0Rrz8/z586aubbt0/tFjR9aDmGkP7Ac+Kjdb66G2flhb
U2vEJ/r9q1UrHQV95WMPTfRYoxfr51vzI23O5veIQl/5yKSvGuTwxyZaXzU0
V7+cTzXRGjO6RF/5iNSXn9czsgalB/91bM7hv7QGxFJtYcZ/tfbstDmb6gD+
M/nP7ddm9bq2mvfzQ2x9eLQGsbU9sB/4qNzYsU29eqhyJK3v6u9PO469Vv/U
MUvPd+z936uh1kBf+diiiZbOLGv04vdI8mtOLq2PhL7ykUlfNUZ9qkBf+YjQ
l2qhrTXd/dz91tjdGV2ir3xE+S8771Bj1NeOfyjgv45NhL5UC6iNDxC+ttCK
rTP+q2hZfXZdX2bPY+cZ+b2OVRdRu2trSfg+v62hyOSvlTva8RFrahBb2wP7
gY/Khe4B5UIy3RO2bq777fXr19ev2T2DfU3P1i/9/C7dd7qG7l9/r7X2HrPv
WbsXNvrKx6wmejqzrNWLnRurZwTy91oLzo6RaMVO9JWPbPqa8akF9JWPCH3Z
Z5PKocv5/PMwWSvXn4mT6CsfEfrysUznVH9SMc2br4Xhvy6LCH2VHEo1C2lE
r+mcXneyFjP+y5/bm7RZaO2hUbNan9/miaPH9moQW9sD+4CPysXofaacqeCf
0/jaeM0PeWvtC2VzsLVrJwn0lZMZTSzpTMzoxa7907JWXR595SSTvmZ8agF9
5WRvfbX24vTWGisxGyfRV0721pd9Nrxkfq1C/Nflsbe+RjXSes4467/kD2vX
1t9qe4CqNmLrvfazLq0BqRqMn8sk071lv5tWDaI211ftqfn+3jlhX/BRuVAd
c8SX2D6Z9021MX4tXyF/0Kt52tg5sw82+srLWk2M6GxWL4qNtdgkU7xugb7y
kkVfMz61gL7ysqe+9Jq01crl9ayylb+LWb+HvvKyp75G+pwtP4T/ukz21Jf6
7z2daP6Gn+dq2Zrnqy0au6o+/cgaJ3qP3qtjCqN7YZZja+MkW5+x99lb7Rk9
FraBj7ocRuYXavxRuX9H10Pacg+ir/ys1cSSzrboRecubWmNebagr/xk0tda
0Fd+9taXzadrOWmLGV2ir/zsra9Tgr7ys7e+bB99JIcqnLuvPVqDgMsCHwWR
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
DMMwDMMwDMMwDMMwDMMwDMMwDMOObgBbKVr67U+/DRnAGtAXREIshEjwXxAJ
+oJIiI8AkBliIESCviASciyIBP8FkaAviIT4CACZGY2Bf/jzH69+/8vv524u
HAz0BZGQY0Ek+C+IBH1BJMRHAMjMaAwk/sEM6AsiIceCSPBfEAn6gkiIjwCQ
maUYSP0dtoC+IBJyLIgE/wWRoC+IhPgIAJlZioHEP9gC+oJIyLEgEvwXRIK+
IBLiIwBkphUDqb/DHqAviIQcCyLBf0Ek6AsiIT4CQGZaMZD4B3uAviASciyI
BP8FkaAviIT4CLDMu3fvrh4/fnz19OnTczflxuFjIPV32BP0BZGQY0Ek+C+I
BH1BJMRHgGWePHlydevWrWv79u3bqmNfvnx59eDBg6tHjx5dff36NaiFl4uP
gcS/nHz58uXq7du317aV79+/X5/nxYsX16Z76OPHj0NteP369Y/j9N/6Ww/0
lZtZLXikAx03Yp8+fRo63/v376+t935yrNzspa8aOs+rV69+nFfX6eUAeu3N
mzc/teXDhw/da+C/chOhLx1v45zOr+vU2Or30FduIvQlHYzqq8aaXJD4mJs9
9TXii2r969njLgmNf5itQdy5c+fHscpXYR34qPw8f/78h8ZlW+oQ8nP2XNZ0
L7VyeNX5WsdpDFML9JWXWS3UuH37dvNcNev5eV139P3oKy976ssi/9fTlsZV
eh4+fNg9plWLQF952Vtfqmf1NKL+gWer30NfedlbX6o79PQi/S2xNhdEX3nZ
W18j/kd5/F7HnRrVa8r9o/tgT7bUIOw9Xcs9oA8+Ki+ql9sa21ad93yeNc9I
nqWxTDXQV05mtdBizxpErd5FDeJY7K2vgs/BZV57viZ67969X95f02ttTBf6
ysne+tLzq5Hz+T4fNYjLJIu+CrO5IPrKyd76kl8ZOd/9+/d3Oe4c2La2+huz
bKlB6B589uzZ9W8K68FH5USabvmDmRqE8mt7Dp2/oPPZ1+y6LL4d9nmh7w+Q
wx+DWS300Hg9HVsz5V9eKy1auRo1iOMQoS8h32OPVR5idaE8XTr7/Plz8xg7
VlLvs33IWl6DvvIRoS97nJ5Hl7HxXj9379796bitfg995SNaXzpGvke+S2Nr
7PlUZ/BsyQXRVz4i9CV/ZesF8ltlLmsxndvn6LPHnYuZvGGELTUI2AY+Kie2
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
wRm/h77yERUf7bww+Zy14x8Ka9bzQ1/5iNCX+vat+OZro/bY2eMKvpagzyNN
6u927FjtOYDf+1ifTXG+tU6598N6v66lOshMLc9SG5Or86uO7Odr+rofNYht
4KNyIt+ge1imWqStn+ue0xwqvWb3DvY5t30O4+ep6v7XNXTP+/UmbU1SuZl8
h/7V++VbdE1fz6+NgRDoKx+zWujpy2Lfs2XvdGoQxyRKX7ZWoJqncgH5IztG
wuctft3Jsp+GriVt+tc96CsfEfqyOpDfKefzeyf2alkzfg995SNCX95H6Zzq
49j1j4r5WthMLlhAX/mI0FeJjapZSCNl3WWvOx/jZo+z2DFiPfM5nPzo0jF+
zKPaWXvfyJizHqPzgmtj4KhBbAMflRM/Fr1ldvyBrxP6GnnNr3jz+0PZmm3L
emvKoK+czGhhSV/C5uxr19ryUIM4LhH6smuKt8w/V/LjJ3pWGw+KvnKyt75a
e3F6a42VmPV76Csne+trzdpH/nnxTC5YQF852VtfoxrxMW72OE+tnl9M4wha
qA7hx0MUH1rbp0p5YM1X7zUOQvmD2lS7RmsO6EgNonbs1tcvBXxUTlr1vl7O
7X1Urd+mHKrmd+Q/anV0+bmWn1Ib/dhlD/rKy1otjOjL+uPZfdNr56IGcTwi
9KVcqJXr+LVCCsopev5Ur7WebaOvvOypL70mf9OKdcqTe3n4rN9DX3nZU18j
fc5aTidmcsEC+srLnvpSfb6nE9UBavs9zB7XQm3SmARZK6bW0DXKcSP1BL1H
fY811xhpg7+G2rPUx6kdO/raHq8fHXzU5TEyz1D37pp7XufUvbjWt6Cv/Mxo
oceePnPpXOgrP3vrq7xnJtexbRk5Dn3lZ2992Vg3kn8WZvwe+spPhP86Fegr
P3vrq/Sd18bG2eMAtoCPgkjQF0SCviAS9AWRoC+IBH3BTUDjOTR2ZK0tzTGB
ePBREAn6gkjQF0SCviAS9AWRoC+4CYyuazEyfwlOCz4KIkFfEAn6gkjQF0SC
viAS9AU3gdq6liPm9z6F04OPgkjQF0SCviAS9AWRoC+IBH0BQGbwURAJ+oJI
0BdEgr4gEvQFkaAvAMgMPgoiQV8QCfqCSNAXRIK+IBL0BQCZwUdBJOgLIkFf
EAn6gkjQF0SCviCSoi8MwzAMwzAMwzAMwzAMwzAMwzAMwzAMw7CjG8BWipZ+
+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
nEpfth8iWzPPhxrEcTm1/yq08qiRcQx23QavN19bqGFrEOUzz/RnIvvufl1Y
/7fa56MGsQ/4qGOw15qUPV8xcg2/RtfSGs7oKxd7aqHHWp20sH68FrPRVy4y
6WuPtqCvXJxKXx47VrdWCy0QH4/NqfRl+3Wj8+Fnro2+cnEu/9XKo2xtojUP
SP3kVj3E99tr2PE+ZS6IHXegdStHiO67+7Un7Zo+tbEoS3tzUoMYAx91DPba
m7PnK+w92Kq92vVlerlYAX3lYk8t9FirkxZ27yhqEPnJpK892oK+cnEqfXls
Ptpam0YQH4/NKfTl5/msrc9Tgzgu5/JfrTxqREt2PoZvi9Vya72c58+f/9Ln
tv3znj+1RPfd7R4eOv9Sfcb6+treoPZzU4Nog486Blvroq01VwojvtGPV6rt
petBX/nYQws9ZnTSwu4hzVyMY5BJX1vbgr7yEa2vGva5XVlXzUN8vAwi9eXn
9YysQemhBnFszuG/WnmU7Se31qewdQa/96bth9eeEfnPUo73a6HUvgf5WTuX
bXRf01n8/KhirXlS9j70c+5szZoaRB981DEYXcNFuZL2/PH3hB1PVfMVOmap
Lmnvud5cNgv6yscWLbT0ZVmjE8WkWg1Z+Jy+dk30lY9M+trq99BXPiL0pVxc
eWMNn5u28kbi42UQ5b/sc1XNv5idn7hmPT/0lY8Ifc3mUer729f8mpNL6+v6
WoI+jzSpv/t+uJ974vc+1mdTe1p7UXg/rPfrWqqDzNTyauj79jWI1r5Gtq4j
UwxR+21dhhrEMvionMin6B6WSeu2fi6Na9yQXrN7B/uao30O4+ep6v7XNXTP
+LVvW2Oq7HtG98RGX/mY1UJPX5Y1OinzYuX7pXOdU22x9flW/BPoKx+Z9LXV
76GvfEToyz6bVC2hnM/vnShr5frEx8sgQl8+numc6kOpj+XN18JmcsEC+spH
hL625FF2bRL5QfWXVUPwx7aeC9gxYj3zNTf50aVj/NiMWo2glyusxc5ZKebr
Mhb73fWMGkQbfFRORrVtxyT5OqGvkdf8kbfW/lA2F1uzhhL6ysmMFpb0Jdbq
ZFTnrboY+spJFn3NtqWAvnKyt75ae3F6a42VID5eFnvry46RWTL/vHgmFyyg
r5zsra8teZTdq6NlS+O61He3dVxrGrfRQnUIPx6i+NDaOpCqY9R89V7jIIT9
LnttL+3x86tkut/t79WqQfT2Z70p4KNy0qr39XyD91G1sX7KoWr+Sv6j9+zG
xtA1+2Gjr7ys1cKIvtbqRPGvp3XFgF4dGn3lJYO+ZttSQF952VNfek3aauXy
ypNbdVBBfLw89tTXSJ+z1d+byQUL6Csve+prax4l39aqIUi7o6hNGpMga40X
q6G2leNG6gl6j8ZqrLnGGtSe3vdVa09pf+1crWsAPuoSGZlnqHt3zT0vZu4Z
9JWftVpY0tesb7V+fDS2oK/8ZNHXTFvQV3721pdeV36r8+nfUYiPl8ne+jol
6Cs/e+trJo+y5549FmAGfBREgr4gEvQFkaAviAR9QSToC24CGgeisSNrrTe2
DU4DPgoiQV8QCfqCSNAXRIK+IBL0BTeB0fUwRuYvwWnBR0Ek6AsiQV8QCfqC
SNAXRIK+4CZQW9dyxGr7ccNpwUdBJOgLIkFfEAn6gkjQF0SCvgAgM/goiAR9
QSToCyJBXxAJ+oJI0BcAZAYfBZGgL4gEfUEk6AsiQV8QCfoCgMzgoyAS9AWR
oC+IBH1BJOgLIkFfEEnRF4ZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh2NENYCtF
S7/96bchA1gD+oJIiIUQCf4LIkFfEAnxEQAyQwyESNAXREKOBZHgvyAS9AWR
EB8BIDOjMfAPf/7j1e9/+f3czYWDgb4gEnIsiAT/BZGgL4iE+AgAmRmNgcQ/
mAF9QSTkWBAJ/gsiQV8QCfERADKzFAOpv8MW0BdEQo4FkeC/IBL0BZEQHwEg
M0sxkPgHW0BfEAk5FkSC/4JI0BdEQnwEgMy0YiD1d9gD9AWRkGNBJPgviAR9
QSTERwDITCsGEv9gD9AXREKOBZHgvyAS9AWREB8BoMbXr1+vnj17dm3673Ph
YyD1d9gT9AWRkGNBJPgviAR9QSTERwCo8e7du6tbt25d29u3b8/WDh8DiX85
+fLly7VOtmhF5/j48WPXvn37tmtb0Fduvn//fv07vnjx4tpevnx5rYMtSB+v
X7/+cU79t/629hzv37+/tk+fPjXfR46Vmwh9FXSeV69e/TivrtOr50tHVpd6
v9rXA/+Vm0h9iVE/JKS9N2/e/NSWDx8+dI9BX7mJ0NdaP7QlbyM+5mZPfW3N
7/X62vgIx0UxrdQgVI84F/io/Dx//vyHVrbUrOw5WvbgwYNd24K+8qI409LB
nTt3psZnST+tcz5+/HjoHLquP5Yc63hE6EvI5/R8mI+nyqtu377dfL/qGC3Q
V16i9FVY44cePnzY1WSrFoG+8rK3vmb90Ja8DX3lZW99zepEuusdo7oIXB7U
IGAJ1cvli5Zy7BGUO434qPv37+/aFvSVk178s7aGXn5V7MmTJ4vnqdUxqEEc
iwh9CV8DlXnd2VqXjbM9a9VS0VdOovRlGfVD9+7d+0WPNV9YGwuGvnKyt75m
/dDWvA195WRvfc3qZGt8hONCDQJ6aJ2Qlj+Y0YvGVFk/pOcyZYxpMZ23lidt
aQv6yod+Y/sb6vct2DlisqdPnw6d02vEPvfz/cbevIxWTKQGcRwi9CWkKXus
6llWF6qTSmufP3+uXk/X0ms6Rs927LlUX62BvvIRpS/LqB/ymtRxBWnN1iJq
9Vf0lY8Ifc36oS15m0Bf+YjQ16xO7PU0HqLMvfB+7e7du7t9fsgBNQjoYccc
aAyf8pe9ahBr87ItbUFf+bD1gkePHv3yuuY0l9eVQ49gc22bhxfsWGX1E0fO
Y4+hBnEcIvQl7PPmnoYsyrnkr2rjWn3+X9MY+spHlL4so37I1lcVGz02x6cG
cQwi9DXrh7bkbQJ95SNCX7M6kR5bcy3snMdWjd4i/6exY4rTMn221vgJaVxj
QVQvUX1Dpv+WP23NQdG5dM4S+5VnyjeX4/Waff7g0ecs1yvt6/VfdD17/tK+
1hoZur91TrVf7dB3Ua71b//2b9ev9b4Toe9E4zhr+U3Zx0Lns5+5lm9bVE/S
+8ox+kx6XqP1P6hBQAvpV7op8Uh+Za8axMh4+L3agr7yIT9Ufr/W8xObE/X8
urDjAFsx09bV5UNr2PGJihc2v6cGcRz21pewz45G8qER/PhVahDHIEJfljV+
yNbja/P57bMmahDHIFpfnp4f2pK3CfSVjwh9bdXJ0jl7MVd67c3D9fne0npO
slo/vfhaXUv99NaxtT5JbR557/1+fp03v26ovYdrbfuXf/mXn/5363tsfd+2
LlWzWi1L2L5az6hBwBJ71iBmx6fOtAV95WKkXiDsXOiluYBWW60xe0vvqbXL
6owaxDGI0JeweYv6iHvg1xykBpGfKH31zt/zQ1aXer9/RmbHUNSeN6KvXETr
q0bPDzEO4rKI0tee+X3B9nt7NQhff1B/2K/RWzTt53iUPruOWern1/rTunZt
3R6LrRPr/RpLoHOVdvvv19cf9F75bl/HsL7efv++feUc9nuq7bFk1wa1a1r5
70zjMdQeX+vwYyd83ULtb62dTA0CltizBqF7TPd3mSe2to5PDeK4jNa27XjB
pd94NK5aH+yxvrFcjxrE8YjQl7BakL/SdeS7FGdl+u+1+4hp7OhSW9FXLqL0
VZjxQ63c2efGNdBXLqL1VaPnh7bmbegrF1H62jO/F+ojW9/Vqvv7fq69ltpU
/Gnxm3YMiF7z2Nf9+pnFD5c80o738Gts2PXIbO3A5wh+P287bk3X8f7e+nRb
U67VIMocCZ1fr9s4UqsT2dqHrb/Y78T/Dn7dIov93Lamobb4Ogs1CFhiaw1i
ZN3c0eeL1CCOi62p9vbKtL/xmnEQPU3Y91jfbttk4w41iOMRoS9hn5P0xlWu
eQZkz9Mav4q+chGlL3/uNX5IeXcvriqXbc1xRl+5iNRXi54f2pq3oa9cROlr
q070muoeMvk+e1xrzxVh+8eqR9Qo/X67/oDvLxd8LcH626U+fKtuY9u4tN+p
/ey1dRbsmCU7x8TnwLXfzNZ1/LM6e177mv3OWnOYbW5Uai8j37X9rNQgYImt
NQix5KNkrX2mZ9uCvnKxND+5YNfJGtkf2o/x0rgw+Vxdr7avisXmYHZ+JDWI
4xGlr17dYaYO4deBo494DKL0Jbb4IdHSY+85JPrKRaS+ls7T8kNb8jb0lYtI
fc3qZKl+4edEWGz/fmkc4uhnt+e0vtP64dq1Wvs8+PFotXV7atfW+crajbKS
z5bX7TgWW4Ooje8o2Bhjv1f7e9t9Uuz1VDPQ91HaIytrX/rPbddCbtW6bD2M
GgQssUcNQnmV7qMyNkj/6lx+XE6rnjnTFvSVC+vTen01WzcYiYF+TuuSlRjS
8r2CGsTxiNKXzQ30nEB5RMnX9a+vgfXyIf/cmueIxyFKX1v8kPS3tIZZS2Po
KxdR+qox6oe25G3oKxeR+tqiE7vXQs1/eZ9YKK+P7N05Or/E+ls7FmHJD7dq
EH5sha2D+Dyht7amt1YNove72vWObR3G/ka27mLnaY1Y+dz2u2j9duzNCWvY
owbRw47Laa2xOtMW9JWLkf0pRCsO9Kj1Ba2/9fGqtw6wsDGrBfrKRZS+bG7U
qkfZ/KHll/yYyd44U4G+chGhry1+yNdepVP1A9ROP3aHNSnzExkfLWv9UIul
vA195eJU+vKsye+F+sG+dlFrx5oaxOhnsmst2nUdZmsQQu9v5aZlPIIfD6J8
omV63Y53GN2XxMcL/zf/Pfp1OJfaVD6L/S5aNSxqELCG6BqE1WPPN65tC/rK
xcgeFmKr3uRXZTZW+Ov6ORqav1HmJMpsv1N+XW3ybUFfuYjSl82hWvMmbJ2r
lePYOsXI3uvoKxcR+trih6wua2Nw/drl/rkb+srFqeLjWj/UYilvQ1+5OJW+
PGvye4uto9ZqF2s07Pc8bmFrBXb/iC01iIJyB+/vbdvXzC2xrNkb1a89affD
8N/LyHiGGiPzXpiLAWuIrkHYPcaoQVwuvtbbwvrJPerwVl9lrNro3sXWvB9G
X7mI0teIz7G5S+2cfpxpb25/AX3lIkJfs35otC1+jrEFfeXiFPFxxg+1WMrb
0FcuMuRfa2oQtn9cW0vCarm236TFr23QonVv7FGDKPj5GaXeYGsua/YTWVOD
sPMr9N7e8xW7rkNvnQmPPa71XavWTg0CRomuQdg9dpiLcdm01sUpjMbJNdhY
VcbXlbp4b2xZsfK//R7I6CsfEfqy8bI137KmsYIfV7q0PnYBfeVjb33N+qHR
Z5q1dcsL6CsfkfFx1g+1WMrb0Fc+zpF/rcnvLXbsQq0PbOv+tRqF+gf6vPKV
vt9fq63YvoWvlczWILzPLdTGPNhxa731+f0YiTU1iNo+nq1agZ+70Vsf1OI1
5I/za+FSg4Al7PihXl1UPkP3kX9erPvQrvVt8TpfGvMz2haBvvJhx6zXauI9
P9zS1+j1entie1iT8phE6MvvNeVzAFv393mbfc5Q2/O7B/rKx6n9V8sP+Tyv
FV9tHcM/W0Nf+YjS14wf2pq3oa98ROhrVieqpbb2ifB95Vrf2sdlaVx9Apnd
r6HE69r+aWWvB/+a71vM1CCKj9b9pn63viOZPZedi+G/K30efbf6u9qpMQzl
Prb99jU1COH36pC19gKwNWyZNKC2qE1qW/ksPrf2e6zq/Hp/bV0MahDgkVbk
G2TSjq2fS5O6F/Sa3YfW50R2bFTJg6R9na+sm2WfL9by99m2FNBXPuw+xdbP
1uKArZ/29CUdqa6sf3Uu+UjpwT/3adWka1CDOCYR+hK2L6d4q7gpnXkf5nMs
3xa7F7q1Wi6GvvIRpa8WPT/k150s+7XoffJ//nUP+spHVHyc8UNb8jaBvvIR
oa9ZnVj/JD9X2uGfk8taNQ5bU2lZqUG0xgB48+NdxZYaRM/Uf7HUPnvNbH9n
bQ3Czo3x35FHfx/Zr8OvydHaD6Rm1CDAM7pHTGt/GJmtI46erzbWZ6YtBfSV
k1ps8ub3CuvpayQOeV+/BDWI47K3voRdQ6llvfGbS1YbT4++chKhrxY9P+Sf
A66NregrJ3vra9YPbcnbBPrKyd76mtVJay9Ob62xEgU7Z8OaaiK1dRX8Wr1W
+63+8OxcDLW99v3ob62xBzpX67tRP8ePQxndm9Ni26TvY4lejq3vufZ8T7Wo
2udQG22bqUGApzZWp2Y25/Y+yt6n0mfvnLoHWnW4mbYU0FdeWr5ZPrY2pqWn
L/nsVhxsxaElqEEcmz31VVAO5Z8tF6s9OxnJ9fBfxyRCXzWW/JCeN/VipF5r
PUNEX3nZU1+zfmhL3ibQV1721NesTvQ3+bdW7qYxGqNrEAj5OfV7le+N7CtR
3i8b8cdL59Trrffo/GqXrjW6DouOKe1TW0euv4Zee1vY73j0c+h95ZhaG84J
PuryWLqXix7LfRUJ+sqPjQMjPq2nL+vn99DWkn9EX/nZU1/2PafwYegrPxH6
8ozmabYtI7pEX/k5hb5GmMnb0Fd+9tbXbH5vc7eZZ0YAM+CjIBL0BZGgL4gE
fUEk6AsiQV8AkBl8FESCviAS9AWRoC+IBH1BJOgLADKDj4JI0BdEgr4gEvQF
kaAviAR9AUBm8FEQCfqCSNAXRIK+IBL0BZGgLwDIDD4KIkFfEAn6gkjQF0SC
viAS9AUAmcFHQSToCyJBXxAJ+oJI0BdEgr4AIDP4KIgEfUEk6AsiQV8QCfqC
SNAXRFL0hWEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYdnQD2ErR0m9/+m3IANaA
viASYiFEgv+CSNAXREJ8BIDMEAMhEvQFkZBjQST4L4gEfUEkxEcAyMxoDPzD
n/949ftffj93c+FgoC+IhBwLIsF/QSToCyIhPgJAZkZjIPEPZkBfEAk5FkSC
/4JI0BdEQnwEgMwsxUDq77AF9AWRkGNBJPgviAR9QSTERwDIzFIMJP7BFtAX
REKOBZHgvyAS9AWREB8BIDOtGEj9HfYAfUEk5FgQCf4LIkFfEAnxEQAy04qB
xD/YA/QFkZBjQST4L4gEfUEkxEeI5unTp1ePHz++evfu3bmbAgfEx0Dq77An
6AsiIceCSPBfEAn6gkiIjxDJt2/frm7dunVtqkMArMXHQOJfTr58+XL19u3b
a9vKx48fr16/fn314sWLa9M5v3//3r22jumZfFEN9HUMzqWvEW0V+/Tp0y/H
k2Mdgz31JS3pPEVfL1++vNbHEtLPGr8n8F+5mdXCKNLt+/fvr63mf/x7rb70
3/pbD/SVmwh9rc2/Cl+/fr168+bNT2358OFD9xjiY2720tfWPErM6EvtLzWI
J0+erG43AD4qP8+fP/9xn8tm8/hXr179dB5v8jk1escUe/DgQfVY9JWfc+rr
9u3bQ/oq5mtd6Cs/e+lLKDdqaePOnTvXeZRH+X5PZ9JtC/SVlxktrEHHL/mf
guJfqy2954PoKy9762s2/xIPHz7sHtvqK6KvvOypr6151Ky+qEHAVvBReVG9
Ur7I+4OZeVd6jjPim3z/wI616tn9+/er10VfecmgL2oQl8ue+hK9nM2aZVaX
BfSVkxktrKVWV6jVIEZ8WCs/R1852VtfW/zQvXv3fnqP9FbTXG3MDfrKyd76
2pJHbdEXNQjYCj4qJ8+ePWv6j5kcXseU41WPL2P/VN+057579+5Px1kfozqD
3l/GphbTuVtjTtFXTrLoS2MDdWzNpC3/DN2DvnKyt77kX+w5dP6C1Z5Ma2TV
XtPfP3/+fJ1/6ZmjPUa1khroKx+zWlhDq8/oaxBe5/Z5ofdd9BGPQYS+ZuOj
f126LMiX2b5irQ+IvvIRoa/ZPGqrvqhBwFbwUTmxzw81llj395YcXuO6WmP9
VHtv5eLWx8zkc+grJ1n0tYRtV01/6Csne+vL9vUePXr0y+uax2qf4xSU7+na
tXGtvg5Re8aNvvIxq4U12NzbjlP2GrHvs/l7wR6rfoAHfeUjQl+z8dH2HeVH
PbbPSg3iGJzCf3laedRWfdn+Qaml6JwaW6F6mp5btnSvWpzmqbVqF6qB6PuR
6b/959HfS11Xn6lcU+PXvC9W2+zrvRxE96rGqch328+hz9Wai+fbM/odAD4q
K7pPpOmied1jW3L4HtaP9GoQM3VO9JWTLPrq4ecB1fqR6Csne+tLsbz3PFlY
rficpYbXFzWIYxChBYsdJ63c0ebpViNWP62+gn3OqJzUg77yEa0vTy8+2r5j
bd0aO16HGsQxOLW+ennUVn1Z7bbmcLR8n31OUYu9tv5h5yjZz2Pb702+W/NB
W6/XasK98Zut32O0PbXvAPBRRyGyj2jrroyDuJmcS189bDxgzdNjs0VfI309
Yefvj6x76dccpAaRnygt9M5vtWs1YmOjH0M/+h70lYtofdXoxUc7RkLt8ftn
2HE2tWet6CsX59BXL4/aqi/r36zp2b+ttdRqHPb1Wuy19Q+bM7Suqc/WWxej
9rp/rmXrIqoZ6LvTWI1eLWHLdwD4qKMQ1Uf0dUI9A7LY+0v3nuadlXUgRuqz
6OsYnEtfPexxrPt9bLboa3Qcjc21Rq6hsadL50VfuYjSQsHm3OW4Vg1itD9h
814P+spFtL48I/HR923K3o1+zdQa6CsXp9aXWMqjtuir1v+2e3/acQG+775n
DcL2RWrrYLde93UV+X87p6Lg1/Bo1aLXfgeAjzoKe/URFePk32Sq0/m6nWdk
X4xevxJ9HYNz6auF3ces9YxRoK9jsEVfdjx7b59De42RZ0c2F2HfgmMQpQV/
buurRsZB9HTdyl0F+spFpL7ETHxU/6mXf6nG1drHEX3lIlpfnpE8aou+vA/0
7+vVXPaqQfhr2rEdS6+vmV/eWhdoy3cA+KijsEcfcameUOqfnqUahIyx8sfm
nPqqYfuHGqvaAn0dgy36WpqTWrBrTC6tAeXXoySHPwYRWihYn2Ofg7VqEMLm
pTLNMdYzMLWzNrfYg75yEamvrfGxdVxvPCr6ykWkvmqM5lFiRl8jc7VLrSGi
BlG7pq3z1F4f/Q2E2qXcQNe0czJaNYi13wHgo47CXs+py1qtfp5SMbtPUEH5
mPKqci/qX7XB7ytc83Ho6xicU18evz9VD/R1DPaqQfTWpLF9vl7e5p/7MI7r
OOythYLN+b2P6tUg/JoiS+bnW6OvXETpqzATH6Uxn2t5a/kw9JWLaH1ZRvOo
LfoaWbM+sgYxs1/o0uu6rh+j5K1Vg1j7HQA+6ihEzddXPu79T22PsRb2Xq3t
M4S+jkEmfdn3L9Us0Ncx2GsuRm8+pb1GS2N+3OTS/CD0lYs9tVCwz6drOaLt
D9RQDu/HQ9ictPw3a1LmJ0JfPZbio69xSUN6HqR2+nnvrEmZn1PqaySP2qqv
S6tB2O+dGsRpwEcdg8h9C4T1N7VaQgvrJ9h77Lhk0Zdfo6u1H3MBfR2Dvdak
7K0NMnINuz7gyN7r6CsXe2qh4OdMaD5FmbMvs7myckydu3VO5fQy67eoQRyH
CH2N0IqP9hmP6lwev2Y/42xycyp9jeZRW/W1pf+9tDfnqWsQmgvl40BrH1Nq
EPuBjzoG0X1Eu3ZNa22HGnZ9F2oQxyWLvpR/ramFoa9jsNfenLIW9rlP7dmR
H/+8VN8S6CsXe2nBMvrsy9rInDJh42Nt7DX6ykWEvkaoxcfRtli/5tuCvnJx
Kn2N5FF76GtL/9u20e9DIVQDOGUNwt6DtbkntlZNDWI/8FHHILqPqHuuVw9t
Yfe2Zi7GccmgLz8u0O5v1AJ9HYOt+rLPTGprty3lU368c2sNSg/6ysdWLXiK
b9K4mJrZc5X/rfx4BJu/1/bFQ1/52FtfI9Ti4+gzc9uX8xpDX/mI1tdoHrWH
vrb0v21O4Gu6th5wqhqEbY+ub9FvYmMBNYj9wEcdA1uD69VFFcs0fsrf08qZ
/H1V8HOk7X0kn1OrUQrv62rPhtDXMTiXviw2Bozuo4y+jsFWfS3tsW3HjPpx
Nna8qfKIkfEPBfSVjy1aaOmrR29NytF2tnJP9JWPCH3NxEffF23lYbZv5Pcw
QF/5iPZfo3nUHvra0v+2zy9LXVc1GVvzOGUNwq7hqc+sPEXv9e2kBrEv+Kic
qO+vmCXTPWCf4+keff369fVrdu9g71Ns/dPWXuWjdH7d736POu+Liv+RL1Q7
yno1dpxUr16LvnKSRV8W+57RPbHRV0721pef36q6QtGYXw/QPlvyfkrHKY+z
8/2L1foI6Csfs1ro6atHrwYhfSm/1L9qg3J0adqPu6mNgRDoKx8R+pqNj35d
QPmost6IdOZf96CvfET7rzV51FZ9rel/18Za+HFmLTvVmpQjbdlSg+iNN7mp
4KNyMnpv2rqar6fb542tvaC8+Tx8tB2tva3RV06y6Ktgc7GRtQIL6Csne+tL
1Oqe3vw8zjVz/Vkz8DjMaGFJXy16NQj7TLNlqre1QF852Vtfs/HRr5O3NgdD
XzmJ8l9r86it+rJtau012hsDIH9a2xdU57LnbtUgatfc8nprn1LVhuTHa3Fg
63dw08FH5UTjDkb8gh1r5X2Uv090f7T6BqrF1nyM6rO9tmhcmF8r14K+cpJF
XwWb56/ZDxt95WRvfRWUo9c0pthee+YzkuvV2lJAX3lZq4URfdXo1SDUD2j5
PN0DfuyyB33lZU99bYmPGhfR86d6rTW2EH3lJcJ/zeRRW/Rl27bldfX9Na6j
NrajdezWa/Ze13db2uPv44jr3WTwUZfHUm6l15Ub6f5aypEs1k8s+aQC+ro8
ovQ146PR1+Ux0jeU/ym+aHR9yRnQV37WamHNmg6FJd9kfd5obBToKz9762s2
Pvq2jOgMfeVnb31t6euu1RfAVvBREAn6gkjQF0SCviAS9AWRoC8AyAw+CiJB
XxAJ+oJI0BdEgr4gEvQFAJnBR0Ek6AsiQV8QCfqCSNAXRIK+ACAz+CiIBH1B
JOgLIkFfEAn6gkjQFwBkBh8FkaAviAR9QSToCyJBXxAJ+gKAzOCjIBL0BZGg
L4gEfUEk6AsiQV8AkBl8FESCviAS9AWRoC+IBH1BJOgLIin6wjAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMO7oBbKVo6bc//TZkAGtAXxAJsRAiwX9BJOgLIiE+
AkBmiIEQCfqCSMixIBL8F0SCviAS4iMAZGY0Bv7hz3+8+v0vv5+7uXAw0BdE
Qo4FkeC/IBL0BZEQHwEgM6MxkPgHM6AviIQcCyLBf0Ek6AsiIT4CQGaWYiD1
d9gC+oJIyLEgEvwXRIK+IBLiIwBkZikGEv9gC+gLIiHHgkjwXxAJ+oJIiI8A
kJlWDKT+DnuAviASciyIBP8FkaAviIT4CACZacVA4h/sAfqCSMixIBL8F0SC
viAS4iPAMu/evbt6/Pjx1dOnT8/dlBuHj4HU32FP0BdEQo4FkeC/IBL0BZEQ
HwGWefLkydWtW7eu7du3b6uOffny5dWDBw+uHj16dPX169egFl4uPgYS/3Ly
5cuXq7dv317bVj59+nT1+vXrqxcvXlybzvn9+/fF4z5+/Lj6OPSVG/1++h3L
byp/qt95C/LDb968+emcHz58GD5+jdbJsXIToa+CzvPq1asf59V1RnKANcfh
v3ITqS8hX/T+/ftrU9zsMRNX0VduIvQ1m39t0RfkZE99yVfp2J71+tcz+f2l
oPEPszWIO3fu/DhWcQLWgY/Kz/Pnz39oXDZbh5B/uX379k/nsqa8vIb+3jpG
Jr/ZAn3lRXGm9ZvKr87UdB8+fNjVylItYq3W0VdeIvQlpImexjSucq/j0Fde
ovRV0PH+vLX8dDauCvSVl731NasT9HWZ7K2vXmwrpuf1ni35/SlRPaTcB8oT
92RLDcLem63cA9rgo/KiuretsW3RuepzIz7K9/lmjyugr5z04p+1Ndy7d++n
Y+Wba7mT6vWeWa2jr5xE6Ev4GlXRmf3fmte513HoKydR+rIoX/fn8/kp8fEy
2Vtf5F9g2Vtf8ksj57t///5Px23V1ymxn1FzJ/ZkSw1COeqzZ8+uf1NYDz4q
J9J0yx/M1CB0TDle99vnz5+v7zXVOO251Q9sHad6aRmbpefZ9ri7d+9Wr4u+
8qEagP3tpLWC/b2LVkbwerBj0qQ129/z8WOL1tFXPiL0JbzGpCObL6iOpVqD
9LbHcQJ95SNKX5ZWbu7z09m4WkBf+YjQ1x75F/q6DCL0pbzc1hkU88ocsmI6
t3/+szW/PzVb/XqLLTUI2AY+Kif2mbDG4tk1U2ZqEPI9OkdtfJePZ/Ye1Ptb
Y7Hs2GZi4HGwfX6to+PRWg7lddUORrDPmaVXj411vgaxRevoKx8R+hJ2nM2a
sZizxwn0lY8ofVlszdTOL/P56WxcLaCvfEToa1Yn6OvyiNCXrUGs6Z9vze8t
qnNoLKHirWoW+lefbymHU11NGtf7Zaqh6Dsqmpeu9ZlsXqj26D0yvbZ13Qpb
gxBaG0NtL59FMaA1j1jfk95bG5uhv+m1UvvRdco5Nc7Orx+hz2Nfj5rbsea3
0vgOvbc39kSfT+/ROfyzHP2O9nPJ9L7y2fFROSnrrJa4Yu+RvXXpx3GN1gGt
36MGcRzkA8rvVpsXIaweas+HPTY+1Oan2ueK3pdt0Tr6ykeEvuyzo5F8aOtx
BfSVjwh9Wew4aeXntr665hnZSFxFX/mI1pdnNv9CX8ckQl82F99rnsJIfl9Q
3cC22Zv6nzVqcyStqX/vx4a03rcFm3PW5uD1nmG09tTwc0da51SM0VjMNdfc
wtrfyupV9bEaqj/UcnZbT6uZ8n581DGIrEH4tbdGY6DVFzWIY2D9Yq/Gbv3w
iH+3NXOd19el7bPEpTWOqEEcl1Poa828y9njCugrF1H66p1/dpzuSFxFX7mI
1leN2fwLfR2PKH3NjoPoMZLfC78OmPq46nPbvmv5e+v85Ro6zo6LVd9WYxL0
Xfn1wsozdb3WquWMYn28tdoa6348RCs+2N/Emn7b3hqztdf32vNz5reya5b6
37BQa6ufz6NjlfvbeoUMH3UMImsQGv8+4mssvm7Xyu/RVy5Ga9t2vOCo3rwv
LXtM+bryEtQgjkuUvqwm9FxI19HYGuUxMv13bTzm7HEF9JWLSP8lbM5Zjput
QYzEVfSVi2h91ZjJv0aPQ1+5iNKXPa/6mcq9yjoQM+N0RvN7v26O759bjdqc
UPTWCCvPDuzfI8Z6FHwNwq9PbfvoihGtY5dqEPa3qK3B3np9j71JZn+rpfFW
ttZgx1DY78zrx7YFH3UMImsQVuute1saKvOv/FieVm1MoK9cWH9R2wegYPU2
+pxH/tP7VGuKOSP1XGoQxyVKXxqzZ3O3lsb8M6DZ4wroKxeR/sue28a02RrE
SFxFX7mI1FeLEZ3MHoe+chGlr5F9MXrjAGfze/tcvdVPtjG46NT2QUfXvDjV
vhi1c/uajH1uMVqD8Lmv3yu89/oen3f2txL2OaJf782OayivqX5Rq0vUroWP
OgZRNQi/rlGtj7jk32xt04O+ctFbl8FidbG2BtvSyWg9nhrEcYnSV69+0Ksn
zB5XQF+5iPRfVit2bO9MDWIkrgr0lYtTxMfWeXo6mT0OfeUiUl8jMU59Sc+W
/N4+6275RvuZyxgC+ze7L0iPU42DaI2LtPHBftaRGkQtt7D1qNrro1oZZfa3
ErYe4msKVivlu7PnUQ1Lub90VEz/u9Q18FHHIKIG4Z9b9+qkdk3Tmp9q+RH0
lQvrG3rzBu1YwNEYqDzIzzfzNjInnxrEcYnSl/U7em6iOYol79a/ft5miYWz
xxXQVy6i9GVzfh/L1tYg1sRV9JWLyPjoWaOT2ePQVy4i9aW6qZ7XK64pjulf
5U8+J6utKzib35fXe/NKbI2j7PFpP5/fG6LFqWoQLR/f6sOP1CBq7d36+hpG
5wDVfquC1UNtzQdbs/DzOnqGjzoGe9cg/Dih3nirGoqD3rfVfAn6ykVr7pbH
6m0kRvj1seS/FA91Pf8smjUpL5cofY3U8O380qKb2eMK6CsXEfqyeVctP7P5
8hJr4yr6ykWU//LM5l/o69icSl8eO7+ith+oZzS/b/VXLda/ls880585dw3C
fhdr52KcuwbRqy203uf1aedplL3vWvth+PU1lGO1DB91DPauQdi8e3YPdWH7
lzXfhr5yYf1azxet1ZuNcX7NHuHXwu2tA0gN4ricQl+tccd2/6uSL80eV0Bf
uYjQl60xyLQXWpkbLbN1LGlF526dc21cRV+5iPJfntn8C30dm1Ppy2PHX/Rq
H56l/N76zRZ23E6ZC2L3P/brC7Q491yMI4+DELO/VaFWP2udc81cG3zUMdjT
J/nxVmvW2fLYfVtqc83QVy783L8Wtga+5jli75xWd71zUoM4LhH6EiOasPMq
yjlnjyugr1xE6Ku1L1vPannVTFxFX7mI8l+W2fwLfR2fU+irRm8+f4+l/N5q
srVuhGq6vi9t+6i189Y4VQ2i9jl6e0McpQYx+1tZbA3UasO/V7lWea32TNKC
jzoGe9Ug/PiqrfvO2npmTWvoKx+2tj3ib5cYre3bsVx+XyALNYhjs7e+hI2N
rXm0NsYWfc0eV0Bf+dhbXyWGtcaK2nOV/y1dWWbjKvrKR4T/KszqBH1dDpH6
aqE1IMr5RuZiFJbye5vT1Wob/rOU+OrXNKl9D7qerfWOrmkwg69D+/XT7VhJ
P//pKDWI2d/KUptjUfv9/Nxs9i04PqNruMhnaNx77TmNHZcs7YzU0ZVrlbk/
Hj83sXafoK98WH9a80V23oSvUdf05X2XXVPeYvP53h4Za9YrQl/52Ftfwu71
JPPjJW3d3eZts8cV0Fc+IvTVY2mu8ExcLaCvfETpa1Yn6OuyiNCX+outvMv3
B+2xW/N7X0vQ51HOpr/b5+Qy/3zK7wGqz6Z43Vof2LdH79e11Lfe+iy1NhZO
59eaZn4esX8udpQaxJbfqnWO4pNq2JpH+T51vH4r6bV8b/ionOg3ki5kqmHa
Orh+W82h0mt272DfF9T9U7DPA2W6/+2ewNasT7I1W2lG7fJ+otf3RF/58Hsd
Swvld/X7BNj6ZU9fft3Jsv+AjpFG/euWGa0X0Fc+IvQlbA1LelIuoJjmfZvP
z2aPE+grH1H6atGrQczG1QL6ykeEvmZ1gr4ujwh9lRinmoVyqLIeuNePz722
5vfCjpXomfedOt/SMX7sYtnP0duoL28xOh+vNhbkKDUIMftbWXwu36rnq/1+
HGHN8FE5GfntSk5d8HVC+wx5zZxXWwNr7dXjrVVLRV85qcUmb37Pr56+/PPm
nvlxWTNaL6CvnOytL2HXRGpZ7bnS7HECfeUkQl8tejWI2bhaQF852VtfszpB
X5fJ3voazaF87rU1vy/UnjMV0ziCFqpD+PEQMn2e2v5p8r+1Nu81DkJ5gNpU
u0ZrLudIDaJ27NbXZ5n9rQq+PtWqTRXsuB9vqinho3LSqvd5s7mz91H2fhjx
ea1zSv8tHyf/wVyfY6K4Uvtd5Z9qYw56+hLyRT3d6rWav5rRegF95WVvfQn5
mlb89HP09zgOfeUlQl811oyDwH9dDnvqa1Yn6Oty2VNfqrP38ij1LWv7PWzN
7z1qk8YkyJb6pr4d5biReoLeo7GMa64x0gZ/DbWnN2+4dezoa3u8Psvsb1VY
2y5do3yf9jfGR10eW/a5WDqv9DN6Xwr0lZ/iG0b9/4i+7Dn3jBMe9JWfCH3N
xs+1x6Gv/EToyxOVB6Kv/JxCX1Ggr/zsra/Sd56JjWvze4Ct4KMgEvQFkaAv
iAR9QSToCyJBX3AT0DgQjR1Za2vGeJwb1cG11sfaz6hjomroe4CPgkjQF0SC
viAS9AWRoC+IBH3BTWB0PYyR+UtZ8Xt4rbHMtRZ8FESCviAS9AWRoC+IBH1B
JOgLbgK1dS1HzO99mpmRtbVbtnXfkEjwURAJ+oJI0BdEgr4gEvQFkaAvAMgM
PgoiQV8QCfqCSNAXRIK+IBL0BQCZwUdBJOgLIkFfEAn6gkjQF0SCvgAgM/go
iAR9QSToCyJBXxAJ+oJI0BdEUvSFYRiGYRiGYRiGYRgWaf8O/gqNdQ==
     "], {{0, 300}, {1057, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{508.26953125, Automatic},
   ImageSizeRaw->{1057, 300},
   PlotRange->{{0, 1057}, {0, 300}}]], "Input",ExpressionUUID->
  "5d40422b-83e3-44ae-95ec-454d15709dd1"]
}], "Text",ExpressionUUID->"f7431ea0-d863-4838-8346-448cffe3b092"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further explorations", "Section",ExpressionUUID->"9da19663-7179-45c9-8160-ad35832309c2"],

Cell[TextData[{
 "Trade-off between Transcriptome Plasticity and Genome Evolution in \
Cephalopods, Cell ",
 StyleBox["169",
  FontWeight->"Bold"],
 ", 191\[Dash]202 (2017)."
}], "Text",ExpressionUUID->"45c45f6e-321c-4ce7-9657-950c1134d308"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author contact information", "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],

Cell["zhamilya.bilyalova@prismsus.org", "Text",ExpressionUUID->"44146aed-2d19-4c66-bfba-1e67f1c1dfb3"],

Cell[CellGroupData[{

Cell["history/origins", "Item",ExpressionUUID->"3d27619a-637d-405d-b02d-8b70dfdd9049"],

Cell["derivation", "Item",ExpressionUUID->"822fed98-613f-4b49-8b58-a0f6aa512fe1"],

Cell["applications", "Item",ExpressionUUID->"633ac3d2-08ee-4f92-b695-b55e0c80957b"],

Cell["common misunderstandings", "Item",ExpressionUUID->"a4f29298-d52c-4cd1-b50e-00ce7b184488"],

Cell["recent developments", "Item",ExpressionUUID->"0d6cb4fd-31cb-4541-b3a7-b2d99d2aabd8"],

Cell["unanswered questions", "Item",ExpressionUUID->"7e5ff825-f0bf-48f4-90e0-022973883d09"]
}, Open  ]],

Cell["\<\
Another way to start an exposition, or to expand on the basics, is to provide \
an example showing the application of the topic. The example might be \
something you arrive at by the end of the exposition, repeating that \
conclusion here is acceptable if it's reasonably self-contained. It might \
also be an example a problem scenario and the exposition explains a solution.\
\>", "Text",ExpressionUUID->"1fee1280-53c6-4307-aa00-579c0a0de28f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attempts on constructing graphs:", "Chapter",ExpressionUUID->"9beda6c9-df48-4d55-89ba-2044ea627e6d"],

Cell[BoxData[
 RowBox[{"RandomColor", "[", 
  RowBox[{"Length", "@", "list"}], "]"}]], "Input",ExpressionUUID->"90ab1dc0-\
8f96-4400-af34-cf8a622f02c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"5", ",", "\"\<ColorList\>\""}], "]"}], ",", "16"}], 
  "]"}]], "Input",
 CellLabel->
  "In[325]:=",ExpressionUUID->"759a3db1-e5f5-4846-89c6-787e4aca663a"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.4588235294117647, 0.1411764705882353, 0.1411764705882353], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.3058823529411765, 0.09411764705882353, 0.09411764705882353],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.4588235294117647`", ",", "0.1411764705882353`", ",", 
            "0.1411764705882353`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.4588235294117647, 0.1411764705882353, 0.1411764705882353]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.41830065359477125`, 0.1542483660130719, 0.1542483660130719],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.6274509803921569`", ",", "0.23137254901960785`", ",", 
            "0.23137254901960785`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.3803921568627451, 0.2784313725490196, 0.20784313725490197`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.25359477124183005`, 0.18562091503267975`, 0.13856209150326798`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.3803921568627451`", ",", "0.2784313725490196`", ",", 
            "0.20784313725490197`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.3803921568627451, 0.2784313725490196, 0.20784313725490197`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.3921568627450981, 0.2954248366013072, 0.22483660130718958`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5882352941176471`", ",", "0.44313725490196076`", ",", 
            "0.33725490196078434`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706],
           RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.3947712418300654, 0.2797385620915033, 0.18823529411764706`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.592156862745098`", ",", "0.4196078431372549`", ",", 
            "0.2823529411764706`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.8235294117647058, 0.5019607843137255, 0.09411764705882353], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5490196078431373, 0.334640522875817, 0.06274509803921569],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.8235294117647058`", ",", "0.5019607843137255`", ",", 
            "0.09411764705882353`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.8235294117647058, 0.5019607843137255, 0.09411764705882353]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9764705882352941, 0.6901960784313725, 0.3215686274509804], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6509803921568628, 0.4601307189542484, 0.21437908496732028`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9764705882352941`", ",", "0.6901960784313725`", ",", 
            "0.3215686274509804`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9764705882352941, 0.6901960784313725, 0.3215686274509804]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.396078431372549, 0.396078431372549, 0.17647058823529413`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.26405228758169935`, 0.26405228758169935`, 0.11764705882352942`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.396078431372549`", ",", "0.396078431372549`", ",", 
            "0.17647058823529413`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.396078431372549, 0.396078431372549, 0.17647058823529413`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.27712418300653596`, 0.27712418300653596`, 0.203921568627451],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.41568627450980394`", ",", "0.41568627450980394`", ",", 
            "0.3058823529411765`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.6313725490196078, 0.6313725490196078, 0.24705882352941178`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.42091503267973857`, 0.42091503267973857`, 0.1647058823529412],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.6313725490196078`", ",", "0.6313725490196078`", ",", 
            "0.24705882352941178`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.6313725490196078, 0.6313725490196078, 0.24705882352941178`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178`],
     Editable->False,
     Selectable->False]}], "}"}],
  Short[#, 16]& ]], "Output",
 CellLabel->
  "Out[325]//Short=",ExpressionUUID->"b472f155-1f04-497d-80f8-a1324d93a267"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"colorList", "=", 
  RowBox[{"{", 
   RowBox[{"Black", ",", "Red", ",", "Blue", ",", "Yellow"}], 
   "}"}]}]], "Input",ExpressionUUID->"6cfaf767-d8b6-417d-8813-7845394fa10b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"legend", "=", 
  RowBox[{"Association", "@", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"datagrouped", "[", 
         RowBox[{"[", 
          RowBox[{"\"\<human\>\"", ",", "All", ",", "\"\<Change\>\""}], "]"}],
          "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"list", "\[Rule]", 
       RowBox[{"RandomColor", "[", 
        RowBox[{"Length", "@", "list"}], "]"}]}], "]"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"8845ebbe-422d-484d-b466-a9e049b2c31b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"KR\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.010563313554859288`, 0.842598209242611, 0.28387676305890275`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.007042209036572859, 0.5617321394950741, 0.18925117537260183`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.010563313554859288`", ",", "0.842598209242611`", ",", 
            "0.28387676305890275`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.010563313554859288`, 0.842598209242611, 0.28387676305890275`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.010563313554859288`, 0.842598209242611, 0.28387676305890275`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"SG\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.18635688096651823`, 0.3224290263670765, 0.2859539040028191],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.27953532144977733`", ",", "0.4836435395506147`", ",", 
            "0.42893085600422864`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.27953532144977733`, 0.4836435395506147, 0.42893085600422864`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"IM\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.550447550119203, 0.1376882171135425, 0.10417086466364123`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.366965033412802, 0.09179214474236168, 0.06944724310909416],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.550447550119203`", ",", "0.1376882171135425`", ",", 
            "0.10417086466364123`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.550447550119203, 0.1376882171135425, 0.10417086466364123`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.550447550119203, 0.1376882171135425, 0.10417086466364123`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"TA\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.5007397164248966, 0.7840482366236328, 0.7045968561167071], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.3338264776165977, 0.5226988244157552, 0.4697312374111381],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5007397164248966`", ",", "0.7840482366236328`", ",", 
            "0.7045968561167071`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.5007397164248966, 0.7840482366236328, 0.7045968561167071]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5007397164248966, 0.7840482366236328, 0.7045968561167071],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"IV\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.2073047547900564, 0.09766618304217212, 0.7900750170440545], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.1382031698600376, 0.06511078869478142, 0.5267166780293697],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.2073047547900564`", ",", "0.09766618304217212`", ",", 
            "0.7900750170440545`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.2073047547900564, 0.09766618304217212, 0.7900750170440545]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.2073047547900564, 0.09766618304217212, 0.7900750170440545],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"MV\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.7368627516800415, 0.9854810528894713, 0.16876607015856604`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.491241834453361, 0.6569873685929809, 0.11251071343904404`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.7368627516800415`", ",", "0.9854810528894713`", ",", 
            "0.16876607015856604`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.7368627516800415, 0.9854810528894713, 0.16876607015856604`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.7368627516800415, 0.9854810528894713, 0.16876607015856604`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"HR\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.6257486253643563, 0.18583347602533107`, 0.08319093382232734], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.4171657502429042, 0.12388898401688739`, 0.05546062254821823],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.6257486253643563`", ",", "0.18583347602533107`", ",", 
            "0.08319093382232734`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.6257486253643563, 0.18583347602533107`, 0.08319093382232734]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6257486253643563, 0.18583347602533107`, 0.08319093382232734],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"NS\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9619547743747547, 0.5741162790544341, 0.1898822938015785], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6413031829165032, 0.3827441860362894, 0.12658819586771902`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9619547743747547`", ",", "0.5741162790544341`", ",", 
            "0.1898822938015785`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9619547743747547, 0.5741162790544341, 0.1898822938015785]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9619547743747547, 0.5741162790544341, 0.1898822938015785],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"ND\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.2786813860224029, 0.8446411358513435, 0.5682812147647314], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.18578759068160194`, 0.5630940905675623, 0.3788541431764876],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.2786813860224029`", ",", "0.8446411358513435`", ",", 
            "0.5682812147647314`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.2786813860224029, 0.8446411358513435, 0.5682812147647314]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.2786813860224029, 0.8446411358513435, 0.5682812147647314],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"QR\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.7161778051845769, 0.7079120059790731, 0.8547544010382961], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.47745187012305124`, 0.4719413373193821, 0.5698362673588642],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.7161778051845769`", ",", "0.7079120059790731`", ",", 
            "0.8547544010382961`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.7161778051845769, 0.7079120059790731, 0.8547544010382961]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.7161778051845769, 0.7079120059790731, 0.8547544010382961],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"KE\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9204697991268052, 0.01247026853391442, 0.588547608246031], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6136465327512035, 0.008313512355942947, 0.3923650721640207],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.9204697991268052`", ",", "0.01247026853391442`", ",", 
            "0.588547608246031`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.9204697991268052, 0.01247026853391442, 0.588547608246031]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.9204697991268052, 0.01247026853391442, 0.588547608246031],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"EG\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.5494103924690645, 0.28378601201396725`, 0.9354421828064061], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.3662735949793764, 0.18919067467597817`, 0.6236281218709374],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5494103924690645`", ",", "0.28378601201396725`", ",", 
            "0.9354421828064061`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.5494103924690645, 0.28378601201396725`, 0.9354421828064061]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5494103924690645, 0.28378601201396725`, 0.9354421828064061],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"RG\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.7039543181525214, 0.4665112553665334, 0.9831352427359885], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.46930287876834764`, 0.3110075035776889, 0.6554234951573257],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.7039543181525214`", ",", "0.4665112553665334`", ",", 
            "0.9831352427359885`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.7039543181525214, 0.4665112553665334, 0.9831352427359885]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.7039543181525214, 0.4665112553665334, 0.9831352427359885],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"YC\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.5185946438295199, 0.3923872911409534, 0.20838843032037646`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.3457297625530133, 0.2615915274273023, 0.13892562021358432`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5185946438295199`", ",", "0.3923872911409534`", ",", 
            "0.20838843032037646`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.5185946438295199, 0.3923872911409534, 0.20838843032037646`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5185946438295199, 0.3923872911409534, 0.20838843032037646`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"DG\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.965242919857114, 0.6592751425902181, 0.052085256107477385`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6434952799047426, 0.4395167617268121, 0.03472350407165159],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.965242919857114`", ",", "0.6592751425902181`", ",", 
            "0.052085256107477385`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.965242919857114, 0.6592751425902181, 0.052085256107477385`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.965242919857114, 0.6592751425902181, 0.052085256107477385`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"stop-W\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.5034569251580197, 0.09809664422436004, 0.7443255369657586], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.33563795010534647`, 0.06539776281624003, 0.4962170246438391],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5034569251580197`", ",", "0.09809664422436004`", ",", 
            "0.7443255369657586`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.5034569251580197, 0.09809664422436004, 0.7443255369657586]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5034569251580197, 0.09809664422436004, 0.7443255369657586],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"a76450d8-67f5-4877-9835-61c776711aad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"datagrouped", "[", 
    RowBox[{"[", 
     RowBox[{"\"\<human\>\"", ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Expected_frequency\>\"", ",", "\"\<Frequency\>\"", ",", 
        "\"\<Change\>\""}], "}"}]}], "]"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"legend", "[", "#Change", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Expected_frequency\>\"", "]"}], ",", 
        RowBox[{"#", "[", "\"\<Frequency\>\"", "]"}]}], "}"}], "]"}]}], "}"}],
    "&"}], "@", "%"}]}], "Input",
 CellLabel->
  "In[269]:=",ExpressionUUID->"8c21ecb1-73d2-4010-9dd8-157d2e7e995a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
   RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.142487047`"}], ",", 
   RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"KR\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "Out[269]=",ExpressionUUID->"19d9a1a3-ff8a-43cd-9115-8209bd311c02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9667064609168046, 0.5285123429565373, 0.8652303541057831],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6444709739445365, 0.35234156197102484`, 0.5768202360705221],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9667064609168046`", ",", "0.5285123429565373`", ",", 
           "0.8652303541057831`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9667064609168046, 0.5285123429565373, 0.8652303541057831]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9667064609168046, 0.5285123429565373, 0.8652303541057831],
    Editable->False,
    Selectable->False], ",", 
   RowBox[{"Point", "[", 
    RowBox[{"{", 
     RowBox[{"0.060606061`", ",", "0.142487047`"}], "}"}], "]"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[270]=",ExpressionUUID->"223f45f6-99ed-46e8-9386-b22f97ece4fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"datagrouped", "[", 
    RowBox[{"[", 
     RowBox[{"\"\<human\>\"", ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Expected_frequency\>\"", ",", "\"\<Frequency\>\"", ",", 
        "\"\<Change\>\""}], "}"}]}], "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"legend", "[", "#Change", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Expected_frequency\>\"", "]"}], ",", 
            RowBox[{"#", "[", "\"\<Frequency\>\"", "]"}]}], "}"}], "]"}]}], 
        "}"}], "&"}], "/@", "%"}], "]"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"3", "/", "4"}]}]}], "]"}], " "}]}], "Input",
 CellLabel->
  "In[313]:=",ExpressionUUID->"e0a8bd28-478e-42a9-bc61-38c05a59a72b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.04064322507625695, 0.3627923442493659, 0.902914832768742], 
    PointBox[{0.060606061, 0.142487047}]}, 
   {RGBColor[0.23361739090145806`, 0.1390373351552623, 0.2995173604681576], 
    PointBox[{0.060606061, 0.097797927}]}, 
   {RGBColor[0.4020552566491282, 0.6009179542388199, 0.8997685070725694], 
    PointBox[{0.03030303, 0.024611399}]}, 
   {RGBColor[0.8119215746370654, 0.341660133973706, 0.32956434240789423`], 
    PointBox[{0.121212121, 0.095854922}]}, 
   {RGBColor[0.3582402838933947, 0.9074768006501723, 0.15009765341951997`], 
    PointBox[{0.090909091, 0.065414508}]}, 
   {RGBColor[0.3478087766657538, 0.8453221545208962, 0.7663886820702759], 
    PointBox[{0.03030303, 0.02007772}]}, 
   {RGBColor[0.6339246368020175, 0.3064049679415348, 0.8286853674471442], 
    PointBox[{0.060606061, 0.027202073}]}, 
   {RGBColor[0.25197460772064195`, 0.9522188663036548, 0.40819435940913285`], 
    PointBox[{0.060606061, 0.060233161}]}, 
   {RGBColor[0.34338603653072686`, 0.9972086936628743, 0.1783810018246368], 
    PointBox[{0.060606061, 0.05634715}]}, 
   {RGBColor[0.04530217254815261, 0.5628315390236458, 0.9820499918715899], 
    PointBox[{0.060606061, 0.082901554}]}, 
   {RGBColor[0.22729213008718085`, 0.36092259853028774`, 0.6453764414911158], 
    PointBox[{0.060606061, 0.113989637}]}, 
   {RGBColor[0.20695912716891063`, 0.9815307989464592, 0.5713483445423035], 
    PointBox[{0.060606061, 0.073834197}]}, 
   {RGBColor[0.7918013734410252, 0.4113146872284421, 0.7294255004959611], 
    PointBox[{0.060606061, 0.064119171}]}, 
   {RGBColor[0.8475109754110157, 0.7223580269801828, 0.16490371977040374`], 
    PointBox[{0.060606061, 0.041450777}]}, 
   {RGBColor[0.20269028683621682`, 0.06476156477833395, 0.5965294587495871], 
    PointBox[{0.060606061, 0.030440415}]}, 
   {RGBColor[0.7045283670379703, 0.0051089776666422, 0.9312841772993765], 
    PointBox[{0.060606061, 0.003238342}]}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Frame->True,
  ImageSize->{140.73828125, Automatic}]], "Output",
 CellLabel->
  "Out[314]=",ExpressionUUID->"0367ff2e-a6dc-49e0-b929-d9487fd85b0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"datagrouped", "[", 
    RowBox[{"[", 
     RowBox[{"\"\<human\>\"", ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Expected_frequency\>\"", ",", "\"\<Frequency\>\""}], 
       "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->
  "In[227]:=",ExpressionUUID->"e2cee827-9626-4639-9d6d-52a4c9aa00a7"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
     AbsoluteThickness[1.6], 
     PointBox[{{0.060606061, 0.142487047}, {0.060606061, 0.097797927}, {
      0.03030303, 0.024611399}, {0.121212121, 0.095854922}, {0.090909091, 
      0.065414508}, {0.03030303, 0.02007772}, {0.060606061, 0.027202073}, {
      0.060606061, 0.060233161}, {0.060606061, 0.05634715}, {0.060606061, 
      0.082901554}, {0.060606061, 0.113989637}, {0.060606061, 0.073834197}, {
      0.060606061, 0.064119171}, {0.060606061, 0.041450777}, {0.060606061, 
      0.030440415}, {0.060606061, 0.003238342}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.028882575453125003`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{150.55078125, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.03030303, 0.121212121}, {0, 0.142487047}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[227]=",ExpressionUUID->"4b69da3f-ba14-4b38-a71b-8a3391cd5861"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"LEGEND", ":", "    ", 
   RowBox[{"StackedListPlot", "[", 
    RowBox[{"PercentWorldGDP", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Marketing\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Western Europe\>\"", ",", "\"\<Eastern Europe\>\"", ",", 
        "\"\<Former USSR\>\"", ",", "\"\<Western Offshoots\>\"", ",", 
        "\"\<Latin America\>\"", ",", "\"\<Japan\>\"", ",", "\"\<Asia\>\"", 
        ",", "\"\<Africa\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Year\>\"", ",", "\"\<% of World GDP\>\""}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "None"}]}], "]"}]}], "   ", 
  "*)"}]], "Input",ExpressionUUID->"d29e3cd7-9abd-4cd6-a45f-d707901185f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aList", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorList", "=", 
   RowBox[{"{", 
    RowBox[{"Black", ",", "Red", ",", "Blue", ",", "Yellow"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bList", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "#", "}"}], "&"}], "/@", "aList"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"bList", ",", 
   RowBox[{"PlotStyle", "\[Rule]", "colorList"}]}], "]"}]}], "Input",Expressio\
nUUID->"22fafb38-c628-4209-a527-21e2a6c934dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LineLegend", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorData", "[", "97", "]"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "y", "]"}], ",", 
     RowBox[{"Tan", "[", "z", "]"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[255]:=",ExpressionUUID->"c5cabd8c-77cb-4bb9-8426-a2c08ae3f21a"],

Cell[BoxData[
 TemplateBox[{
  RowBox[{"Sin", "[", "x", "]"}],RowBox[{"Cos", "[", "y", "]"}],
   RowBox[{"Tan", "[", "z", "]"}]},
  "LineLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.368417, 0.506779, 0.709798]], {
                  LineBox[{{0, 10}, {20, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.368417, 0.506779, 0.709798]], {}}}, AspectRatio -> 
               Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
               ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.880722, 0.611041, 0.142051]], {
                  LineBox[{{0, 10}, {20, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.880722, 0.611041, 0.142051]], {}}}, AspectRatio -> 
               Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
               ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.560181, 0.691569, 0.194885]], {
                  LineBox[{{0, 10}, {20, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.560181, 0.691569, 0.194885]], {}}}, AspectRatio -> 
               Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
               ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"LineLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[
                0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}], 
                 "]"}], NumberMarks -> False]], Appearance -> None, 
             BaseStyle -> {}, BaselinePosition -> Baseline, 
             DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.368417, 0.506779, 0.709798]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
            Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}], 
                 "]"}], NumberMarks -> False]], Appearance -> None, 
             BaseStyle -> {}, BaselinePosition -> Baseline, 
             DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.880722, 0.611041, 0.142051]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
            Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[0.37345400000000006`, 0.461046, 0.12992333333333334`],
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}], 
                 "]"}], NumberMarks -> False]], Appearance -> None, 
             BaseStyle -> {}, BaselinePosition -> Baseline, 
             DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.560181, 0.691569, 0.194885]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
            Selectable -> False]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[255]=",ExpressionUUID->"6ec89411-4d8f-4d10-b4a8-be14b5185577"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Change\>\""}], "]"}], "]"}]}], ",", 
  RowBox[{"PlotStyle", "\[Rule]", 
   RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
  RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color", "=", "change"}], ",", 
  RowBox[{"PlotLegends", "\[Rule]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.3", ",", "0.5", ",", "0.8"}], "}"}], " ", "PlotTheme"}], 
    "\[Rule]", "\"\<Scientific\>\""}]}]}], "\[IndentingNewLine]"}], "Input",Ex\
pressionUUID->"b13cf40e-672e-40e2-9847-e3982c7e475c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"datagrouped", "[", 
        RowBox[{"[", 
         RowBox[{"\"\<human\>\"", ",", "All", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Frequency\>\"", ",", "\"\<Change\>\""}], "}"}]}], 
         "]"}], "]"}], "]"}], "[", "\"\<Change\>\"", "]"}], ",", 
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"datagrouped", "[", 
        RowBox[{"[", 
         RowBox[{"\"\<human\>\"", ",", "All", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Frequency\>\"", ",", "\"\<Change\>\""}], "}"}]}], 
         "]"}], "]"}], "]"}], "[", "\"\<Frequency\>\"", "]"}]}], "}"}], "]"}],
   "]"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"f8fb13d9-5a38-40bb-8b95-bb1b8ab57355"],

Cell[BoxData[
 GraphicsBox[
  PointBox[{{
    Association["Frequency" -> 0.142487047, "Change" -> "KR"], Association[
     "Frequency" -> 0.097797927, "Change" -> "SG"], Association[
     "Frequency" -> 0.024611399, "Change" -> "IM"], Association[
     "Frequency" -> 0.095854922, "Change" -> "TA"], Association[
     "Frequency" -> 0.065414508, "Change" -> "IV"], Association[
     "Frequency" -> 0.02007772, "Change" -> "MV"], Association[
     "Frequency" -> 0.027202073, "Change" -> "HR"], Association[
     "Frequency" -> 0.060233161, "Change" -> "NS"], Association[
     "Frequency" -> 0.05634715, "Change" -> "ND"], Association[
     "Frequency" -> 0.082901554, "Change" -> "QR"], Association[
     "Frequency" -> 0.113989637, "Change" -> "KE"], Association[
     "Frequency" -> 0.073834197, "Change" -> "EG"], Association[
     "Frequency" -> 0.064119171, "Change" -> "RG"], Association[
     "Frequency" -> 0.041450777, "Change" -> "YC"], Association[
     "Frequency" -> 0.030440415, "Change" -> "DG"], Association[
     "Frequency" -> 0.003238342, "Change" -> "stop-W"]}["Change"], {
    Association["Frequency" -> 0.142487047, "Change" -> "KR"], Association[
     "Frequency" -> 0.097797927, "Change" -> "SG"], Association[
     "Frequency" -> 0.024611399, "Change" -> "IM"], Association[
     "Frequency" -> 0.095854922, "Change" -> "TA"], Association[
     "Frequency" -> 0.065414508, "Change" -> "IV"], Association[
     "Frequency" -> 0.02007772, "Change" -> "MV"], Association[
     "Frequency" -> 0.027202073, "Change" -> "HR"], Association[
     "Frequency" -> 0.060233161, "Change" -> "NS"], Association[
     "Frequency" -> 0.05634715, "Change" -> "ND"], Association[
     "Frequency" -> 0.082901554, "Change" -> "QR"], Association[
     "Frequency" -> 0.113989637, "Change" -> "KE"], Association[
     "Frequency" -> 0.073834197, "Change" -> "EG"], Association[
     "Frequency" -> 0.064119171, "Change" -> "RG"], Association[
     "Frequency" -> 0.041450777, "Change" -> "YC"], Association[
     "Frequency" -> 0.030440415, "Change" -> "DG"], Association[
     "Frequency" -> 0.003238342, "Change" -> "stop-W"]}[
    "Frequency"]}]]], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"b12c004f-6f81-4694-be05-faf9f8887f74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datagrouped", "[", 
   RowBox[{"[", 
    RowBox[{"\"\<human\>\"", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Frequency\>\"", ",", "\"\<Change\>\""}], "}"}]}], "]"}], 
   "]"}], " "}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"ad574260-c155-497d-b26b-91b8b0684ccc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 16, "Length" -> 16, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Frequency", "Change"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String]}], 16], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "Frequency"} -> 1, {All, "Change"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Frequency" -> TypeSystem`PackageScope`AtomShape[60], "Change" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001]]]], 
           16, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[632463185], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Frequency", "Change"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String]}], 16], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[632463185]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 419815926][{
                    All, "Frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[All, "Frequency"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Change\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Change\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 419815926][{
                    All, "Change"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[All, "Change"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.142487"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["KR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[1, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0977979"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["SG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[2, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0246114"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["IM", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[3, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0958549"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["TA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[4, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0654145"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[5, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["IV", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[5, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0200777"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[6, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MV", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[6, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0272021"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[7, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["HR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[7, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0602332"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[8, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["NS", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[8, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0563472"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[9, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ND", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[9, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0829016"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[10, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["QR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[10, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.11399"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[11, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["KE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[11, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0738342"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[12, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[12, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0641192"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[13, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[13, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0414508"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[14, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["YC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[14, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.0304404"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[15, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["DG", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[15, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.00323834"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[16, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["stop-W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
                  GeneralUtilities`Slice[16, 
                   Key["Change"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 419815926][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 419815926]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[419815926][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {151., {217.134033203125, 222.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"9dacd4b4-5a4d-4a67-aa62-7b9175563e6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bars", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{"datagrouped", "[", 
     RowBox[{"[", 
      RowBox[{"\"\<human\>\"", ",", "All", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Frequency\>\"", ",", "\"\<Change\>\""}], "}"}]}], "]"}], 
     "]"}], " ", ",", 
    RowBox[{"ChartLegends", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"cb6b2584-eb84-4e14-8202-3d435d9c53df"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.9296889436402842, 0.}, {63.20403449337847, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.1507545426547585`, 0.}, {2.490452725592855, 
                 0.142487047}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.142487047]& , TagBoxNote -> "0.142487047"], 
             StyleBox["0.142487047`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.142487047, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.131659993840469, 0.}, {6.4713581767785655`, 
                 0.097797927}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.097797927]& , TagBoxNote -> "0.097797927"], 
             StyleBox["0.097797927`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.097797927, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{10.11256544502618, 0.}, {10.452263627964276`, 
                 0.024611399}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.024611399]& , TagBoxNote -> "0.024611399"], 
             StyleBox["0.024611399`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.024611399, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{14.09347089621189, 0.}, {14.433169079149987`, 
                 0.095854922}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.095854922]& , TagBoxNote -> "0.095854922"], 
             StyleBox["0.095854922`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.095854922, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{18.0743763473976, 0.}, {18.414074530335697`, 
                 0.065414508}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.065414508]& , TagBoxNote -> "0.065414508"], 
             StyleBox["0.065414508`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.065414508, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{22.05528179858331, 0.}, {22.394979981521406`, 
                 0.02007772}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.02007772]& , TagBoxNote -> "0.02007772"], 
             StyleBox["0.02007772`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.02007772, {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{26.036187249769018`, 0.}, {26.375885432707115`, 
                 0.027202073}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.027202073]& , TagBoxNote -> "0.027202073"], 
             StyleBox["0.027202073`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.027202073, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{30.017092700954727`, 0.}, {30.356790883892824`, 
                 0.060233161}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.060233161]& , TagBoxNote -> "0.060233161"], 
             StyleBox["0.060233161`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.060233161, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{33.99799815214044, 0.}, {34.33769633507853, 
                 0.05634715}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.05634715]& , TagBoxNote -> "0.05634715"], 
             StyleBox["0.05634715`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.05634715, {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{37.978903603326145`, 0.}, {38.31860178626424, 
                 0.082901554}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.082901554]& , TagBoxNote -> "0.082901554"], 
             StyleBox["0.082901554`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.082901554, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{41.95980905451185, 0.}, {42.299507237449944`, 
                 0.113989637}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.113989637]& , TagBoxNote -> "0.113989637"], 
             StyleBox["0.113989637`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.113989637, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{45.94071450569756, 0.}, {46.28041268863565, 
                 0.073834197}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.073834197]& , TagBoxNote -> "0.073834197"], 
             StyleBox["0.073834197`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.073834197, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{49.92161995688326, 0.}, {50.261318139821356`, 
                 0.064119171}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.064119171]& , TagBoxNote -> "0.064119171"], 
             StyleBox["0.064119171`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.064119171, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{53.90252540806897, 0.}, {54.24222359100706, 
                 0.041450777}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.041450777]& , TagBoxNote -> "0.041450777"], 
             StyleBox["0.041450777`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.041450777, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{57.88343085925467, 0.}, {58.22312904219277, 
                 0.030440415}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.030440415]& , TagBoxNote -> "0.030440415"], 
             StyleBox["0.030440415`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.030440415, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.476]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{61.86433631044038, 0.}, {62.20403449337847, 
                 0.003238342}, "RoundingRadius" -> 0]}], 
              StatusArea[#, 0.003238342]& , TagBoxNote -> "0.003238342"], 
             StyleBox["0.003238342`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.003238342, {}], 
             "Tooltip"]& ]}, {}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.9296889436402842, 0.}, {64.44952140437321, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{2.1507545426547585`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {2.1507545426547585`, 
              0.}]}], 
           LineBox[{{63.20403449337846, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {63.20403449337846, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{3.4904527255928546`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.4904527255928546`, 
                0.}]}], 
             LineBox[{{6.131659993840469, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.131659993840469, 
                0.}]}], 
             LineBox[{{7.471358176778565, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {7.471358176778565, 
                0.}]}], 
             LineBox[{{10.112565445026178`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.112565445026178`, 
                0.}]}], 
             LineBox[{{11.452263627964275`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {11.452263627964275`, 
                0.}]}], 
             LineBox[{{14.093470896211887`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.093470896211887`, 
                0.}]}], 
             LineBox[{{15.433169079149984`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {15.433169079149984`, 
                0.}]}], 
             LineBox[{{18.0743763473976, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.0743763473976, 
                0.}]}], 
             LineBox[{{19.414074530335693`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {19.414074530335693`, 
                0.}]}], 
             LineBox[{{22.055281798583305`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {22.055281798583305`, 
                0.}]}], 
             LineBox[{{23.394979981521402`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {23.394979981521402`, 
                0.}]}], 
             LineBox[{{26.036187249769014`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {26.036187249769014`, 
                0.}]}], 
             LineBox[{{27.37588543270711, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {27.37588543270711, 
                0.}]}], 
             LineBox[{{30.017092700954723`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {30.017092700954723`, 
                0.}]}], 
             LineBox[{{31.35679088389282, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {31.35679088389282, 
                0.}]}], 
             LineBox[{{33.99799815214043, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {33.99799815214043, 
                0.}]}], 
             LineBox[{{35.33769633507852, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {35.33769633507852, 
                0.}]}], 
             LineBox[{{37.97890360332613, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {37.97890360332613, 
                0.}]}], 
             LineBox[{{39.318601786264225`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {39.318601786264225`, 
                0.}]}], 
             LineBox[{{41.95980905451184, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {41.95980905451184, 
                0.}]}], 
             LineBox[{{43.29950723744993, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {43.29950723744993, 
                0.}]}], 
             LineBox[{{45.94071450569754, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {45.94071450569754, 
                0.}]}], 
             LineBox[{{47.280412688635636`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {47.280412688635636`, 
                0.}]}], 
             LineBox[{{49.92161995688325, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {49.92161995688325, 
                0.}]}], 
             LineBox[{{51.26131813982134, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {51.26131813982134, 
                0.}]}], 
             LineBox[{{53.90252540806895, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {53.90252540806895, 
                0.}]}], 
             LineBox[{{55.24222359100705, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {55.24222359100705, 
                0.}]}], 
             LineBox[{{57.88343085925466, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {57.88343085925466, 
                0.}]}], 
             LineBox[{{59.22312904219275, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {59.22312904219275, 
                0.}]}], 
             LineBox[{{61.864336310440365`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {61.864336310440365`, 
                0.}]}]}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.9296889436402842, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Frequency\"", "\"Change\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.476]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.476]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.476`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.476`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"c6fb97a7-ece7-4705-8134-c68e1ac61236"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"datagrouped", "[", 
    RowBox[{"[", 
     RowBox[{"\"\<human\>\"", ",", "All", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Expected_frequency\>\"", ",", "\"\<Frequency\>\"", ",", 
        "\"\<Change\>\""}], "}"}]}], "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"legend", "[", "#Change", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Expected_frequency\>\"", "]"}], ",", 
            RowBox[{"#", "[", "\"\<Frequency\>\"", "]"}]}], "}"}], "]"}]}], 
        "}"}], "&"}], "/@", "%"}], "]"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"3", "/", "4"}]}]}], "]"}], " "}]}], "Input",ExpressionUUID->\
"32e6d59b-ca5f-40e9-b8be-e0187b3586eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"datagrouped", "[", 
   RowBox[{"[", 
    RowBox[{"\"\<human\>\"", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Expected_frequency\>\"", ",", "\"\<Frequency\>\"", ",", 
       "\"\<Change\>\""}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"b0b45f43-3342-4b73-9ffb-93df3150e331"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.142487047`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"KR\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.097797927`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"SG\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.03030303`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.024611399`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"IM\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.121212121`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.095854922`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"TA\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.090909091`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.065414508`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"IV\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.03030303`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.02007772`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"MV\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.027202073`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"HR\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.060233161`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"NS\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.05634715`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"ND\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.082901554`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"QR\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.113989637`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"KE\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.073834197`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"EG\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.064119171`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"RG\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.041450777`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"YC\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.030440415`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"DG\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Expected_frequency\"\>", "\[Rule]", "0.060606061`"}], ",", 
     RowBox[{"\<\"Frequency\"\>", "\[Rule]", "0.003238342`"}], ",", 
     RowBox[{"\<\"Change\"\>", "\[Rule]", "\<\"stop-W\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"9ecf420a-1bd2-41d2-b3fb-8c60cceecc7a"]
}, Open  ]],

Cell[BoxData["BoxWhiskerChart"], "Input",
 CellChangeTimes->{{3.739303589742978*^9, 
  3.7393035956109343`*^9}},ExpressionUUID->"36b9b4dc-b325-4516-ade4-\
48e7d86e7ea6"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{980, 1043},
WindowMargins->{{Automatic, 139}, {Automatic, 363}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], PageWidth -> WindowWidth, ShowCellBracket -> False, 
    CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellElementSpacings -> {"ClosedGroupTopMargin" -> 150}, 
    CellGroupingRules -> {"TitleGrouping", 0}, PageBreakAbove -> True, 
    CellFrameMargins -> {{20, 50}, {6, 78}}, TextAlignment -> Left, 
    LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
    CounterIncrements -> {"Title"}, 
    CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
      "Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {"Subitem", 0}, {
      "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
      "SubsubitemNumbered", 0}}, MenuSortingValue -> 1100, MenuCommandKey -> 
    "1", FontFamily -> "Source Sans Pro", FontSize -> 44, 
    FontTracking -> -0.8, FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["Abstract"], PageWidth -> WindowWidth, ShowCellBracket -> False,
     ShowSelection -> True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {24, 2}}, TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 16, FontSlant -> "Italic", 
    FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorInfo"], PageWidth -> WindowWidth, 
    CellFrame -> {{0, 0}, {8, 0}}, ShowCellBracket -> True, ShowSelection -> 
    True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {10, 4}}, CellFrameColor -> 
    RGBColor[0.988235, 0.403922, 0.0313725], TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 17, FontWeight -> "SemiBold",
     FontSlant -> "Plain", FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Chapter"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {10, 45}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subchapter", "Backspace" -> 
         "Title", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> "Title"}, 
       CellGroupingRules -> {"SectionGrouping", 10}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Chapter", 
       CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
         "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1150, MenuCommandKey -> "2", FontFamily -> "Source Sans Pro", FontSize -> 
       34, FontTracking -> -0.5, FontColor -> 
       RGBColor[
        0.21176470588235294`, 0.21176470588235294`, 0.21176470588235294`]], 
      Cell[
       StyleData["Chapter", "Presentation"], 
       CellMargins -> {{67, Inherited}, {10, 15}}, LineSpacing -> {1, 16}, 
       FontSize -> 48], 
      Cell[
       StyleData["Chapter", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
       LineSpacing -> {1, 2}, FontSize -> 48], 
      Cell[
       StyleData["Chapter", "Condensed"], CellMargins -> {{18, 10}, {5, 7}}, 
       FontSize -> 14], 
      Cell[
       StyleData["Chapter", "Printout"], 
       CellMargins -> {{10, Inherited}, {10, 15}}], 
      Cell[
       StyleData["Chapter", "PrintoutGray"], 
       CellMargins -> {{10, Inherited}, {10, 15}}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> False, ShowCellBracket -> True, 
       CellMargins -> {{20, 30}, {10, 25}}, Evaluatable -> False, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       CellChangeTimes -> {3.716825484342502*^9}, Hyphenation -> False, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "ItemNumbered", 0}}, AspectRatioFixed -> True, FontFamily -> 
       "Source Sans Pro", FontSize -> 28, FontTracking -> -0.5, FontColor -> 
       RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Section", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "Printout", StyleDefinitions -> None]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {6, 12}}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}, {"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 23, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Subsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowCellBracket -> False, 
       CellMargins -> {{21, 21}, {2, 8}}, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsubsection", CounterAssignments -> {{"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.9254901960784314, 0.49019607843137253`, 0.2]], 
      Cell[
       StyleData["Subsubsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    StyleData["FurtherExplorationSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
    ShowCellBracket -> False, CellMargins -> {{20, 30}, {4, 24}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, 
    CellFrameMargins -> {{0, 0}, {0, 22}}, CellFrameColor -> GrayLevel[0.8], 
    DefaultNewCellStyle -> "FurtherExploration", FontFamily -> 
    "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["FurtherExploration", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorshipSection"], ShowCellBracket -> False, 
    CellMargins -> {{20, Inherited}, {4, 22}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["Authorship", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> 
    RGBColor[0.4392156862745098, 0.4392156862745098, 0.4392156862745098]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], ShowCellBracket -> True, 
          CellMargins -> {{20, 10}, {6, 8}}, ReturnCreatesNewCell -> True, 
          DefaultNewCellStyle -> "Direction", FontSize -> 
          15, $CellContext`DefaultReturnCreatedCellStyle -> "Direction"], 
         Cell[
          StyleData["Text", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "Printout", StyleDefinitions -> None], 
          TextJustification -> 1.]}, Open]], 
      Cell[
       StyleData["CodeText", StyleDefinitions -> StyleData["Text"]], 
       CellMargins -> {{23, 10}, {3, 8}}, CellFrameLabelMargins -> 4, 
       MenuSortingValue -> 10000, MenuCommandKey -> "8", FontSize -> 15, 
       FontWeight -> "Plain", FontColor -> 
       GrayLevel[0.45], $CellContext`DefaultReturnCreatedCellStyle -> 
       "Input"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Input, Output and Graphics", "Section", 
       CellChangeTimes -> {3.7168930720372066`*^9}], 
      Cell[
       StyleData["Input"], CellMargins -> {{82, 10}, {5, 6}}, 
       StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
       AutoNumberFormatting -> False, FontSize -> 13], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{82, 10}, {7, 7}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "Condensed"], 
          CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}], 
         Cell[
          StyleData["InputOnly", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Code", "Condensed"], CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["Code", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Code", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{82, 10}, {10, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{100, 10}, {15, 8}}], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Output", "Condensed"], 
          CellMargins -> {{50, Inherited}, {3, 2}}], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{49, Inherited}, {9, 3}}], 
         Cell[
          StyleData["Output", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {9, 3}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PlacedGraphics"], CellFrame -> False, ShowCellBracket -> 
          False, CellMargins -> {{82, 21}, {8, 10}}, CellGroupingRules -> 
          "GraphicsGrouping", CellHorizontalScrolling -> True, ShowCellLabel -> 
          False, TextAlignment -> Left, LineSpacing -> {1, 1}, 
          InsetBoxOptions -> {
           BaseStyle -> {CellFrame -> None, Background -> None}}], 
         Cell[
          StyleData[
          "PlacedGraphics", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "Printout", StyleDefinitions -> None]]},
         Closed]], 
      Cell[
       StyleData["CellLabel"], LineSpacing -> {1, 1}, AutoNumberFormatting -> 
       False, FontSize -> 9, FontSlant -> "Oblique"]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 131, 0, 202, "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],
Cell[714, 24, 109, 0, 47, "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],
Cell[826, 26, 111, 0, 44, "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],
Cell[940, 28, 202712, 3326, 582, "Text",ExpressionUUID->"7966c5db-10b8-455f-985c-96961bb670f6"],
Cell[CellGroupData[{
Cell[203677, 3358, 270, 5, 28, "Input",ExpressionUUID->"59f6bd52-14d0-4fd4-b3bb-3b27f5ff9c6a"],
Cell[203950, 3365, 29771, 681, 295, "Output",ExpressionUUID->"0a83e092-234e-4f88-a708-b5b4e64d54a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233758, 4051, 98, 0, 71, "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],
Cell[233859, 4053, 114, 0, 34, "Text",ExpressionUUID->"dc3fa30d-000e-45b8-9f6e-f2ffca697a75"],
Cell[233976, 4055, 1077, 18, 195, "Text",ExpressionUUID->"efb827fc-a893-441c-9ea6-fec1aeab991e"],
Cell[235056, 4075, 88696, 1460, 304, "Text",ExpressionUUID->"8872d348-b100-4702-91e1-11567048ba7e"],
Cell[323755, 5537, 781, 12, 149, "Text",ExpressionUUID->"65ae3372-3440-4e21-ba0f-ab65baa15046"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324573, 5554, 78, 0, 71, "Section",ExpressionUUID->"69c2789e-757d-42de-8e7a-aa67a7c35b9d"],
Cell[324654, 5556, 497, 13, 50, "Input",ExpressionUUID->"e3998e4d-7b72-4f12-ab60-8520725af581"],
Cell[CellGroupData[{
Cell[325176, 5573, 318, 8, 28, "Input",ExpressionUUID->"7979d311-061d-491d-ba38-03cf71348bd0"],
Cell[325497, 5583, 105263, 2161, 583, "Output",ExpressionUUID->"b0045af9-f250-47ec-907e-e249e12bc4e9"]
}, Open  ]],
Cell[430775, 7747, 238, 5, 28, "Input",ExpressionUUID->"66758ac8-66ec-46d6-84b1-d412ee794bf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431050, 7757, 103, 0, 71, "Section",ExpressionUUID->"363992ed-65d6-4a46-9388-9c42d41918e4"],
Cell[CellGroupData[{
Cell[431178, 7761, 139, 1, 33, "Subsubsection",ExpressionUUID->"9459be29-4cf5-41f2-96e9-a8f4c74657c9"],
Cell[CellGroupData[{
Cell[431342, 7766, 1637, 40, 155, "Input",ExpressionUUID->"90a34831-7993-4130-8e8c-cc8e9d4ad7cb"],
Cell[432982, 7808, 17123, 350, 417, "Output",ExpressionUUID->"956d0dd7-aeda-4dc7-aef8-74200119205f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[450154, 8164, 137, 1, 33, "Subsubsection",ExpressionUUID->"dfedf0e6-f4f5-40ad-aa08-e64823e57432"],
Cell[450294, 8167, 298, 4, 57, "Text",ExpressionUUID->"76ead7ce-925d-4c38-8de9-8d0ca2222a6b"],
Cell[450595, 8173, 187, 5, 28, "Input",ExpressionUUID->"a12667cb-1910-444b-83d8-0d2892686eff"],
Cell[450785, 8180, 319, 5, 80, "Text",ExpressionUUID->"23bcec35-c0bf-482f-a612-9ae88406850a"],
Cell[451107, 8187, 148, 3, 28, "Input",ExpressionUUID->"facb202e-e8ab-47b7-ab4a-8547aa91e48b"],
Cell[451258, 8192, 360, 7, 103, "Text",ExpressionUUID->"c842159c-a0dd-4342-9eee-26c8930424de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451655, 8204, 139, 1, 33, "Subsubsection",ExpressionUUID->"0e9e68ab-c5a4-4cc2-9777-3d370938801c"],
Cell[451797, 8207, 148, 3, 28, "Input",ExpressionUUID->"e179378a-a219-4364-8c30-05136a9c72be"],
Cell[451948, 8212, 225, 4, 57, "Text",ExpressionUUID->"359d82da-f182-437b-b3b5-02b6a8b46061"],
Cell[452176, 8218, 148, 3, 28, "Input",ExpressionUUID->"6673350c-b0f3-4ac4-9912-65f52ce93683"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452361, 8226, 112, 0, 33, "Subsubsection",ExpressionUUID->"75a23c89-3c0b-4141-9728-8c294dbbfc9b"],
Cell[452476, 8228, 149, 3, 57, "Text",ExpressionUUID->"b703d608-6d9c-49e5-9ca4-f2ef23ffdb78"],
Cell[452628, 8233, 187, 5, 28, "Input",ExpressionUUID->"4ce55cee-46bf-4d69-81d2-5578cd470fb4"],
Cell[452818, 8240, 450, 7, 80, "Text",ExpressionUUID->"1c5660bd-c5a8-4d0f-b729-30b34f60828a"],
Cell[453271, 8249, 38937, 643, 158, "Text",ExpressionUUID->"f7431ea0-d863-4838-8346-448cffe3b092"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[492257, 8898, 94, 0, 71, "Section",ExpressionUUID->"9da19663-7179-45c9-8160-ad35832309c2"],
Cell[492354, 8900, 241, 6, 34, "Text",ExpressionUUID->"45c45f6e-321c-4ce7-9657-950c1134d308"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492632, 8911, 100, 0, 71, "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],
Cell[492735, 8913, 102, 0, 34, "Text",ExpressionUUID->"44146aed-2d19-4c66-bfba-1e67f1c1dfb3"],
Cell[CellGroupData[{
Cell[492862, 8917, 86, 0, 32, "Item",ExpressionUUID->"3d27619a-637d-405d-b02d-8b70dfdd9049"],
Cell[492951, 8919, 81, 0, 32, "Item",ExpressionUUID->"822fed98-613f-4b49-8b58-a0f6aa512fe1"],
Cell[493035, 8921, 83, 0, 32, "Item",ExpressionUUID->"633ac3d2-08ee-4f92-b695-b55e0c80957b"],
Cell[493121, 8923, 95, 0, 32, "Item",ExpressionUUID->"a4f29298-d52c-4cd1-b50e-00ce7b184488"],
Cell[493219, 8925, 90, 0, 32, "Item",ExpressionUUID->"0d6cb4fd-31cb-4541-b3a7-b2d99d2aabd8"],
Cell[493312, 8927, 91, 0, 32, "Item",ExpressionUUID->"7e5ff825-f0bf-48f4-90e0-022973883d09"]
}, Open  ]],
Cell[493418, 8930, 455, 6, 80, "Text",ExpressionUUID->"1fee1280-53c6-4307-aa00-579c0a0de28f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493910, 8941, 106, 0, 99, "Chapter",ExpressionUUID->"9beda6c9-df48-4d55-89ba-2044ea627e6d"],
Cell[494019, 8943, 152, 3, 28, "Input",ExpressionUUID->"90ab1dc0-8f96-4400-af34-cf8a622f02c7"],
Cell[CellGroupData[{
Cell[494196, 8950, 246, 7, 28, "Input",ExpressionUUID->"759a3db1-e5f5-4846-89c6-787e4aca663a"],
Cell[494445, 8959, 19934, 514, 32, "Output",ExpressionUUID->"b472f155-1f04-497d-80f8-a1324d93a267"]
}, Open  ]],
Cell[514394, 9476, 197, 4, 28, "Input",ExpressionUUID->"6cfaf767-d8b6-417d-8813-7845394fa10b"],
Cell[CellGroupData[{
Cell[514616, 9484, 621, 16, 50, "Input",ExpressionUUID->"8845ebbe-422d-484d-b466-a9e049b2c31b"],
Cell[515240, 9502, 32423, 835, 54, "Output",ExpressionUUID->"a76450d8-67f5-4877-9835-61c776711aad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547700, 10342, 807, 23, 50, "Input",ExpressionUUID->"8c21ecb1-73d2-4010-9dd8-157d2e7e995a"],
Cell[548510, 10367, 379, 8, 35, "Output",ExpressionUUID->"19d9a1a3-ff8a-43cd-9115-8209bd311c02"],
Cell[548892, 10377, 2156, 57, 32, "Output",ExpressionUUID->"223f45f6-99ed-46e8-9386-b22f97ece4fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551085, 10439, 1045, 30, 71, "Input",ExpressionUUID->"e0a8bd28-478e-42a9-bc61-38c05a59a72b"],
Cell[552133, 10471, 2151, 39, 119, "Output",ExpressionUUID->"0367ff2e-a6dc-49e0-b929-d9487fd85b0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554321, 10515, 513, 13, 50, "Input",ExpressionUUID->"e2cee827-9626-4639-9d6d-52a4c9aa00a7"],
Cell[554837, 10530, 1742, 42, 109, "Output",ExpressionUUID->"4b69da3f-ba14-4b38-a71b-8a3391cd5861"]
}, Open  ]],
Cell[556594, 10575, 877, 18, 92, "Input",ExpressionUUID->"d29e3cd7-9abd-4cd6-a45f-d707901185f4"],
Cell[557474, 10595, 858, 27, 92, "Input",ExpressionUUID->"22fafb38-c628-4209-a527-21e2a6c934dc"],
Cell[CellGroupData[{
Cell[558357, 10626, 452, 13, 28, "Input",ExpressionUUID->"c5cabd8c-77cb-4bb9-8426-a2c08ae3f21a"],
Cell[558812, 10641, 10637, 229, 88, "Output",ExpressionUUID->"6ec89411-4d8f-4d10-b4a8-be14b5185577"]
}, Open  ]],
Cell[569464, 10873, 687, 17, 71, "Input",ExpressionUUID->"b13cf40e-672e-40e2-9847-e3982c7e475c"],
Cell[CellGroupData[{
Cell[570176, 10894, 845, 22, 50, "Input",ExpressionUUID->"f8fb13d9-5a38-40bb-8b95-bb1b8ab57355"],
Cell[571024, 10918, 2246, 36, 374, "Output",ExpressionUUID->"b12c004f-6f81-4694-be05-faf9f8887f74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573307, 10959, 320, 8, 28, "Input",ExpressionUUID->"ad574260-c155-497d-b26b-91b8b0684ccc"],
Cell[573630, 10969, 23537, 462, 457, "Output",ExpressionUUID->"9dacd4b4-5a4d-4a67-aa62-7b9175563e6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597204, 11436, 572, 14, 50, "Input",ExpressionUUID->"cb6b2584-eb84-4e14-8202-3d435d9c53df"],
Cell[597779, 11452, 31403, 743, 233, "Output",ExpressionUUID->"c6fb97a7-ece7-4705-8134-c68e1ac61236"]
}, Open  ]],
Cell[629197, 12198, 1019, 29, 71, "Input",ExpressionUUID->"32e6d59b-ca5f-40e9-b8be-e0187b3586eb"],
Cell[CellGroupData[{
Cell[630241, 12231, 381, 9, 28, "Input",ExpressionUUID->"b0b45f43-3342-4b73-9ffb-93df3150e331"],
Cell[630625, 12242, 4772, 99, 380, "Output",ExpressionUUID->"9ecf420a-1bd2-41d2-b3fb-8c60cceecc7a"]
}, Open  ]],
Cell[635412, 12344, 169, 3, 28, "Input",ExpressionUUID->"36b9b4dc-b325-4516-ade4-48e7d86e7ea6"]
}, Open  ]]
}, Open  ]]
}
]
*)

